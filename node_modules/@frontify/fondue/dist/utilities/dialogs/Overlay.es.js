import { jsxs as D, Fragment as S, jsx as e } from "react/jsx-runtime";
import { useMemoizedId as z } from "../../hooks/useMemoizedId.es.js";
import { useRef as L, useState as P, useCallback as $, useEffect as j, Children as B, isValidElement as F } from "react";
import { Trigger as I } from "./Trigger.es.js";
import { Content as V } from "./Content.es.js";
import { OVERLAY_CONTAINER_CLASSES as K } from "../overlayStyle.es.js";
import { Modality as i } from "../../types/dialog.es.js";
import { merge as u } from "../merge.es.js";
import { useFocusTrap as T } from "../../hooks/useFocusTrap.es.js";
import { useClickOutside as X } from "../../hooks/useClickOutside.es.js";
import { useDropdownAutoHeight as Y } from "../../hooks/useDropdownAutoHeight.es.js";
import { Z_INDEX_MODAL_BACKDROP as Z } from "./constants.es.js";
import { Popper as f } from "../../components/Popper/Popper.es.js";
import { Portal as q } from "../../components/Portal/Portal.es.js";
const ft = ({
  open: t,
  placement: c = "bottom-start",
  offset: d = [0, 8],
  flip: p = !0,
  enablePortal: g,
  children: y,
  role: w = "region",
  "data-test-id": n = "fondue-overlay",
  maxWidth: N = "auto",
  maxHeight: x = "auto",
  minWidth: h = 0,
  minHeight: E = 0,
  handleClose: a,
  modality: r = i.NonModal,
  darkUnderlay: b,
  autoHeight: v,
  zIndex: C,
  isDetached: M,
  verticalAlignment: R
}) => {
  const m = z(), s = L(null), [A, O] = P(null), { maxHeight: H } = Y(
    { current: A },
    { isOpen: t, autoResize: !0 }
  ), _ = v ? H : x, k = $(() => {
    t && r !== i.BlockingModal && a && a();
  }, [a, r, t]);
  return T(s.current, t, r === i.NonModal), X(s.current, k), j(() => {
    t && r !== i.NonModal && (document.body.style.pointerEvents = "none"), t || (document.body.style.pointerEvents = "auto");
  }, [t, r]), /* @__PURE__ */ D(S, { children: [
    /* @__PURE__ */ e(
      f,
      {
        "data-test-id": n,
        open: t,
        placement: c,
        offset: d,
        flip: p,
        enablePortal: g,
        zIndex: C,
        isDetached: M,
        verticalAlignment: R,
        children: B.map(y, (o) => {
          if (F(o) && typeof o.type == "function") {
            const { displayName: l } = o.type;
            if (l === I.displayName)
              return /* @__PURE__ */ e(f.Reference, { children: /* @__PURE__ */ e("div", { id: m, ref: O, "data-test-id": `${n}-trigger`, children: o }) });
            if (l === V.displayName)
              return /* @__PURE__ */ e(f.Content, { children: /* @__PURE__ */ e(
                "div",
                {
                  ref: s,
                  "data-test-id": `${n}-content`,
                  className: u([
                    "tw-flex tw-flex-col tw-pointer-events-auto",
                    K
                  ]),
                  role: w,
                  id: m,
                  "aria-hidden": !t,
                  "aria-labelledby": m,
                  style: { minWidth: h, minHeight: E, maxWidth: N, maxHeight: _ },
                  children: o
                }
              ) });
          }
        })
      }
    ),
    r !== i.NonModal && t && /* @__PURE__ */ e(q, { children: /* @__PURE__ */ e(
      "div",
      {
        "data-test-id": `${n}-underlay`,
        className: u([
          "tw-fixed tw-top-0 tw-left-0 tw-bottom-0 tw-right-0",
          b && "tw-transition-opacity tw-bg-black tw-opacity-50"
        ]),
        style: { zIndex: Z }
      }
    ) })
  ] });
};
export {
  ft as Overlay
};
//# sourceMappingURL=Overlay.es.js.map

import { jsx as l } from "react/jsx-runtime";
import { useState as m, useCallback as S, useEffect as o } from "react";
import { usePopper as M } from "react-popper";
import { merge as c } from "../../utilities/merge.es.js";
import { useMenuKeyboardNavigation as y } from "./useMenuKeyboardNavigation.es.js";
import { useClickOutside as A } from "../../hooks/useClickOutside.es.js";
import { INSET_BORDER as C } from "../../utilities/borderStyle.es.js";
const I = "tw-relative tw-bg-base tw-rounded tw-py-2 tw-shadow-mid tw-z-[120000]", _ = c([I, C]), h = ({
  triggerRef: s,
  children: f,
  open: i = !0,
  offset: b = [0, 8],
  onClose: n,
  "data-test-id": N = "menu"
}) => {
  const [t, r] = m(i), [u, w] = m(null), [e, E] = m(null), p = y(
    t,
    u,
    "li > a, li > button:not(:disabled)"
  ), O = S(() => {
    e && t && (r(!1), n && n());
  }, [e, t, n]);
  A(u, O, [e]);
  const a = M(e, u, {
    placement: "bottom-start",
    strategy: "fixed",
    modifiers: [
      {
        name: "flip",
        enabled: !0
      },
      {
        name: "offset",
        options: {
          offset: b
        }
      }
    ]
  });
  return o(() => {
    const d = s == null ? void 0 : s.current;
    d && E(d);
  }, [s]), o(() => {
    r(i);
  }, [i]), o(() => {
    t && a.update && a.update();
  }, [t]), o(() => {
    p === "CLOSE_MENU" && e && (r(!1), n && n());
  }, [p, n, e]), /* @__PURE__ */ l(
    "nav",
    {
      className: c([_, t ? "tw-block" : "tw-hidden"]),
      role: t ? "dialog" : "",
      ref: w,
      style: e ? a.styles.popper : {},
      ...e ? a.attributes.popper : {},
      "data-test-id": N,
      children: /* @__PURE__ */ l("ol", { className: "tw-list-none", role: "menu", children: f })
    }
  );
};
h.displayName = "FondueMenu";
export {
  h as Menu
};
//# sourceMappingURL=Menu.es.js.map

import { jsx as i, jsxs as A } from "react/jsx-runtime";
import { useMemoizedId as I } from "../../hooks/useMemoizedId.es.js";
import { Plate as w } from "@udecode/plate";
import { ContentReplacement as C } from "./ContentReplacement.es.js";
import { RichTextEditorProvider as G } from "./context/RichTextEditorContext.es.js";
import { defaultPlugins as K } from "./Plugins/index.es.js";
import { PaddingSizes as z } from "./types.es.js";
import { BlurObserver as D } from "./BlurObserver.es.js";
import { useEditorState as M } from "./hooks/useEditorState.es.js";
import { KEY_ELEMENT_BREAK_AFTER_COLUMN as j, GAP_DEFAULT as v } from "./Plugins/ColumnBreakPlugin/createColumnBreakPlugin.es.js";
import { Position as f } from "./EditorPositioningWrapper/types.es.js";
import { forceToFocusNextElement as B } from "./helpers/forceToFocusElement.es.js";
import { parseRawValue as U } from "./utils/parseRawValue.es.js";
const Y = {
  position: "relative",
  height: "0"
}, b = ({
  id: u,
  value: s,
  placeholder: E = "",
  readonly: y = !1,
  onTextChange: T,
  onBlur: l,
  padding: h = z.None,
  position: m = f.FLOATING,
  plugins: n = K,
  updateValueOnChange: N = !1,
  onValueChanged: L,
  border: O = !0,
  toolbarWidth: R,
  hideExternalFloatingModals: x
}) => {
  var c, d;
  const t = I(u), { localValue: F, onChange: P, memoizedValue: S, config: r } = M({
    editorId: t,
    initialValue: s,
    onTextChange: T,
    plugins: n,
    onValueChanged: L
  }), e = n.plugins.find((o) => o.key === j), V = ((c = e == null ? void 0 : e.options) == null ? void 0 : c.columns) ?? 1, _ = ((d = e == null ? void 0 : e.options) == null ? void 0 : d.gap) ?? v, a = {
    placeholder: E,
    renderPlaceholder: ({ children: o, attributes: p }) => {
      const g = {
        ...p,
        style: {
          ...p.style,
          ...Y
        }
      };
      return /* @__PURE__ */ i("span", { ...g, children: o });
    },
    readOnly: y,
    onBlur: () => l && l(JSON.stringify(F.current)),
    className: `${h}`,
    style: {
      columns: V,
      columnGap: _,
      outline: "none"
    },
    onKeyDown: (o) => {
      o.code === "Tab" && B(o, !o.shiftKey);
    },
    scrollSelectionIntoView: () => {
    }
  };
  return /* @__PURE__ */ i(
    G,
    {
      value: {
        styles: r.styles(),
        position: m,
        border: O,
        editorId: t
      },
      children: /* @__PURE__ */ A(
        w,
        {
          id: t,
          onChange: P,
          editableProps: a,
          plugins: r.create(),
          initialValue: S,
          children: [
            !a.readOnly && r.toolbar(R),
            r.inline(),
            N && /* @__PURE__ */ i(C, { value: U({ editorId: t, raw: s, plugins: n }) }),
            m === f.FLOATING && /* @__PURE__ */ i(D, { hideExternalFloatingModals: x })
          ]
        }
      )
    }
  );
};
b.displayName = "FondueRichTextEditor";
export {
  b as RichTextEditor
};
//# sourceMappingURL=RichTextEditor.es.js.map

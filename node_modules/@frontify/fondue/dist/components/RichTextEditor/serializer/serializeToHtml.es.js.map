{"version":3,"file":"serializeToHtml.es.js","sources":["../../../../src/components/RichTextEditor/serializer/serializeToHtml.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { TDescendant } from '@udecode/plate';\nimport { CSSProperties } from 'react';\nimport { mapMentionable } from '../Plugins/MentionPlugin/helpers';\nimport { parseRawValue } from '../utils/parseRawValue';\nimport { serializeNodeToHtmlRecursive } from './utils/serializeNodeToHtmlRecursive';\nimport type { MentionableItems } from '../Plugins/MentionPlugin';\nimport { defaultStyles } from '../utils';\nimport { PluginComposer, defaultPlugins } from '../Plugins';\nimport { CSSPropertiesHover } from './types';\n\nexport const serializeRawToHtml = (\n    raw: string,\n    plugins: PluginComposer = defaultPlugins,\n    columns: SerializeNodesToHtmlOptions['columns'] = 1,\n    columnGap: SerializeNodesToHtmlOptions['columnGap'] = 'normal',\n): string => {\n    const nodes = parseRawValue({ raw, plugins });\n    const styles = plugins.getStyles;\n    return serializeNodesToHtml(nodes, { columns, columnGap, styles });\n};\nexport const serializeRawToHtmlAsync = async (\n    raw: string,\n    plugins: PluginComposer = defaultPlugins,\n    columns: SerializeNodesToHtmlOptions['columns'] = 1,\n    columnGap: SerializeNodesToHtmlOptions['columnGap'] = 'normal',\n): Promise<string> => {\n    const nodes = parseRawValue({ raw, plugins });\n    const styles = plugins.getStyles;\n    return Promise.resolve(serializeNodesToHtml(nodes, { columns, columnGap, styles }));\n};\n\nexport type SerializeNodesToHtmlOptions = {\n    styles?: Record<string, CSSPropertiesHover>;\n    mentionable?: MentionableItems;\n    columns?: number;\n    columnGap?: CSSProperties['columnGap'];\n};\n\nexport const serializeNodesToHtml = (\n    nodes: TDescendant[],\n    { mentionable, columns = 1, columnGap = 'normal', styles = defaultStyles }: SerializeNodesToHtmlOptions = {},\n): string => {\n    const mappedMentionable = mentionable ? mapMentionable(mentionable) : new Map();\n\n    let html = '';\n    for (let i = 0, len = nodes.length; i < len; i++) {\n        html += serializeNodeToHtmlRecursive(nodes[i], styles, {\n            mappedMentionable,\n        });\n    }\n\n    if (columns > 1) {\n        return `<div style=\"columns:${columns}; column-gap:${columnGap};\">${html}</div>`;\n    }\n\n    return html;\n};\n"],"names":["serializeRawToHtml","raw","plugins","defaultPlugins","columns","columnGap","nodes","parseRawValue","styles","serializeNodesToHtml","serializeRawToHtmlAsync","mentionable","defaultStyles","mappedMentionable","mapMentionable","html","i","len","serializeNodeToHtmlRecursive"],"mappings":";;;;;AAYa,MAAAA,IAAqB,CAC9BC,GACAC,IAA0BC,GAC1BC,IAAkD,GAClDC,IAAsD,aAC7C;AACT,QAAMC,IAAQC,EAAc,EAAE,KAAAN,GAAK,SAAAC,EAAS,CAAA,GACtCM,IAASN,EAAQ;AACvB,SAAOO,EAAqBH,GAAO,EAAE,SAAAF,GAAS,WAAAC,GAAW,QAAAG,GAAQ;AACrE,GACaE,IAA0B,OACnCT,GACAC,IAA0BC,GAC1BC,IAAkD,GAClDC,IAAsD,aACpC;AAClB,QAAMC,IAAQC,EAAc,EAAE,KAAAN,GAAK,SAAAC,EAAS,CAAA,GACtCM,IAASN,EAAQ;AAChB,SAAA,QAAQ,QAAQO,EAAqBH,GAAO,EAAE,SAAAF,GAAS,WAAAC,GAAW,QAAAG,EAAQ,CAAA,CAAC;AACtF,GASaC,IAAuB,CAChCH,GACA,EAAE,aAAAK,GAAa,SAAAP,IAAU,GAAG,WAAAC,IAAY,UAAU,QAAAG,IAASI,EAAc,IAAiC,CAAA,MACjG;AACT,QAAMC,IAAoBF,IAAcG,EAAeH,CAAW,wBAAQ;AAE1E,MAAII,IAAO;AACX,WAASC,IAAI,GAAGC,IAAMX,EAAM,QAAQU,IAAIC,GAAKD;AACzC,IAAAD,KAAQG,EAA6BZ,EAAMU,CAAC,GAAGR,GAAQ;AAAA,MACnD,mBAAAK;AAAA,IAAA,CACH;AAGL,SAAIT,IAAU,IACH,uBAAuBA,CAAO,gBAAgBC,CAAS,MAAMU,CAAI,WAGrEA;AACX;"}
import { parseRawValue as a } from "../utils/parseRawValue.es.js";
import { serializeNodeToHtmlRecursive as f } from "./utils/serializeNodeToHtmlRecursive.es.js";
import { defaultPlugins as i } from "../Plugins/index.es.js";
import { mapMentionable as d } from "../Plugins/MentionPlugin/helpers/mapMentionable.es.js";
import { defaultStyles as u } from "../utils/defaultStyles.es.js";
const R = (t, e = i, o = 1, r = "normal") => {
  const l = a({ raw: t, plugins: e }), s = e.getStyles;
  return c(l, { columns: o, columnGap: r, styles: s });
}, T = async (t, e = i, o = 1, r = "normal") => {
  const l = a({ raw: t, plugins: e }), s = e.getStyles;
  return Promise.resolve(c(l, { columns: o, columnGap: r, styles: s }));
}, c = (t, { mentionable: e, columns: o = 1, columnGap: r = "normal", styles: l = u } = {}) => {
  const s = e ? d(e) : /* @__PURE__ */ new Map();
  let n = "";
  for (let m = 0, p = t.length; m < p; m++)
    n += f(t[m], l, {
      mappedMentionable: s
    });
  return o > 1 ? `<div style="columns:${o}; column-gap:${r};">${n}</div>` : n;
};
export {
  c as serializeNodesToHtml,
  R as serializeRawToHtml,
  T as serializeRawToHtmlAsync
};
//# sourceMappingURL=serializeToHtml.es.js.map

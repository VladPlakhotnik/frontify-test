import { jsxs as T, Fragment as h, jsx as r } from "react/jsx-runtime";
import { DropdownItem as x } from "./DropdownItem.es.js";
import { DropdownTrigger as g } from "./DropdownTrigger.es.js";
import { useTextStyleDropdown as v } from "./useTextStyleDropdown.es.js";
import { DEFAULT_TEXT_STYLE_VALUE as l } from "../types.es.js";
const _ = ({ editorId: w, textStyles: t = [] }) => {
  var n;
  const {
    state: { editor: m, toggle: s, isOpen: d },
    dropdownProps: a,
    triggerRef: f,
    dropdownRef: c,
    key: b
  } = v(w);
  let p = l;
  const i = t.find((e) => {
    var o;
    return e.id === b && ((o = e.props) == null ? void 0 : o.label);
  });
  return i && (p = ((n = i.props) == null ? void 0 : n.label) || l), /* @__PURE__ */ T(h, { children: [
    /* @__PURE__ */ r(g, { label: p, open: d, onClick: s, ref: f }),
    d && /* @__PURE__ */ r(
      "div",
      {
        className: "tw-divide-y tw-divide-line tw-bg-base tw-shadow-md tw-border tw-border-line tw-z-[1000] tw-overflow-auto tw-min-h-[40px]",
        ref: c,
        ...a,
        children: t.map((e) => {
          var o;
          return /* @__PURE__ */ r(x, { editor: m, type: e, children: /* @__PURE__ */ r("span", { style: e.styles ?? {}, children: (o = e.props) == null ? void 0 : o.label }) }, e.id);
        })
      }
    )
  ] });
};
export {
  _ as TextStyleDropdown
};
//# sourceMappingURL=index.es.js.map

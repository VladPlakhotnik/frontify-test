import { jsx as i } from "react/jsx-runtime";
import { getTooltip as C } from "../../../helpers/getTooltip.es.js";
import { usePlateEditorState as f, useEventPlateId as p, someNode as B, ToolbarButton as b } from "@udecode/plate";
import { getButtonClassNames as k } from "../../helper.es.js";
import { toggleColumnBreak as g } from "../onKeyDownColumnBreak.es.js";
import { getColumnBreakCount as A } from "../utils/getColumnBreakCount.es.js";
const h = ({ id: t, ...n }) => {
  var a, l;
  const o = f(p(t)), m = !!(o != null && o.selection) && B(o, { match: (e) => !!e.breakAfterColumn }), u = (l = (a = o == null ? void 0 : o.pluginsByKey.breakAfterColumn) == null ? void 0 : a.options) == null ? void 0 : l.columns, r = Number(u) || 1, s = N(o, r, m), c = k(s);
  return /* @__PURE__ */ i(
    b,
    {
      active: m,
      tooltip: C(
        s ? `Column Break
Shift+Ctrl+Return` : "Already at maximum numbers of columns"
      ),
      onMouseDown: (e) => g(o, r, e),
      ...n,
      classNames: c
    }
  );
}, N = (t, n, o) => A(t) + 1 < n || o;
export {
  h as ColumnBreakToolbarButton,
  N as isColumnBreakEnabled
};
//# sourceMappingURL=ColumnBreakToolbarButton.es.js.map

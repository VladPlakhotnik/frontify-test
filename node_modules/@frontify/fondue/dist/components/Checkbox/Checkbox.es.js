import { jsx as r, jsxs as p } from "react/jsx-runtime";
import { InputLabel as Z } from "../InputLabel/InputLabel.es.js";
import { forwardRef as q, useState as v, useRef as E, useEffect as y, useCallback as R } from "react";
import { FOCUS_STYLE as T } from "../../utilities/focusStyle.es.js";
import { merge as o } from "../../utilities/merge.es.js";
import { mergeProps as ee } from "@react-aria/utils";
import { useCheckbox as te } from "@react-aria/checkbox";
import { useFocusRing as re } from "@react-aria/focus";
import { useForwardedRef as ne } from "../../utilities/useForwardedRef.es.js";
import { useMemoizedId as oe } from "../../hooks/useMemoizedId.es.js";
import { useToggleState as se } from "@react-stately/toggle";
import ie from "../../foundation/Icon/Generated/IconCheckMark.es.js";
import { IconSize as O } from "../../foundation/Icon/IconSize.es.js";
import le from "../../foundation/Icon/Generated/IconMinus.es.js";
var ce = /* @__PURE__ */ ((e) => (e.Checked = "Checked", e.Unchecked = "Unchecked", e.Mixed = "Mixed", e))(ce || {}), ae = /* @__PURE__ */ ((e) => (e.Default = "Default", e.Weak = "Weak", e.Strong = "Strong", e))(ae || {}), we = /* @__PURE__ */ ((e) => (e.Default = "Default", e.Large = "Large", e.XLarge = "XLarge", e))(we || {});
const de = (e) => e === "Checked" || e === "Mixed", W = "tw-bg-box-selected-strong tw-text-box-selected-strong-inverse hover:tw-bg-box-selected-strong-hover", ue = {
  Weak: "tw-bg-box-neutral-strong tw-text-box-neutral-strong-inverse hover:tw-bg-box-neutral-strong-hover",
  Default: W,
  Strong: W
}, fe = {
  Default: "tw-h-4 tw-w-4",
  Large: "tw-h-5 tw-w-5",
  XLarge: "tw-h-8 tw-w-8"
}, me = ({
  id: e,
  emphasis: k = "Default",
  size: C = "Default",
  disabled: s,
  required: b,
  label: i,
  hideLabel: g,
  tooltip: z,
  helperText: l,
  "aria-label": L = "Checkbox",
  value: U,
  groupInputProps: I,
  onChange: X,
  state: c = "Unchecked",
  "data-test-id": a = "checkbox"
}, $) => {
  const M = oe(e), t = ne($), { focusProps: j } = re(), P = se({
    onChange: s ? void 0 : X,
    isSelected: c === "Checked"
    /* Checked */
  }), [H, D] = v(), [F, K] = v(), w = E(null), d = E(null), [Y, _] = v(!1), [A, B] = v(!1), N = (n) => {
    n.key === "Tab" && D(!0);
  }, S = () => {
    D(!1);
  };
  y(() => {
    var n, f, m, x;
    F || ((n = t == null ? void 0 : t.current) == null || n.removeEventListener("keyup", N), (f = t == null ? void 0 : t.current) == null || f.addEventListener("keyup", N), (m = t == null ? void 0 : t.current) == null || m.removeEventListener("blur", S), (x = t == null ? void 0 : t.current) == null || x.addEventListener("blur", S), K(!0));
  }, [F, t]);
  const { inputProps: G } = te(
    {
      isDisabled: s,
      isRequired: b,
      isIndeterminate: c === "Mixed",
      "aria-label": L,
      value: U
    },
    P,
    t
  ), J = {
    Checked: /* @__PURE__ */ r(ie, { size: C === "XLarge" ? O.Size24 : O.Size16 }),
    Mixed: /* @__PURE__ */ r(le, {}),
    Unchecked: null
  }, h = de(c), Q = o([
    "tw-bg-box-disabled tw-pointer-events-none tw-text-box-disabled-inverse tw-border-line-strong",
    h && "tw-text-box-disabled-inverse tw-border-line-strong"
  ]), V = h ? ue[k] : o([
    "tw-bg-base hover:tw-bg-box-neutral",
    k === "Strong" ? "tw-border-2 tw-border-box-selected-strong" : "tw-border tw-border-line-xx-strong"
  ]), u = R(() => {
    var n, f, m, x;
    w.current && _(((n = w.current) == null ? void 0 : n.scrollWidth) > ((f = w.current) == null ? void 0 : f.clientWidth)), d.current && B(
      ((m = d.current) == null ? void 0 : m.scrollWidth) > ((x = d.current) == null ? void 0 : x.clientWidth)
    );
  }, [w, d]);
  return y(() => {
    if (!(!i && !l || g))
      return u(), window.removeEventListener("resize", u), window.addEventListener("resize", u), () => {
        window.removeEventListener("resize", u);
      };
  }, [i, l, g, u]), /* @__PURE__ */ r("div", { className: "tw-gap-1 tw-transition-colors tw-w-full", "data-test-id": a, children: /* @__PURE__ */ r("div", { className: o(["tw-inline-flex tw-flex-row tw-rounded tw-w-full", H ? T : ""]), children: /* @__PURE__ */ r(
    Z,
    {
      disabled: s,
      clickable: !0,
      htmlFor: M,
      tooltip: z,
      required: b,
      bold: h,
      children: /* @__PURE__ */ p("span", { className: "tw-flex tw-items-center tw-whitespace-nowrap", children: [
        /* @__PURE__ */ p("span", { className: "tw-inline-flex tw-mr-1.5", children: [
          /* @__PURE__ */ r(
            "input",
            {
              ...ee(I || G, j),
              id: M,
              ref: t,
              className: "tw-sr-only",
              "data-test-id": `${a}-input`,
              "aria-label": L,
              role: "checkbox",
              "aria-checked": c === "Checked",
              required: b
            }
          ),
          /* @__PURE__ */ r(
            "span",
            {
              "data-test-id": `${a}-icon-box`,
              "aria-hidden": "true",
              className: o([
                "tw-leading-3 tw-relative tw-flex tw-items-center tw-justify-center tw-rounded tw-shrink-0 tw-flex-none",
                fe[C],
                s ? Q : V
              ]),
              children: J[c]
            }
          )
        ] }),
        /* @__PURE__ */ p("span", { className: "tw-inline-flex tw-flex-col tw-min-w-0", children: [
          i && !g && /* @__PURE__ */ r(
            "span",
            {
              ref: w,
              "data-test-id": `${a}-label`,
              className: o([
                "tw-text-ellipsis tw-overflow-hidden",
                "tw-text-xs tw-select-none hover:tw-cursor-pointer hover:tw-text-black dark:hover:tw-text-white group-hover:tw-text-black dark:group-hover:tw-text-white",
                h && "tw-font-medium"
              ]),
              title: Y ? i : void 0,
              children: i
            }
          ),
          l && !g && /* @__PURE__ */ r(
            "span",
            {
              ref: d,
              "data-test-id": `${a}-helper-text`,
              className: o([
                "tw-text-ellipsis tw-overflow-hidden",
                "tw-font-sans tw-text-xs tw-font-normal",
                s ? "text-disabled" : "tw-text-text-weak"
              ]),
              title: A ? l : void 0,
              children: l
            }
          )
        ] })
      ] })
    }
  ) }) });
}, xe = q(me);
xe.displayName = "FondueCheckbox";
export {
  xe as Checkbox,
  ae as CheckboxEmphasis,
  we as CheckboxSize,
  ce as CheckboxState
};
//# sourceMappingURL=Checkbox.es.js.map

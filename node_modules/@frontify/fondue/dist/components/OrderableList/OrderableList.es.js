import { jsx as c } from "react/jsx-runtime";
import { useState as h, useEffect as I, useMemo as y } from "react";
import { useId as C } from "@react-aria/utils";
import { Tree as S } from "../Tree/Tree.es.js";
import { TreeItem as D } from "../Tree/TreeItem/TreeItem.es.js";
const v = (e, o) => e.sort === null && o.sort === null || e.sort === null ? 1 : o.sort === null ? -1 : e.sort - o.sort, x = (e, o, r) => {
  const n = r.find((s) => s.id === e);
  return n ? [{ ...n, sort: o }] : [];
}, H = ({
  onMove: e,
  dragDisabled: o,
  items: r,
  dragHandlerPosition: n = "none",
  itemStyle: s,
  selectedId: i,
  renderContent: m,
  "data-test-id": a = "orderable-list"
}) => {
  const [d, u] = h(r), f = C(), l = !o;
  I(() => {
    const t = [...r];
    t.sort(v), u(t);
  }, [r]);
  const p = (t) => {
    e(x(t.id, t.sort, d));
  }, g = y(() => ({
    spacingY: "small",
    contentHight: "content-fit",
    shadow: "small",
    borderRadius: "medium",
    borderWidth: "x-small",
    borderStyle: "solid",
    activeColorStyle: "soft",
    ...s
  }), [s]);
  return /* @__PURE__ */ c(
    S,
    {
      draggable: l,
      id: f,
      onDrop: p,
      "data-test-id": a,
      selectedIds: i ? [i] : [],
      itemStyle: g,
      showDragHandlerOnHoverOnly: !l,
      dragHandlerPosition: l ? n : "none",
      showContentWhileDragging: !0,
      children: d.map((t) => {
        const b = `collection-item-${t.id}`;
        return /* @__PURE__ */ c(
          D,
          {
            "data-test-id": `${a}-item`,
            id: t.id,
            type: "collection-item",
            accepts: "collection-item",
            expandable: !1,
            levelConstraint: 0,
            contentComponent: m(t)
          },
          b
        );
      })
    }
  );
};
H.displayName = "FondueOrderableList";
export {
  H as OrderableList
};
//# sourceMappingURL=OrderableList.es.js.map

{"version":3,"file":"Badge.es.js","sources":["../../../src/components/Badge/Badge.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { IconCross } from '@foundation/Icon/Generated';\nimport { IconSize } from '@foundation/Icon/IconSize';\nimport { FOCUS_VISIBLE_STYLE } from '@utilities/focusStyle';\nimport { merge } from '@utilities/merge';\nimport { ReactElement, ReactNode, cloneElement } from 'react';\nimport { BadgeStatusIcon } from './BadgeStatusIcon';\nimport { getCircularSizeClasses, getSizeClasses, getStyleClasses } from './helpers';\nimport { BadgeEmphasis, BadgeProps, BadgeStyle } from './types';\n\nexport const Badge = ({\n    children,\n    status,\n    icon,\n    style = BadgeStyle.Primary,\n    size = 'medium',\n    emphasis = BadgeEmphasis.None,\n    disabled = false,\n    onClick,\n    onDismiss,\n    'data-test-id': dataTestId = 'badge',\n    withTitleAttribute = true,\n}: BadgeProps): Nullable<ReactElement> => {\n    if (!children && !icon && !status) {\n        return null;\n    }\n\n    const Container = onClick ? 'button' : 'span';\n\n    const getNodeText = (node: ReactNode): string => {\n        if (['string', 'number'].includes(typeof node)) {\n            return node as string;\n        }\n        if (node instanceof Array) {\n            return node.map(getNodeText).join('');\n        }\n        if (node && typeof node === 'object' && 'props' in node) {\n            return getNodeText(node.props.children);\n        }\n        return '';\n    };\n\n    const badgeTitle = getNodeText(children);\n    const isCircular = !children && !onDismiss && Boolean(status || icon);\n\n    return (\n        <div\n            className={merge([\n                'tw-relative tw-rounded-full tw-inline-flex tw-items-center tw-align-top tw-min-w-0 tw-flex-initial tw-transition-color',\n                disabled\n                    ? 'tw-bg-box-disabled tw-text-box-disabled-inverse'\n                    : getStyleClasses(style, !!onClick, emphasis === BadgeEmphasis.Strong),\n            ])}\n            data-test-id={dataTestId}\n        >\n            <Container\n                onClick={() => onClick && onClick()}\n                className={merge([\n                    'tw-inline-flex tw-items-center tw-justify-center tw-rounded-full tw-select-none tw-flex-initial tw-min-w-0',\n                    onClick && !disabled ? 'hover:tw-cursor-pointer' : 'tw-cursor-default',\n                    isCircular\n                        ? getCircularSizeClasses(size)\n                        : getSizeClasses(children, status, icon, size, !!onDismiss),\n                    FOCUS_VISIBLE_STYLE,\n                ])}\n                data-test-id={`${dataTestId}-button`}\n                title={withTitleAttribute ? badgeTitle : undefined}\n            >\n                {status && <BadgeStatusIcon status={status} disabled={disabled} data-test-id={dataTestId} />}\n                {icon && (\n                    <span\n                        data-test-id={`${dataTestId}-icon`}\n                        className={merge([\n                            'tw-flex-none tw-leading-none',\n                            disabled && 'tw-opacity-30',\n                            !!children && 'tw-pr-1',\n                        ])}\n                    >\n                        {cloneElement(icon, { size: IconSize.Size16 })}\n                    </span>\n                )}\n                {children && (\n                    <span className=\"tw-text-center tw-text-xxs tw-font-sans tw-font-normal tw-truncate tw-px-0.5\">\n                        {children}\n                    </span>\n                )}\n            </Container>\n            {onDismiss && (\n                <button\n                    type=\"button\"\n                    data-test-id={`${dataTestId}-dismiss`}\n                    className={merge([\n                        'tw-absolute tw-rounded tw-leading-4',\n                        FOCUS_VISIBLE_STYLE,\n                        size === 'medium' ? 'tw-right-1.5' : 'tw-right-1',\n                    ])}\n                    onClick={() => onDismiss()}\n                    aria-label={`Dismiss ${badgeTitle}`}\n                >\n                    <IconCross size={IconSize.Size16} />\n                </button>\n            )}\n        </div>\n    );\n};\nBadge.displayName = 'FondueBadge';\n"],"names":["Badge","children","status","icon","style","BadgeStyle","size","emphasis","BadgeEmphasis","disabled","onClick","onDismiss","dataTestId","withTitleAttribute","Container","getNodeText","node","badgeTitle","isCircular","jsxs","merge","getStyleClasses","getCircularSizeClasses","getSizeClasses","FOCUS_VISIBLE_STYLE","jsx","BadgeStatusIcon","IconSize","IconCross"],"mappings":";;;;;;;;;AAWO,MAAMA,IAAQ,CAAC;AAAA,EAClB,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,MAAAC;AAAA,EACA,OAAAC,IAAQC,EAAW;AAAA,EACnB,MAAAC,IAAO;AAAA,EACP,UAAAC,IAAWC,EAAc;AAAA,EACzB,UAAAC,IAAW;AAAA,EACX,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA,gBAAgBC,IAAa;AAAA,EAC7B,oBAAAC,IAAqB;AACzB,MAA0C;AACtC,MAAI,CAACZ,KAAY,CAACE,KAAQ,CAACD;AAChB,WAAA;AAGL,QAAAY,IAAYJ,IAAU,WAAW,QAEjCK,IAAc,CAACC,MACb,CAAC,UAAU,QAAQ,EAAE,SAAS,OAAOA,CAAI,IAClCA,IAEPA,aAAgB,QACTA,EAAK,IAAID,CAAW,EAAE,KAAK,EAAE,IAEpCC,KAAQ,OAAOA,KAAS,YAAY,WAAWA,IACxCD,EAAYC,EAAK,MAAM,QAAQ,IAEnC,IAGLC,IAAaF,EAAYd,CAAQ,GACjCiB,IAAa,CAACjB,KAAY,CAACU,KAAa,GAAQT,KAAUC;AAG5D,SAAA,gBAAAgB;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,WAAWC,EAAM;AAAA,QACb;AAAA,QACAX,IACM,oDACAY,EAAgBjB,GAAO,CAAC,CAACM,GAASH,MAAaC,EAAc,MAAM;AAAA,MAAA,CAC5E;AAAA,MACD,gBAAcI;AAAA,MAEd,UAAA;AAAA,QAAA,gBAAAO;AAAA,UAACL;AAAA,UAAA;AAAA,YACG,SAAS,MAAMJ,KAAWA,EAAQ;AAAA,YAClC,WAAWU,EAAM;AAAA,cACb;AAAA,cACAV,KAAW,CAACD,IAAW,4BAA4B;AAAA,cACnDS,IACMI,EAAuBhB,CAAI,IAC3BiB,EAAetB,GAAUC,GAAQC,GAAMG,GAAM,CAAC,CAACK,CAAS;AAAA,cAC9Da;AAAA,YAAA,CACH;AAAA,YACD,gBAAc,GAAGZ,CAAU;AAAA,YAC3B,OAAOC,IAAqBI,IAAa;AAAA,YAExC,UAAA;AAAA,cAAAf,KAAW,gBAAAuB,EAAAC,GAAA,EAAgB,QAAAxB,GAAgB,UAAAO,GAAoB,gBAAcG,GAAY;AAAA,cACzFT,KACG,gBAAAsB;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACG,gBAAc,GAAGb,CAAU;AAAA,kBAC3B,WAAWQ,EAAM;AAAA,oBACb;AAAA,oBACAX,KAAY;AAAA,oBACZ,CAAC,CAACR,KAAY;AAAA,kBAAA,CACjB;AAAA,kBAEA,YAAaE,GAAM,EAAE,MAAMwB,EAAS,QAAQ;AAAA,gBAAA;AAAA,cACjD;AAAA,cAEH1B,KACG,gBAAAwB,EAAC,QAAK,EAAA,WAAU,gFACX,UAAAxB,GACL;AAAA,YAAA;AAAA,UAAA;AAAA,QAER;AAAA,QACCU,KACG,gBAAAc;AAAA,UAAC;AAAA,UAAA;AAAA,YACG,MAAK;AAAA,YACL,gBAAc,GAAGb,CAAU;AAAA,YAC3B,WAAWQ,EAAM;AAAA,cACb;AAAA,cACAI;AAAA,cACAlB,MAAS,WAAW,iBAAiB;AAAA,YAAA,CACxC;AAAA,YACD,SAAS,MAAMK,EAAU;AAAA,YACzB,cAAY,WAAWM,CAAU;AAAA,YAEjC,UAAC,gBAAAQ,EAAAG,GAAA,EAAU,MAAMD,EAAS,QAAQ;AAAA,UAAA;AAAA,QACtC;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA;AAIhB;AACA3B,EAAM,cAAc;"}
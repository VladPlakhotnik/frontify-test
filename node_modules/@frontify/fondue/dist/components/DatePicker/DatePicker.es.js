import { jsx as e, jsxs as f } from "react/jsx-runtime";
import { IconSize as r } from "../../foundation/Icon/IconSize.es.js";
import { format as L, getYear as T } from "date-fns";
import { forwardRef as _, useState as F } from "react";
import G from "react-datepicker";
import "./DatePicker.css.es.js";
import { DatePickerTrigger as H } from "./DatePickerTrigger.es.js";
import { Validation as V } from "../../utilities/validation.es.js";
import Y from "../../foundation/Icon/Generated/IconCaretLeftDouble.es.js";
import $ from "../../foundation/Icon/Generated/IconCaretLeft.es.js";
import q from "../../foundation/Icon/Generated/IconCaretRight.es.js";
import J from "../../foundation/Icon/Generated/IconCaretRightDouble.es.js";
import { Button as i } from "../Button/Button.es.js";
import { ButtonStyle as s, ButtonSize as o, ButtonEmphasis as n } from "../Button/ButtonTypes.es.js";
const K = 40, Q = (d, a) => d === "single" ? a < /* @__PURE__ */ new Date() ? "past-date" : "future-date" : "range-day", U = _(
  ({
    placeHolder: d = "Select a date",
    isClearable: a,
    shouldCloseOnSelect: y,
    onChange: u,
    onOpen: l,
    onClose: m,
    onBlur: C,
    onKeyDown: k,
    dateFormat: z = "MMM dd, yyyy",
    value: M,
    startDate: x,
    endDate: S,
    minDate: I,
    maxDate: N,
    validation: R = V.Default,
    customTrigger: b,
    customHeader: P,
    children: W,
    hasPopperArrow: B = !0,
    preventOpenOnFocus: O = !1,
    filterDate: j = () => !0,
    variant: w = "single",
    "data-test-id": A = "date-picker"
  }, v) => {
    const [E, h] = F(!1);
    return /* @__PURE__ */ e("div", { "data-test-id": A, children: /* @__PURE__ */ e(
      G,
      {
        calendarClassName: "tw-rounded-sm tw-border tw-border-line-x-strong react-datepicker-wrap",
        selected: M,
        startDate: x,
        endDate: S,
        minDate: I,
        maxDate: N,
        calendarStartDay: 1,
        onChange: u,
        onKeyDown: k,
        onBlur: C,
        selectsRange: w === "range",
        showPopperArrow: B,
        preventOpenOnFocus: O,
        filterDate: j,
        customInput: b ?? /* @__PURE__ */ e(
          H,
          {
            isCalendarOpen: E,
            isClearable: a,
            placeHolder: d,
            validation: R,
            onDateChanged: u
          }
        ),
        ref: v,
        formatWeekDay: (t) => t.slice(0, 1),
        isClearable: a,
        dateFormat: z,
        onCalendarClose: () => {
          h(!1), m == null || m();
        },
        onCalendarOpen: () => {
          h(!0), l == null || l();
        },
        shouldCloseOnSelect: y,
        dayClassName: (t) => Q(w, t),
        popperProps: {
          strategy: "fixed"
        },
        renderCustomHeader: ({ date: t, decreaseMonth: c, increaseMonth: p, increaseYear: g, decreaseYear: D }) => /* @__PURE__ */ f("div", { className: "tw-flex tw-flex-col tw-gap-3", children: [
          P,
          /* @__PURE__ */ f("div", { className: "tw-flex tw-justify-between tw-pb-4 tw-px-0", children: [
            /* @__PURE__ */ e(
              i,
              {
                style: s.Default,
                size: o.Medium,
                onClick: D,
                emphasis: n.Weak,
                icon: /* @__PURE__ */ e(Y, { size: r.Size20 })
              }
            ),
            /* @__PURE__ */ e(
              i,
              {
                style: s.Default,
                size: o.Medium,
                onClick: c,
                emphasis: n.Weak,
                icon: /* @__PURE__ */ e($, { size: r.Size20 })
              }
            ),
            /* @__PURE__ */ f("p", { className: "tw-font-sans tw-font-semibold tw-grow tw-self-center", children: [
              L(t, "MMMM"),
              " ",
              T(t)
            ] }),
            /* @__PURE__ */ e(
              i,
              {
                style: s.Default,
                size: o.Medium,
                onClick: p,
                emphasis: n.Weak,
                icon: /* @__PURE__ */ e(q, { size: r.Size20 })
              }
            ),
            /* @__PURE__ */ e(
              i,
              {
                style: s.Default,
                size: o.Medium,
                onClick: g,
                emphasis: n.Weak,
                icon: /* @__PURE__ */ e(J, { size: r.Size20 })
              }
            )
          ] })
        ] }),
        popperModifiers: [
          {
            name: "arrow",
            options: {
              padding: ({ popper: t, reference: c, placement: p }) => ({
                [`${p.includes("end") ? "left" : "right"}`]: Math.max(t.width, Math.min(t.width, c.width)) - K
              })
            }
          }
        ],
        children: W
      }
    ) });
  }
);
U.displayName = "FondueDatePicker";
export {
  U as DatePicker
};
//# sourceMappingURL=DatePicker.es.js.map

import { jsxs as l, jsx as t } from "react/jsx-runtime";
import { ActionMenu as j } from "../../ActionMenu/ActionMenu/ActionMenu.es.js";
import { IconSize as B } from "../../../foundation/Icon/IconSize.es.js";
import { useMemoizedId as b } from "../../../hooks/useMemoizedId.es.js";
import { useButton as D } from "@react-aria/button";
import { useFocusRing as z, FocusScope as M } from "@react-aria/focus";
import { useMenuTrigger as W } from "@react-aria/menu";
import { useOverlay as L, DismissButton as x } from "@react-aria/overlays";
import { mergeProps as E } from "@react-aria/utils";
import { useMenuTriggerState as Y } from "@react-stately/menu";
import { FOCUS_STYLE as U } from "../../../utilities/focusStyle.es.js";
import { merge as n } from "../../../utilities/merge.es.js";
import { AnimatePresence as V, motion as _ } from "framer-motion";
import { useRef as g, useState as $, useEffect as q } from "react";
import { AssetInputSize as a } from "../AssetInput.es.js";
import { AssetThumbnail as G } from "../AssetThumbnail.es.js";
import { AssetSubline as H } from "./AssetSubline.es.js";
import { SpinningCircle as J } from "./SpinningCircle.es.js";
import K from "../../../foundation/Icon/Generated/IconCaretDown.es.js";
const Q = ({
  asset: e,
  size: i,
  actions: v,
  isLoading: m,
  hideSize: k = !1,
  hideExtension: y = !1
}) => {
  const S = b(), u = b(), r = g(null), o = Y({ closeOnSelect: !0 }), { isOpen: s, focusStrategy: N } = o, { menuTriggerProps: A } = W({}, o, r), { buttonProps: F } = D(A, r), { isFocusVisible: c, focusProps: C } = z(), d = g(null), { overlayProps: O } = L(
    { onClose: () => o.close(), shouldCloseOnBlur: !0, isOpen: s, isDismissable: !0 },
    d
  ), f = (e == null ? void 0 : e.name) || "Your Asset", [T, I] = $(0);
  return q(() => {
    let w = null;
    const P = () => {
      var h;
      const R = ((h = r.current) == null ? void 0 : h.getBoundingClientRect().width) ?? 0;
      w = window.setTimeout(() => I(R), 0);
    }, p = new ResizeObserver(P);
    return r.current && p.observe(r.current), () => {
      w && clearTimeout(w), p.disconnect();
    };
  }, []), /* @__PURE__ */ l(
    "div",
    {
      className: "tw-font-sans tw-w-full tw-text-s tw-bg-transparent tw-font-normal tw-min-w-0",
      "aria-labelledby": u,
      title: f,
      "data-test-id": "asset-single-input",
      children: [
        /* @__PURE__ */ l(
          "button",
          {
            ...E(F, C),
            ref: r,
            className: n([
              "tw-w-full tw-flex tw-border tw-rounded tw-overflow-hidden hover:tw-border-black-90 dark:hover:tw-border-black-40 focus-visible:tw-outline-none",
              c && U,
              i === a.Large ? "tw-h-[11.5rem] tw-flex-col" : "tw-h-14",
              s || c ? "tw-border-black-90 dark:tw-border-black-10" : "tw-border-black-20 dark:tw-border-black-80"
            ]),
            children: [
              m && !e && /* @__PURE__ */ t(
                "div",
                {
                  className: n([
                    "tw-flex tw-justify-center tw-items-center",
                    i === a.Large ? "tw-w-full tw-h-32" : "tw-w-14 tw-h-full"
                  ]),
                  children: /* @__PURE__ */ t(J, { size: i })
                }
              ),
              e && /* @__PURE__ */ t(G, { asset: e, size: i, isActive: s || c }),
              /* @__PURE__ */ l(
                "div",
                {
                  className: n([
                    "tw-min-w-0 tw-max-w-full tw-flex tw-flex-auto tw-self-stretch tw-border-black-100 tw-border-opacity-25",
                    i === a.Large ? "tw-h-14 tw-border-t" : "tw-h-full tw-border-l"
                  ]),
                  children: [
                    /* @__PURE__ */ l("div", { className: "tw-min-w-0 tw-pr-3 tw-pl-4 tw-flex tw-flex-auto tw-flex-col tw-items-start tw-justify-center tw-h-full", children: [
                      /* @__PURE__ */ t(
                        "span",
                        {
                          id: u,
                          className: n([
                            "tw-max-w-full tw-text-black-100 tw-text-s tw-truncate dark:tw-text-white",
                            (s || c) && "tw-font-medium"
                          ]),
                          children: f
                        }
                      ),
                      /* @__PURE__ */ t(
                        H,
                        {
                          asset: e,
                          isLoading: m,
                          hideSize: k,
                          hideExtension: y
                        }
                      )
                    ] }),
                    /* @__PURE__ */ t("div", { className: "tw-p-4 tw-flex tw-flex-none tw-items-center tw-justify-center", children: /* @__PURE__ */ t(
                      "span",
                      {
                        className: n([
                          "tw-transition-transform",
                          s ? "tw-rotate-180 tw-text-black-90" : "tw-text-black-60"
                        ]),
                        children: /* @__PURE__ */ t(K, { size: B.Size16 })
                      }
                    ) })
                  ]
                }
              )
            ]
          }
        ),
        /* @__PURE__ */ t(V, { children: s && /* @__PURE__ */ t(
          _.div,
          {
            style: {
              width: T
            },
            className: "tw-absolute tw-left-auto tw-w-full tw-overflow-hidden tw-box-border tw-p-0 tw-shadow-mid tw-list-none tw-m-0 tw-mt-2 tw-z-20",
            "data-test-id": "asset-single-input-flyout",
            initial: { height: 0 },
            animate: { height: "auto" },
            exit: { height: 0 },
            transition: { ease: [0.04, 0.62, 0.23, 0.98], duration: 0.5 },
            children: /* @__PURE__ */ t(M, { restoreFocus: !0, children: /* @__PURE__ */ l("div", { ...O, ref: d, children: [
              /* @__PURE__ */ t(x, { onDismiss: () => o.close() }),
              /* @__PURE__ */ t(
                j,
                {
                  menuBlocks: v,
                  focus: N,
                  onClick: () => o.close()
                }
              ),
              /* @__PURE__ */ t(x, { onDismiss: () => o.close() })
            ] }) })
          },
          `asset-input-menu-${S}`
        ) })
      ]
    }
  );
};
Q.displayName = "FondueSelectedAsset";
export {
  Q as SelectedAsset
};
//# sourceMappingURL=SelectedAsset.es.js.map

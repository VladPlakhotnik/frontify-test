import { jsx as t, jsxs as p, Fragment as P } from "react/jsx-runtime";
import { merge as f } from "../../utilities/merge.es.js";
import { IconSize as y } from "../../foundation/Icon/IconSize.es.js";
import { MenuItemContent as j } from "./MenuItemContent.es.js";
import { MenuItemContentSize as n, MenuItemStyle as e, SelectionIndicatorIcon as o } from "./types.es.js";
import { getItemElementType as k } from "../../utilities/elements.es.js";
import H from "../../foundation/Icon/Generated/IconCaretRight.es.js";
import T from "../../foundation/Icon/Generated/IconCheckMark.es.js";
const W = {
  [n.XSmall]: "tw-px-5 tw-py-2 tw-min-h-[36px]",
  [n.Small]: "tw-px-5 tw-py-2.5 tw-min-h-[36px]",
  [n.Large]: "tw-px-5 tw-py-3 tw-min-h-[60px]"
};
var X = /* @__PURE__ */ ((a) => (a.Default = "Default", a.Active = "Active", a.Disabled = "Disabled", a))(X || {});
const $ = {
  [e.Primary]: {
    Default: "tw-text-text-x-weak",
    Active: "tw-text-text",
    Disabled: "tw-text-text-disabled"
  },
  [e.Danger]: {
    Default: "tw-text-red-60",
    Active: "tw-text-red-70",
    Disabled: "tw-text-text-disabled"
  },
  [e.Warning]: {
    Default: "tw-text-text-warning",
    Active: "tw-text-yellow-90",
    Disabled: "tw-text-text-disabled"
  }
}, F = {
  [e.Primary]: "hover:tw-text-text",
  [e.Danger]: "hover:tw-text-text-negative",
  [e.Warning]: "hover:tw-text-text-warning"
}, C = "tw-cursor-pointer tw-flex tw-items-center tw-justify-between tw-transition-colors tw-gap-2", K = "hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover", d = f(["tw-w-full tw-text-left tw-py-2 tw-px-5", K]), V = "tw-bg-box-selected", q = ({
  title: a,
  decorator: A,
  switchComponent: N,
  subtitle: _,
  size: i = n.Small,
  style: S = e.Primary,
  disabled: m = !1,
  active: l = !1,
  checked: R = !1,
  selectionIndicator: z = o.Check,
  children: r,
  link: u,
  onBlur: b,
  onClick: s,
  onFocus: g,
  onMouseEnter: v,
  onMouseOut: h,
  onMouseOver: I,
  onMouseLeave: D,
  "data-test-id": w = "menu-item"
}) => {
  const E = i === n.XSmall ? y.Size16 : y.Size20, L = {
    [o.CaretRight]: /* @__PURE__ */ t(H, { "data-test-id": `${w}-caret`, size: E }),
    [o.Check]: l && /* @__PURE__ */ t(T, { "data-test-id": `${w}-active`, size: E }),
    [o.None]: null
  }[z];
  let x = "Default";
  m ? x = "Disabled" : l && (x = "Active");
  const M = $[S][x], c = k(u, s);
  return /* @__PURE__ */ p(P, { children: [
    r && /* @__PURE__ */ p(
      "li",
      {
        "data-test-id": w,
        role: "menuitem",
        className: f([
          "tw-text-sm tw-leading-4 tw-text-text-weak",
          C,
          R ? V : ""
        ]),
        children: [
          c === "a" && /* @__PURE__ */ t(
            "a",
            {
              href: u,
              className: d,
              onBlur: b,
              onClick: s,
              onFocus: g,
              onMouseEnter: v,
              onMouseLeave: D,
              onMouseOut: h,
              onMouseOver: I,
              children: r
            }
          ),
          c === "button" && /* @__PURE__ */ t(
            "button",
            {
              type: "button",
              disabled: m,
              className: d,
              onBlur: b,
              onClick: s,
              onFocus: g,
              onMouseEnter: v,
              onMouseLeave: D,
              onMouseOut: h,
              onMouseOver: I,
              children: r
            }
          ),
          c === "span" && /* @__PURE__ */ t("span", { className: d, children: r })
        ]
      }
    ),
    !r && /* @__PURE__ */ p(
      "div",
      {
        className: f([
          C,
          F[S],
          W[i],
          m && "tw-bg-box-disabled tw-pointer-events-none",
          l && "tw-font-medium",
          M
        ]),
        children: [
          /* @__PURE__ */ t(
            j,
            {
              title: a,
              decorator: A,
              subtitle: i === n.Large ? _ : void 0,
              size: i,
              switchComponent: N
            }
          ),
          /* @__PURE__ */ t("div", { className: "tw-flex-none", children: L })
        ]
      }
    )
  ] });
};
q.displayName = "FondueMenuItem";
export {
  q as MenuItem,
  X as MenuItemTextColorState,
  W as menuItemSizeClassMap,
  $ as menuItemTextColorRecord
};
//# sourceMappingURL=MenuItem.es.js.map

{"version":3,"file":"MenuItem.es.js","sources":["../../../src/components/MenuItem/MenuItem.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { FocusEvent, MouseEvent, ReactNode } from 'react';\nimport { merge } from '@utilities/merge';\nimport { IconCaretRight, IconCheckMark } from '@foundation/Icon/Generated';\nimport { IconSize } from '@foundation/Icon/IconSize';\nimport { MenuItemContent, MenuItemContentProps } from '@components/MenuItem/MenuItemContent';\nimport { MenuItemContentSize, MenuItemStyle, SelectionIndicatorIcon } from './types';\nimport { getItemElementType } from '@utilities/elements';\n\nexport type MenuItemProps = {\n    style?: MenuItemStyle;\n    disabled?: boolean;\n    active?: boolean;\n    checked?: boolean;\n    selectionIndicator?: SelectionIndicatorIcon;\n    /** @deprecated this prop is not being used anymore */\n    type?: string;\n    link?: string;\n    onBlur?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: FocusEvent<T>) => void;\n    onClick?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: MouseEvent<T>) => void;\n    onFocus?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: FocusEvent<T>) => void;\n    onMouseEnter?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: MouseEvent<T>) => void;\n    onMouseOut?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: MouseEvent<T>) => void;\n    onMouseOver?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: MouseEvent<T>) => void;\n    onMouseLeave?: <T extends HTMLButtonElement | HTMLAnchorElement>(event: MouseEvent<T>) => void;\n    children?: ReactNode;\n    'data-test-id'?: string;\n} & Omit<MenuItemContentProps, 'iconSize'>;\n\nexport const menuItemSizeClassMap: Record<MenuItemContentSize, string> = {\n    [MenuItemContentSize.XSmall]: 'tw-px-5 tw-py-2 tw-min-h-[36px]',\n    [MenuItemContentSize.Small]: 'tw-px-5 tw-py-2.5 tw-min-h-[36px]',\n    [MenuItemContentSize.Large]: 'tw-px-5 tw-py-3 tw-min-h-[60px]',\n};\n\nexport enum MenuItemTextColorState {\n    Default = 'Default',\n    Active = 'Active',\n    Disabled = 'Disabled',\n}\n\nexport const menuItemTextColorRecord: Record<MenuItemStyle, Record<MenuItemTextColorState, string>> = {\n    [MenuItemStyle.Primary]: {\n        [MenuItemTextColorState.Default]: 'tw-text-text-x-weak',\n        [MenuItemTextColorState.Active]: 'tw-text-text',\n        [MenuItemTextColorState.Disabled]: 'tw-text-text-disabled',\n    },\n    [MenuItemStyle.Danger]: {\n        [MenuItemTextColorState.Default]: 'tw-text-red-60',\n        [MenuItemTextColorState.Active]: 'tw-text-red-70',\n        [MenuItemTextColorState.Disabled]: 'tw-text-text-disabled',\n    },\n    [MenuItemStyle.Warning]: {\n        [MenuItemTextColorState.Default]: 'tw-text-text-warning',\n        [MenuItemTextColorState.Active]: 'tw-text-yellow-90',\n        [MenuItemTextColorState.Disabled]: 'tw-text-text-disabled',\n    },\n};\n\nconst menuItemHoverColorRecord: Record<MenuItemStyle, string> = {\n    [MenuItemStyle.Primary]: 'hover:tw-text-text',\n    [MenuItemStyle.Danger]: 'hover:tw-text-text-negative',\n    [MenuItemStyle.Warning]: 'hover:tw-text-text-warning',\n};\n\nconst ITEM_WRAPPER_CLASSES =\n    'tw-cursor-pointer tw-flex tw-items-center tw-justify-between tw-transition-colors tw-gap-2';\nconst ITEM_HOVER_CLASSES = 'hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover';\nconst ITEM_BASE_CLASSES = merge(['tw-w-full tw-text-left tw-py-2 tw-px-5', ITEM_HOVER_CLASSES]);\nconst ITEM_CHECKED_CLASSES = 'tw-bg-box-selected';\n\nexport const MenuItem = ({\n    title,\n    decorator,\n    switchComponent,\n    subtitle,\n    size = MenuItemContentSize.Small,\n    style = MenuItemStyle.Primary,\n    disabled = false,\n    active = false,\n    checked = false,\n    selectionIndicator = SelectionIndicatorIcon.Check,\n    children,\n    link,\n    onBlur,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseOut,\n    onMouseOver,\n    onMouseLeave,\n    'data-test-id': dataTestId = 'menu-item',\n}: MenuItemProps) => {\n    const currentIconSize = size === MenuItemContentSize.XSmall ? IconSize.Size16 : IconSize.Size20;\n\n    const currentIcon = {\n        [SelectionIndicatorIcon.CaretRight]: (\n            <IconCaretRight data-test-id={`${dataTestId}-caret`} size={currentIconSize} />\n        ),\n        [SelectionIndicatorIcon.Check]: active && (\n            <IconCheckMark data-test-id={`${dataTestId}-active`} size={currentIconSize} />\n        ),\n        [SelectionIndicatorIcon.None]: null,\n    }[selectionIndicator];\n\n    let textState = MenuItemTextColorState.Default;\n    if (disabled) {\n        textState = MenuItemTextColorState.Disabled;\n    } else if (active) {\n        textState = MenuItemTextColorState.Active;\n    }\n\n    const textClass = menuItemTextColorRecord[style][textState];\n\n    const mainElementType = getItemElementType(link, onClick);\n\n    return (\n        <>\n            {children && (\n                <li\n                    data-test-id={dataTestId}\n                    role=\"menuitem\"\n                    className={merge([\n                        'tw-text-sm tw-leading-4 tw-text-text-weak',\n                        ITEM_WRAPPER_CLASSES,\n                        checked ? ITEM_CHECKED_CLASSES : '',\n                    ])}\n                >\n                    {mainElementType === 'a' && (\n                        <a\n                            href={link}\n                            className={ITEM_BASE_CLASSES}\n                            onBlur={onBlur}\n                            onClick={onClick}\n                            onFocus={onFocus}\n                            onMouseEnter={onMouseEnter}\n                            onMouseLeave={onMouseLeave}\n                            onMouseOut={onMouseOut}\n                            onMouseOver={onMouseOver}\n                        >\n                            {children}\n                        </a>\n                    )}\n                    {mainElementType === 'button' && (\n                        <button\n                            type=\"button\"\n                            disabled={disabled}\n                            className={ITEM_BASE_CLASSES}\n                            onBlur={onBlur}\n                            onClick={onClick}\n                            onFocus={onFocus}\n                            onMouseEnter={onMouseEnter}\n                            onMouseLeave={onMouseLeave}\n                            onMouseOut={onMouseOut}\n                            onMouseOver={onMouseOver}\n                        >\n                            {children}\n                        </button>\n                    )}\n                    {mainElementType === 'span' && <span className={ITEM_BASE_CLASSES}>{children}</span>}\n                </li>\n            )}\n            {/* The implementation without children is the first behavior of the MenuItem component.\n                This way we can introduce the new changes without breaking the current usage of it.\n                In the future, this implementation should be replaced by the new one and the projects updated properly\n            */}\n            {!children && (\n                <div\n                    className={merge([\n                        ITEM_WRAPPER_CLASSES,\n                        menuItemHoverColorRecord[style],\n                        menuItemSizeClassMap[size],\n                        disabled && 'tw-bg-box-disabled tw-pointer-events-none',\n                        active && 'tw-font-medium',\n                        textClass,\n                    ])}\n                >\n                    <MenuItemContent\n                        title={title}\n                        decorator={decorator}\n                        subtitle={size === MenuItemContentSize.Large ? subtitle : undefined}\n                        size={size}\n                        switchComponent={switchComponent}\n                    />\n                    <div className=\"tw-flex-none\">{currentIcon}</div>\n                </div>\n            )}\n        </>\n    );\n};\nMenuItem.displayName = 'FondueMenuItem';\n"],"names":["menuItemSizeClassMap","MenuItemContentSize","MenuItemTextColorState","menuItemTextColorRecord","MenuItemStyle","menuItemHoverColorRecord","ITEM_WRAPPER_CLASSES","ITEM_HOVER_CLASSES","ITEM_BASE_CLASSES","merge","ITEM_CHECKED_CLASSES","MenuItem","title","decorator","switchComponent","subtitle","size","style","disabled","active","checked","selectionIndicator","SelectionIndicatorIcon","children","link","onBlur","onClick","onFocus","onMouseEnter","onMouseOut","onMouseOver","onMouseLeave","dataTestId","currentIconSize","IconSize","currentIcon","jsx","IconCaretRight","IconCheckMark","textState","textClass","mainElementType","getItemElementType","jsxs","Fragment","MenuItemContent"],"mappings":"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"}
import { jsxs as a, jsx as t } from "react/jsx-runtime";
import { useState as m, useRef as u } from "react";
import { merge as p } from "../../utilities/merge.es.js";
import { FOCUS_VISIBLE_STYLE as f } from "../../utilities/focusStyle.es.js";
import w from "../../foundation/Icon/Generated/IconDotsHorizontal.es.js";
import { Menu as d } from "../Menu/Menu.es.js";
import { MenuItem as c } from "../MenuItem/MenuItem.es.js";
const v = ({ items: l, "data-test-id": s = "overflow-menu" }) => {
  const [e, r] = m(!1), n = u(null);
  return /* @__PURE__ */ a("div", { "data-test-id": s, className: "tw-relative tw-bottom-0 tw-top-0 tw-flex", children: [
    /* @__PURE__ */ t(
      "button",
      {
        "aria-haspopup": "true",
        "aria-expanded": e,
        "aria-label": "Open overflow menu",
        ref: n,
        className: p([
          "tw-w-6 tw-h-6 hover:tw-bg-box-neutral-strong-inverse-hover tw-rounded tw-flex tw-justify-center tw-items-center",
          e ? "tw-bg-box-neutral-strong-inverse-pressed" : "tw-bg-box-neutral-strong-inverse",
          f
        ]),
        type: "button",
        onClick: () => {
          r(!e);
        },
        children: /* @__PURE__ */ t(w, {})
      }
    ),
    /* @__PURE__ */ t(d, { triggerRef: n, onClose: () => r(!1), open: e, children: l.map((o, i) => /* @__PURE__ */ t(c, { link: o.link, onClick: o.onClick, children: o.label }, `overflow-menu-item-${i}`)) })
  ] });
};
v.displayName = "FondueOverflowMenu";
export {
  v as OverflowMenu
};
//# sourceMappingURL=OverflowMenu.es.js.map

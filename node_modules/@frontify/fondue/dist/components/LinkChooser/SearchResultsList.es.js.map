{"version":3,"file":"SearchResultsList.es.js","sources":["../../../src/components/LinkChooser/SearchResultsList.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { getKeyItemRecord, getMenuItems } from '@components/ActionMenu/Aria/helper';\nimport { useListBox } from '@react-aria/listbox';\nimport { useActor } from '@xstate/react';\nimport { ReactElement, useMemo, useRef } from 'react';\nimport BackgroundIcon from './assets/background.svg';\nimport NoResultsIcon from './assets/no-results.svg';\nimport FetchingIcon from './assets/nook-animated.png';\nimport { NavigationMenuItem } from './NavigationMenu';\nimport { SearchResultSection } from './SearchResultSection';\nimport { defaultSection } from './sections';\nimport { SearchResultListProps } from './types';\nimport { findSection } from './utils/helpers';\nimport { isFetching, isUnsuccessful, shouldGoBack } from './utils/state';\n\nexport const SearchResultsList = (props: SearchResultListProps): ReactElement => {\n    const ref = useRef<HTMLUListElement>(null);\n    const { listBoxRef = ref, state, menuBlocks, machineService } = props;\n    const { listBoxProps } = useListBox(props, state, listBoxRef);\n    const items = getMenuItems(menuBlocks);\n    const keyItemRecord = getKeyItemRecord(items);\n\n    const [\n        {\n            context: { extraSections, currentSectionId, searchResults, query },\n            matches,\n        },\n        send,\n    ] = useActor(machineService);\n\n    const currentSection = useMemo(\n        () => findSection(extraSections, currentSectionId) || defaultSection,\n        [currentSectionId, extraSections],\n    );\n\n    if (isFetching(matches)) {\n        return <FetchingAnimation />;\n    }\n\n    if (isUnsuccessful(matches)) {\n        return <FetchingError />;\n    }\n\n    return (\n        <div>\n            {shouldGoBack(matches) && (\n                <div className=\"tw-mt-2\">\n                    <NavigationMenuItem\n                        state={state}\n                        section={currentSection}\n                        onPress={() => {\n                            send({\n                                type: 'BACK_TO_DEFAULT',\n                                data: { getExtraResultsByQuery: null },\n                            });\n                        }}\n                        direction=\"left\"\n                    />\n                </div>\n            )}\n            <ul\n                {...listBoxProps}\n                data-test-id=\"link-chooser-results-list\"\n                ref={listBoxRef}\n                className=\"tw-list-none tw-p-0 tw-m-0 tw-bg-white tw-z-20 focus-visible:tw-outline-none\"\n            >\n                {searchResults.length > 0 ? (\n                    [...state.collection]\n                        .filter((section) => section.key === 'search')\n                        .map((item) => (\n                            <SearchResultSection\n                                key={item.key}\n                                heading={item}\n                                state={state}\n                                keyItemRecord={keyItemRecord}\n                                machineService={machineService}\n                            />\n                        ))\n                ) : (\n                    <EmptyResults\n                        prompt={\n                            query\n                                ? `We could not find any results for \"${query}\".`\n                                : 'Use the search above to discover your brand assets, or enter a URL'\n                        }\n                        icon={query ? NoResultsIcon : BackgroundIcon}\n                    />\n                )}\n            </ul>\n        </div>\n    );\n};\n\nconst EmptyResults = ({ prompt, icon }: { prompt: string; icon: string }): ReactElement => (\n    <div\n        data-test-id=\"link-chooser-empty-results\"\n        className=\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-[278px] tw-p-3\"\n    >\n        <img className=\"tw-w-[150px] tw-mb-5\" src={icon} alt=\"Icon\" />\n        <p className=\"tw-text-black-60 tw-text-center\">{prompt}</p>\n    </div>\n);\n\nconst FetchingError = ({\n    error = 'An error occurred while fetching the results',\n}: {\n    error?: string;\n}): ReactElement => (\n    <div\n        data-test-id=\"link-chooser-error\"\n        className=\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-[278px] tw-p-3\"\n    >\n        <img className=\"tw-w-[75px] tw-mb-5\" src={NoResultsIcon} alt=\"Error\" />\n        <p className=\"tw-text-black-60 tw-text-center\">{error}</p>\n    </div>\n);\n\nconst FetchingAnimation = (): ReactElement => (\n    <div\n        data-test-id=\"link-chooser-loader\"\n        className=\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-[278px] tw-p-3\"\n    >\n        <img className=\"tw-w-[50px]\" src={FetchingIcon} alt=\"Fetching\" />\n    </div>\n);\n"],"names":["SearchResultsList","props","ref","useRef","listBoxRef","state","menuBlocks","machineService","listBoxProps","useListBox","items","getMenuItems","keyItemRecord","getKeyItemRecord","extraSections","currentSectionId","searchResults","query","matches","send","useActor","currentSection","useMemo","findSection","defaultSection","isFetching","FetchingAnimation","isUnsuccessful","FetchingError","shouldGoBack","jsx","NavigationMenuItem","section","item","SearchResultSection","EmptyResults","NoResultsIcon","BackgroundIcon","prompt","icon","jsxs","error","FetchingIcon"],"mappings":"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"}
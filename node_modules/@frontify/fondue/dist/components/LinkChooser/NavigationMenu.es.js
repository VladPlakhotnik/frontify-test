import { jsx as o } from "react/jsx-runtime";
import { getInteractionModality as l } from "@react-aria/interactions";
import { useOption as u } from "@react-aria/listbox";
import { merge as d } from "../../utilities/merge.es.js";
import { useActor as p } from "@xstate/react";
import { useRef as f, useMemo as g } from "react";
import { defaultSection as h } from "./sections.es.js";
import { LinkChooserState as I, DropdownState as S } from "./state/types.es.js";
import { SelectionIndicatorIcon as v, MenuItemContentSize as b } from "../MenuItem/types.es.js";
import k from "../../foundation/Icon/Generated/IconArrowLeft.es.js";
import { MenuItem as w } from "../MenuItem/MenuItem.es.js";
const O = ({ machineService: t, state: r }) => {
  const [{ matches: n, context: a }, i] = p(t);
  return n(`${I.Focused}.${S.Default}`) ? /* @__PURE__ */ o("ul", { className: "tw-py-2", children: a.extraSections.map((e) => /* @__PURE__ */ o(
    x,
    {
      section: e,
      state: r,
      onPress: () => {
        i({
          type: "SELECT_EXTRA_SECTION",
          data: { getExtraResultsByQuery: e.getResults, currentSectionId: e.id }
        });
      }
    },
    e.id
  )) }) : null;
}, x = ({
  section: { id: t, title: r },
  onPress: n,
  state: a,
  direction: i = "right"
}) => {
  const e = f(null), { isFocused: s } = u(
    {
      key: t,
      shouldFocusOnHover: !1
    },
    a,
    e
  ), m = g(
    () => t === h.id ? /* @__PURE__ */ o("p", { className: "tw-ml-1 tw-text-black-80 tw-capitalize", children: r }) : r,
    [t, r]
  ), c = l() !== "pointer";
  return /* @__PURE__ */ o(
    "div",
    {
      onClick: n,
      tabIndex: 0,
      role: "menuitem",
      "aria-label": `Navigate to ${t} section of search results.`,
      "data-key": t,
      "data-test-id": "link-chooser-navigation-menu-item",
      className: d(["hover:tw-bg-black-10", s && c && "tw-bg-black-10"]),
      children: /* @__PURE__ */ o(
        w,
        {
          title: m,
          selectionIndicator: i === "right" ? v.CaretRight : void 0,
          decorator: i === "left" ? /* @__PURE__ */ o(k, {}) : void 0,
          size: b.XSmall
        }
      )
    }
  );
};
export {
  O as NavigationMenu,
  x as NavigationMenuItem
};
//# sourceMappingURL=NavigationMenu.es.js.map

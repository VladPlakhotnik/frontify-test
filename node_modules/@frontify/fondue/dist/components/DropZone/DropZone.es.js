import { jsx as d } from "react/jsx-runtime";
import { useDrop as u } from "react-dnd";
import { merge as h } from "../../utilities/merge.es.js";
const v = ({
  data: t,
  onDrop: o,
  accept: i,
  children: s,
  "data-test-id": n = "drop-zone"
}) => {
  const [{ isOver: p, canDrop: c }, w] = u({
    accept: i || "",
    drop: (e) => {
      o == null || o(t.targetItem, e, t.position);
    },
    canDrop: (e) => e.id !== t.targetItem.id,
    collect: (e) => ({
      isOver: e.isOver(),
      canDrop: e.canDrop()
    })
  }), r = p && c, a = "tw-bg-violet-20", l = "tw-my-[-4px] tw-h-[10px] tw-py-1 tw-outline-none tw-relative tw-z-20", m = "tw-border-violet-60 tw-border-2 tw-h-7 tw-bg-clip-content";
  return /* @__PURE__ */ d(
    "div",
    {
      role: "row",
      "aria-hidden": !r,
      "data-test-id": n,
      className: h([
        "tw-w-full tw-transition-height",
        t.position !== "within" ? l : "tw-h-auto",
        r && t.position !== "within" ? m : "",
        r && t.position === "within" ? a : ""
      ]),
      ref: w,
      children: s
    }
  );
};
v.displayName = "FondueDropZone";
export {
  v as DropZone
};
//# sourceMappingURL=DropZone.es.js.map

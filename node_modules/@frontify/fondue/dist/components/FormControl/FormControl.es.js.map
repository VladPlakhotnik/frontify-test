{"version":3,"file":"FormControl.es.js","sources":["../../../src/components/FormControl/FormControl.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { InputLabel, InputLabelProps } from '@components/InputLabel/InputLabel';\nimport { merge } from '@utilities/merge';\nimport { Validation } from '@utilities/validation';\nimport { ReactElement, ReactNode, cloneElement, isValidElement } from 'react';\n\nexport enum FormControlStyle {\n    Primary = 'Primary',\n    Positive = 'Positive',\n    Danger = 'Danger',\n}\n\ntype HelperTextProps = {\n    text: string;\n    style: FormControlStyle;\n    disabled?: boolean;\n    fullWidth?: boolean;\n    'data-test-id'?: string;\n};\n\nconst inputValidation: Record<FormControlStyle, Validation> = {\n    [FormControlStyle.Primary]: Validation.Default,\n    [FormControlStyle.Positive]: Validation.Success,\n    [FormControlStyle.Danger]: Validation.Error,\n};\n\nconst HelperText = ({\n    text,\n    disabled,\n    style,\n    fullWidth = false,\n    'data-test-id': dataTestId = 'form-control',\n}: HelperTextProps): ReactElement => {\n    let textColorClass;\n\n    switch (true) {\n        case disabled:\n            textColorClass = 'tw-text-black-40';\n            break;\n        case style === FormControlStyle.Danger:\n            textColorClass = 'tw-text-red-60';\n            break;\n        case style === FormControlStyle.Positive:\n            textColorClass = 'tw-text-green-60';\n            break;\n        default:\n            textColorClass = 'tw-text-black-80';\n            break;\n    }\n\n    return (\n        <span\n            data-test-id={`${dataTestId}-helper-text`}\n            className={`tw-text-s tw-font-sans ${fullWidth ? 'tw-w-full' : ''} ${textColorClass}`}\n        >\n            {text}\n        </span>\n    );\n};\nHelperText.displayName = 'FondueHelperText';\n\nexport enum HelperPosition {\n    Before = 'Before',\n    After = 'After',\n}\n\nexport enum FormControlDirection {\n    Horizontal = 'Horizontal',\n    Vertical = 'Vertical',\n}\n\nexport type FormControlProps = {\n    direction?: FormControlDirection;\n    disabled?: boolean;\n    clickable?: boolean;\n    label?: Omit<InputLabelProps, 'disabled'>;\n    extra?: ReactNode;\n    helper?: Omit<HelperTextProps, 'disabled' | 'style'> & { position?: HelperPosition };\n    style?: FormControlStyle;\n    name?: string;\n    children?: ReactNode;\n    'data-test-id'?: string;\n};\n\nexport const FormControl = ({\n    label,\n    children,\n    extra,\n    name,\n    helper,\n    disabled,\n    clickable,\n    direction = FormControlDirection.Vertical,\n    style = FormControlStyle.Primary,\n    'data-test-id': dataTestId = 'form-control',\n}: FormControlProps): ReactElement => {\n    const isHelperBefore = helper?.position === HelperPosition.Before;\n\n    return (\n        <div\n            data-test-id={dataTestId}\n            data-name={name}\n            className={merge([\n                'tw-flex tw-items-center tw-gap-2',\n                direction === FormControlDirection.Horizontal ? 'tw-flex-row' : 'tw-w-full tw-flex-col',\n            ])}\n        >\n            {(label?.children || extra) && (\n                <div\n                    className={merge([\n                        'tw-flex tw-flew-row tw-items-center tw-justify-between',\n                        direction === FormControlDirection.Vertical && 'tw-w-full',\n                    ])}\n                >\n                    {label?.children && <InputLabel {...label} disabled={disabled} clickable={clickable} />}\n                    {extra && (\n                        <span\n                            data-test-id={`${dataTestId}-extra`}\n                            className=\"tw-pl-2 tw-text-black-80 tw-font-sans tw-text-s tw-whitespace-nowrap\"\n                        >\n                            {extra}\n                        </span>\n                    )}\n                </div>\n            )}\n            {helper?.text && isHelperBefore && (\n                <HelperText\n                    style={style}\n                    fullWidth={direction === FormControlDirection.Vertical}\n                    text={helper.text}\n                    disabled={disabled}\n                    data-test-id={dataTestId}\n                />\n            )}\n            {children && (\n                <div\n                    className={\n                        direction === FormControlDirection.Vertical ? 'tw-w-full tw-grid tw-grid-cols-1 tw-gap-5' : ''\n                    }\n                >\n                    {isValidElement(children)\n                        ? cloneElement(children as ReactElement, {\n                              id: label?.htmlFor ?? children.props.id,\n                              disabled,\n                              validation: inputValidation[style],\n                          })\n                        : children}\n                </div>\n            )}\n            {helper?.text && !isHelperBefore && (\n                <HelperText\n                    fullWidth={direction === FormControlDirection.Vertical}\n                    text={helper.text}\n                    disabled={disabled}\n                    style={style}\n                    data-test-id={dataTestId}\n                />\n            )}\n        </div>\n    );\n};\nFormControl.displayName = 'FondueFormControl';\n"],"names":["FormControlStyle","inputValidation","Validation","HelperText","text","disabled","style","fullWidth","dataTestId","textColorClass","jsx","HelperPosition","FormControlDirection","FormControl","label","children","extra","name","helper","clickable","direction","isHelperBefore","jsxs","merge","InputLabel","isValidElement","cloneElement"],"mappings":"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"}
import { jsxs as k, jsx as t } from "react/jsx-runtime";
import { Checklist as Y, ChecklistDirection as Z } from "../Checklist/Checklist.es.js";
import { useButton as $ } from "@react-aria/button";
import { useFocusRing as y, FocusScope as I } from "@react-aria/focus";
import { merge as K } from "../../utilities/merge.es.js";
import { Validation as ee } from "../../utilities/validation.es.js";
import { useState as u, useRef as M, useEffect as N } from "react";
import { getPaddingClasses as te } from "./helpers.es.js";
import { useClickOutside as oe } from "../../hooks/useClickOutside.es.js";
import { CheckboxState as le } from "../Checkbox/Checkbox.es.js";
import { usePopper as re } from "react-popper";
import { useDropdownAutoHeight as se, DEFAULT_DROPDOWN_MAX_HEIGHT as ne } from "../../hooks/useDropdownAutoHeight.es.js";
import { EnablePortalWrapper as ae } from "../../utilities/dialogs/EnablePortalWrapper.es.js";
import { Trigger as ie, TriggerEmphasis as ce } from "../Trigger/Trigger.es.js";
import { Tag as P, TagSize as p, TagType as R } from "../Tag/Tag.es.js";
import { Text as O } from "../../typography/Text/Text.es.js";
var ue = /* @__PURE__ */ ((o) => (o.Default = "Default", o.Summarized = "Summarized", o))(ue || {}), pe = /* @__PURE__ */ ((o) => (o.Small = "Small", o.Medium = "Medium", o))(pe || {});
const fe = ({
  items: o,
  activeItemKeys: l,
  onSelectionChange: f,
  ariaLabel: z = "Select list",
  disabled: h = !1,
  placeholder: g,
  label: S,
  type: x = "Default",
  size: d = "Medium",
  validation: E = ee.Default,
  summarizedLabel: b,
  indeterminateItemKeys: r,
  flip: F = !1,
  emphasis: A = ce.Default,
  enablePortal: V = !0
}) => {
  const [a, m] = u(!1), [H, j] = u([]), i = M(null), [v, B] = u(null), [n, W] = u(null), _ = M(null), { isFocusVisible: L, focusProps: G } = y(), { maxHeight: D } = se({ current: n }, { isOpen: a, autoResize: !0 }), T = l.length > 0, U = b ?? [l.length, "selected"].join(" ");
  oe(null, () => m(!1), [i == null ? void 0 : i.current, v]);
  const X = D !== ne, w = () => m((e) => !e), { buttonProps: q } = $(
    {
      onPress: w,
      onKeyDown: (e) => {
        e.key === "Escape" && m(!1);
      },
      elementType: "div"
    },
    { current: n }
  ), J = (e) => {
    const s = new Set(l);
    s.has(e) ? s.delete(e) : s.add(e), f(Array.from(s));
  }, Q = (e) => {
    e.code === "Space" && w();
  }, C = () => a ? R.SelectedWithFocus : R.Selected;
  N(() => {
    j(
      o.map((e) => {
        const s = { ...e, label: e.value };
        return r != null && r.includes(e.value) ? { ...s, state: le.Mixed } : s;
      })
    );
  }, [o, r]);
  const c = re(n, v, {
    placement: "bottom-start",
    strategy: "fixed",
    modifiers: [
      {
        name: "offset",
        options: {
          offset: [0, 8]
        }
      },
      {
        name: "flip",
        enabled: F
      }
    ]
  });
  return N(() => {
    (async () => {
      c.update && await c.update();
    })().catch(console.error);
  }, [l]), /* @__PURE__ */ k("div", { className: "tw-relative", ref: i, children: [
    /* @__PURE__ */ t(
      ie,
      {
        disabled: h,
        buttonProps: q,
        isFocusVisible: L,
        isOpen: a,
        validation: E,
        emphasis: A,
        children: /* @__PURE__ */ t("div", { className: K(["tw-flex tw-flex-1 tw-gap-2", te(d)]), ref: W, children: /* @__PURE__ */ t(
          "div",
          {
            className: "tw-flex tw-flex-1 tw-gap-2 focus:tw-outline-0",
            onClick: (e) => {
              e.target === _.current && a || w();
            },
            role: "button",
            ...G,
            tabIndex: 0,
            onKeyDown: Q,
            children: /* @__PURE__ */ k("div", { className: "tw-flex tw-flex-wrap tw-gap-2 tw-outline-none tw-items-center tw-min-h-[28px]", children: [
              S && T && /* @__PURE__ */ t(O, { weight: "strong", children: S }),
              x === "Default" && l.map((e) => /* @__PURE__ */ t(
                P,
                {
                  type: C(),
                  label: e.toString(),
                  size: d === "Small" ? p.Small : p.Medium,
                  onClick: h ? void 0 : () => J(e)
                },
                e
              )),
              x === "Summarized" && (T || b) && /* @__PURE__ */ t(
                P,
                {
                  type: C(),
                  label: U,
                  size: d === "Small" ? p.Small : p.Medium,
                  onClick: (r == null ? void 0 : r.length) === 0 ? () => f([]) : void 0
                }
              ),
              l.length === 0 && g && /* @__PURE__ */ t(O, { color: "weak", children: g })
            ] })
          }
        ) })
      }
    ),
    a && X && /* @__PURE__ */ t(ae, { enablePortal: V, children: /* @__PURE__ */ t(
      "div",
      {
        ref: B,
        className: "tw-absolute tw-left-0 tw-w-full tw-overflow-hidden tw-p-0 tw-shadow-mid tw-list-none tw-m-0 tw-mt-2 tw-z-[120000] tw-bg-base tw-min-w-[18rem]",
        style: {
          ...c.styles.popper,
          width: n == null ? void 0 : n.getBoundingClientRect().width
        },
        ...c.attributes.popper,
        children: /* @__PURE__ */ t(I, { restoreFocus: !0, children: /* @__PURE__ */ t(
          "div",
          {
            className: "tw-p-4 tw-overflow-y-auto tw-overflow-x-hidden tw-w-full tw-relative",
            style: { maxHeight: D },
            children: /* @__PURE__ */ t(
              Y,
              {
                activeValues: l.map((e) => e.toString()),
                setActiveValues: f,
                checkboxes: H.filter((e) => !e.isDivider && !e.isCategory),
                direction: Z.Vertical,
                ariaLabel: z
              }
            )
          }
        ) })
      },
      "content"
    ) })
  ] });
};
fe.displayName = "FondueMultiSelect";
export {
  fe as MultiSelect,
  pe as MultiSelectSize,
  ue as MultiSelectType
};
//# sourceMappingURL=MultiSelect.es.js.map

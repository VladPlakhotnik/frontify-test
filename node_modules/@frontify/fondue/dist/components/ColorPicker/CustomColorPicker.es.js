import { jsxs as s, jsx as t, Fragment as k } from "react/jsx-runtime";
import { Dropdown as y } from "../Dropdown/Dropdown.es.js";
import { TextInputType as n } from "../TextInput/TextInput.es.js";
import { toShortRgb as H, toLongRgb as P } from "../../utilities/colors.es.js";
import { useState as f, useEffect as z } from "react";
import { RgbaColorPicker as R } from "react-colorful";
import { TinyColor as N } from "@ctrl/tinycolor";
import { ColorInput as r, DecoratorPosition as T } from "./ColorInput.es.js";
import { ColorFormat as v } from "../../types/colors.es.js";
const b = (a) => new N(H(a)).toHex(), j = ({
  currentColor: a,
  currentFormat: l,
  setFormat: m,
  onSelect: o
}) => {
  const I = [
    {
      id: "color-picker-format-dropdown-block",
      menuItems: Object.values(v).map((e) => ({ id: e, title: e.toLocaleUpperCase() }))
    }
  ], { red: p, green: d, blue: c, alpha: i = 1 } = a, [h, w] = f(b(a)), [C, g] = f(i), x = () => {
    const e = new N(h);
    e.isValid && o(P(e.toRgb()));
  };
  return z(() => {
    g(i), w(b(a));
  }, [i, a]), /* @__PURE__ */ s("div", { className: "tw-flex tw-flex-col tw-gap-4", "data-test-id": "custom-color-picker", id: "custom-color-picker", children: [
    /* @__PURE__ */ s("div", { className: "tw-flex tw-flex-col md:tw-flex-row tw-gap-2 tw-max-w-full", children: [
      /* @__PURE__ */ t("div", { className: "tw-min-w-[84px]", children: /* @__PURE__ */ t(
        y,
        {
          menuBlocks: I,
          activeItemId: l,
          onChange: (e) => e && m && m(e)
        }
      ) }),
      l === v.Hex ? /* @__PURE__ */ t("div", { className: "tw-flex-1", children: /* @__PURE__ */ t(
        r,
        {
          value: h,
          decorator: "#",
          size: 6,
          onChange: w,
          onEnterPressed: x,
          onBlur: x
        }
      ) }) : /* @__PURE__ */ s(k, { children: [
        /* @__PURE__ */ t("div", { className: "tw-flex-1", children: /* @__PURE__ */ t(
          r,
          {
            min: 0,
            max: 255,
            size: 3,
            type: n.Number,
            value: p.toString(),
            onChange: (e) => o({ ...a, red: parseInt(e) })
          }
        ) }),
        /* @__PURE__ */ t("div", { className: "tw-flex-1", children: /* @__PURE__ */ t(
          r,
          {
            min: 0,
            max: 255,
            size: 3,
            type: n.Number,
            value: d.toString(),
            onChange: (e) => o({ ...a, green: parseInt(e) })
          }
        ) }),
        /* @__PURE__ */ t("div", { className: "tw-flex-1", children: /* @__PURE__ */ t(
          r,
          {
            min: 0,
            max: 255,
            size: 3,
            type: n.Number,
            value: c.toString(),
            onChange: (e) => o({ ...a, blue: parseInt(e) })
          }
        ) })
      ] }),
      /* @__PURE__ */ t(
        r,
        {
          min: 0,
          max: 100,
          size: 3,
          type: n.Number,
          value: Math.trunc(C * 100).toString(),
          decorator: "%",
          decoratorPosition: T.Right,
          onChange: (e) => {
            const u = parseInt(e || "0", 10) / 100;
            g(u), o({ ...a, alpha: u });
          }
        }
      )
    ] }),
    /* @__PURE__ */ t("div", { className: "tw-flex tw-gap-2 tw-w-full tw-h-[200px]", children: /* @__PURE__ */ t("div", { className: "tw-relative tw-grow tw-rounded", children: /* @__PURE__ */ t(
      R,
      {
        color: { r: p, g: d, b: c, a: i },
        onChange: (e) => o({
          red: e.r,
          green: e.g,
          blue: e.b,
          alpha: e.a
        }),
        style: { width: "100%" }
      }
    ) }) })
  ] });
};
j.displayName = "FondueCustomColorPicker";
export {
  j as CustomColorPicker
};
//# sourceMappingURL=CustomColorPicker.es.js.map

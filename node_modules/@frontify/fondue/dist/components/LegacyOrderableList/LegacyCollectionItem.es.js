import { jsx as r } from "react/jsx-runtime";
import { useFocusRing as d } from "@react-aria/focus";
import { useId as p } from "@react-aria/utils";
import { FOCUS_STYLE as u } from "../../utilities/focusStyle.es.js";
import { merge as a } from "../../utilities/merge.es.js";
import { LegacyItemDragState as i } from "./types.es.js";
import { useDrag as f } from "react-dnd";
const y = ({
  item: t,
  renderContent: m,
  dragDisabled: o,
  listId: n
}) => {
  const { isFocusVisible: e } = d(), [{ componentDragState: c }, l] = f({
    item: { ...t },
    collect: (g) => ({
      componentDragState: g.isDragging() ? i.Dragging : i.Idle
    }),
    type: n,
    canDrag: !o
  }), s = p();
  return /* @__PURE__ */ r(
    "div",
    {
      ref: l,
      className: a(["tw-relative tw-outline-none", e ? "tw-z-30" : "tw-z-0"]),
      "aria-labelledby": s,
      "data-test-id": "draggable-item",
      "aria-disabled": o,
      children: /* @__PURE__ */ r("div", { className: a(["tw-outline-none", e && u]), children: m(t, { componentDragState: c, isFocusVisible: e }) })
    }
  );
};
y.displayName = "FondueLegacyCollectionItem";
export {
  y as LegacyCollectionItem
};
//# sourceMappingURL=LegacyCollectionItem.es.js.map

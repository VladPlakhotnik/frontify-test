{"version":3,"file":"RadioList.es.js","sources":["../../../src/components/RadioList/RadioList.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { LegacyTooltip, TooltipAlignment, TooltipPosition } from '@components/LegacyTooltip';\nimport IconQuestionMarkCircle from '@foundation/Icon/Generated/IconQuestionMarkCircle';\nimport { IconSize } from '@foundation/Icon';\nimport { generateRandomId } from '@utilities/generateRandomId';\nimport { merge } from '@utilities/merge';\nimport { Children, ReactNode, isValidElement, useEffect, useRef, useState } from 'react';\nimport { RadioButtonEmphasis, RadioButtonProps } from './RadioButton';\n\nexport enum RadioListDirection {\n    Horizontal = 'Horizontal',\n    Vertical = 'Vertical',\n}\n\nexport type RadioListProps = {\n    children: ReactNode;\n    onChange?: (value: string) => void;\n    direction?: RadioListDirection;\n    defaultValue?: string;\n    name?: string;\n    ariaLabel?: string;\n};\n\nexport const RadioList = ({\n    children,\n    defaultValue,\n    direction = RadioListDirection.Horizontal,\n    onChange,\n    name = 'default-radio',\n    ariaLabel,\n}: RadioListProps) => {\n    const radioGroupRef = useRef<HTMLDivElement | null>(null);\n\n    const [activeValue, setActiveValue] = useState(defaultValue);\n\n    const radioButtons: RadioButtonProps[] =\n        Children.map(children, (child) => {\n            if (!isValidElement<RadioButtonProps>(child)) {\n                return null;\n            }\n            return child?.props;\n        }) ?? [];\n\n    useEffect(() => {\n        setActiveValue(defaultValue);\n    }, [defaultValue]);\n\n    useEffect(() => {\n        if (radioGroupRef.current) {\n            const activeRadioButton = radioGroupRef.current.querySelector(`input[value=\"${activeValue}\"]`);\n            if (activeRadioButton) {\n                (activeRadioButton as HTMLDivElement).focus();\n            }\n        }\n    }, [activeValue]);\n\n    return (\n        <div\n            data-test-id=\"radio-list-wrapper\"\n            role=\"radiogroup\"\n            aria-label={ariaLabel ?? 'Choose an option'}\n            ref={radioGroupRef}\n            className={merge(['tw-flex', direction === RadioListDirection.Horizontal ? 'tw-gap-4' : 'tw-flex-col'])}\n        >\n            {radioButtons.map((radio) => {\n                const id = generateRandomId();\n                return (\n                    <div className=\"tw-flex tw-items-center tw-mb-2\" key={id}>\n                        <input\n                            data-test-id=\"radio-input\"\n                            disabled={radio.disabled}\n                            id={id}\n                            type=\"radio\"\n                            name={name}\n                            value={radio.value}\n                            aria-label=\"radio\"\n                            aria-checked={radio.value === activeValue}\n                            defaultChecked={radio.value === activeValue}\n                            className={merge([\n                                'tw-peer tw-form-radio w-w-4 tw-h-4 tw-border-black-60 disabled:tw-border-black-10 focus:tw-ring-0 focus:tw-ring-offset-0 focus-visible:tw-ring-2 focus-visible:tw-ring-offset-2',\n                                radio.emphasis === RadioButtonEmphasis.Weak\n                                    ? 'tw-text-black-80'\n                                    : 'tw-text-box-selected-strong',\n                            ])}\n                            onChange={() => {\n                                setActiveValue(radio.value);\n                                if (onChange) {\n                                    onChange(radio.value);\n                                }\n                            }}\n                        />\n                        {!radio.hideLabel && (\n                            <label\n                                data-test-id=\"radio-label\"\n                                htmlFor={id}\n                                className={merge([\n                                    'tw-flex tw-flex-col tw-pl-2 tw-text-sm tw-font-normal peer-checked:tw-font-medium tw-text-black-80 peer-disabled:tw-text-black-40',\n                                ])}\n                            >\n                                {radio.value}\n                                {radio.helperText && (\n                                    <span className=\"tw-text-black-80 tw-font-normal\">{radio.helperText}</span>\n                                )}\n                            </label>\n                        )}\n                        {radio.tooltip && (\n                            <LegacyTooltip\n                                alignment={TooltipAlignment.Middle}\n                                content={radio.tooltip}\n                                hoverDelay={75}\n                                position={TooltipPosition.Top}\n                                triggerElement={\n                                    <button className=\"tw-flex tw-text-black-80 tw-mx-2 tw-self-center\">\n                                        <IconQuestionMarkCircle size={IconSize.Size16} />\n                                    </button>\n                                }\n                                withArrow\n                            />\n                        )}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n"],"names":["RadioListDirection","RadioList","children","defaultValue","direction","onChange","name","ariaLabel","radioGroupRef","useRef","activeValue","setActiveValue","useState","radioButtons","Children","child","isValidElement","useEffect","activeRadioButton","jsx","merge","radio","id","generateRandomId","jsxs","RadioButtonEmphasis","LegacyTooltip","TooltipAlignment","TooltipPosition","IconQuestionMarkCircle","IconSize"],"mappings":";;;;;;;;AAUY,IAAAA,sBAAAA,OACRA,EAAA,aAAa,cACbA,EAAA,WAAW,YAFHA,IAAAA,KAAA,CAAA,CAAA;AAcL,MAAMC,IAAY,CAAC;AAAA,EACtB,UAAAC;AAAA,EACA,cAAAC;AAAA,EACA,WAAAC,IAAY;AAAA,EACZ,UAAAC;AAAA,EACA,MAAAC,IAAO;AAAA,EACP,WAAAC;AACJ,MAAsB;AACZ,QAAAC,IAAgBC,EAA8B,IAAI,GAElD,CAACC,GAAaC,CAAc,IAAIC,EAAST,CAAY,GAErDU,IACFC,EAAS,IAAIZ,GAAU,CAACa,MACfC,EAAiCD,CAAK,IAGpCA,KAAA,gBAAAA,EAAO,QAFH,IAGd,KAAK,CAAA;AAEV,SAAAE,EAAU,MAAM;AACZ,IAAAN,EAAeR,CAAY;AAAA,EAAA,GAC5B,CAACA,CAAY,CAAC,GAEjBc,EAAU,MAAM;AACZ,QAAIT,EAAc,SAAS;AACvB,YAAMU,IAAoBV,EAAc,QAAQ,cAAc,gBAAgBE,CAAW,IAAI;AAC7F,MAAIQ,KACCA,EAAqC,MAAM;AAAA,IAEpD;AAAA,EAAA,GACD,CAACR,CAAW,CAAC,GAGZ,gBAAAS;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,gBAAa;AAAA,MACb,MAAK;AAAA,MACL,cAAYZ,KAAa;AAAA,MACzB,KAAKC;AAAA,MACL,WAAWY,EAAM,CAAC,WAAWhB,MAAc,eAAgC,aAAa,aAAa,CAAC;AAAA,MAErG,UAAAS,EAAa,IAAI,CAACQ,MAAU;AACzB,cAAMC,IAAKC;AAEP,eAAA,gBAAAC,EAAC,OAAI,EAAA,WAAU,mCACX,UAAA;AAAA,UAAA,gBAAAL;AAAA,YAAC;AAAA,YAAA;AAAA,cACG,gBAAa;AAAA,cACb,UAAUE,EAAM;AAAA,cAChB,IAAAC;AAAA,cACA,MAAK;AAAA,cACL,MAAAhB;AAAA,cACA,OAAOe,EAAM;AAAA,cACb,cAAW;AAAA,cACX,gBAAcA,EAAM,UAAUX;AAAA,cAC9B,gBAAgBW,EAAM,UAAUX;AAAA,cAChC,WAAWU,EAAM;AAAA,gBACb;AAAA,gBACAC,EAAM,aAAaI,EAAoB,OACjC,qBACA;AAAA,cAAA,CACT;AAAA,cACD,UAAU,MAAM;AACZ,gBAAAd,EAAeU,EAAM,KAAK,GACtBhB,KACAA,EAASgB,EAAM,KAAK;AAAA,cAE5B;AAAA,YAAA;AAAA,UACJ;AAAA,UACC,CAACA,EAAM,aACJ,gBAAAG;AAAA,YAAC;AAAA,YAAA;AAAA,cACG,gBAAa;AAAA,cACb,SAASF;AAAA,cACT,WAAWF,EAAM;AAAA,gBACb;AAAA,cAAA,CACH;AAAA,cAEA,UAAA;AAAA,gBAAMC,EAAA;AAAA,gBACNA,EAAM,cACH,gBAAAF,EAAC,UAAK,WAAU,mCAAmC,YAAM,YAAW;AAAA,cAAA;AAAA,YAAA;AAAA,UAE5E;AAAA,UAEHE,EAAM,WACH,gBAAAF;AAAA,YAACO;AAAA,YAAA;AAAA,cACG,WAAWC,EAAiB;AAAA,cAC5B,SAASN,EAAM;AAAA,cACf,YAAY;AAAA,cACZ,UAAUO,EAAgB;AAAA,cAC1B,gBACK,gBAAAT,EAAA,UAAA,EAAO,WAAU,mDACd,4BAACU,GAAuB,EAAA,MAAMC,EAAS,OAAA,CAAQ,EACnD,CAAA;AAAA,cAEJ,WAAS;AAAA,YAAA;AAAA,UACb;AAAA,QAAA,EAAA,GAlD8CR,CAoDtD;AAAA,MAAA,CAEP;AAAA,IAAA;AAAA,EAAA;AAGb;"}
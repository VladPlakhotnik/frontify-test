import { jsx as N, jsxs as re } from "react/jsx-runtime";
import { memo as oe, useRef as ne, useEffect as de, useCallback as C, Children as gt, useMemo as z, createElement as le } from "react";
import { useSortable as pe } from "@dnd-kit/sortable";
import { useDndContext as ue, useDndMonitor as me } from "@dnd-kit/core";
import { CSS as ce } from "@dnd-kit/utilities";
import ie from "../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/noop.es.js";
import { merge as b } from "../../../utilities/merge.es.js";
import { FOCUS_VISIBLE_STYLE as fe } from "../../../utilities/focusStyle.es.js";
import { TreeItemColorsClassMap as we, TreeItemSpacingClassMap as be, TreeItemBorderRadiusClassMap as M, TreeItemBorderClassMap as yt, TreeItemBorderStyleClassMap as he, TreeItemShadowClassMap as Ie } from "../types.es.js";
import { DragHandle as ge } from "./DragHandle.es.js";
import { ExpandButton as ye } from "./ExpandButton.es.js";
import { useDebounce as Dt } from "../../../hooks/useDebounce.es.js";
import { useTreeItem as De } from "./useTreeItem.es.js";
import { EXPAND_ONHOVER_DELAY as Te, INDENTATION_WIDTH as Tt } from "../helpers/constants.es.js";
import { removeFragmentsAndEnrichChildren as Ne } from "../utils/removeFragmentsAndEnrichChildren.es.js";
import { useDeepCompareEffect as xe } from "../utils/useDeepCompareEffect.es.js";
const Se = ({ isSorting: a, wasDragging: L }) => !(a || L), Ae = oe(
  ({
    id: a,
    type: L,
    label: h,
    onDrop: W,
    accepts: Nt,
    showCaret: V,
    children: I,
    parentId: H,
    level: p = 0,
    contentComponent: g,
    treeDraggable: xt = !1,
    onClick: E,
    onSelect: _,
    onExpand: u,
    onShrink: x,
    registerOverlay: S,
    registerNodeChildren: F,
    unregisterNodeChildren: d,
    draggable: St = !0,
    expandable: K = !0,
    showDragHandlerOnHoverOnly: At = !0,
    dragHandlerPosition: m = "left",
    showContentWhileDragging: A = !0,
    itemStyle: U,
    ignoreItemDoubleClick: X = !1,
    expandOnSelect: Rt = !1,
    "data-test-id": vt = "fondue-tree-item"
  }) => {
    var at, rt, ot, nt, dt, lt, pt, ut, mt, ct, it, ft, wt, bt, ht;
    const { active: o, over: R } = ue(), { isSelected: c, isExpanded: i, projection: e } = De(a), q = ne(), G = xt && St, s = (o == null ? void 0 : o.id) === a, t = s && e !== null && e !== void 0 ? e : null, Bt = typeof ((rt = (at = R == null ? void 0 : R.data) == null ? void 0 : at.current) == null ? void 0 : rt.accepts) == "string" ? (ot = R.data.current.accepts) == null ? void 0 : ot.split(", ") : [], Ct = typeof (t == null ? void 0 : t.accepts) == "string" ? (nt = t.accepts) == null ? void 0 : nt.split(", ") : [], y = ((dt = o == null ? void 0 : o.data.current) == null ? void 0 : dt.type) || "", D = ((lt = e == null ? void 0 : e.previousNode) == null ? void 0 : lt.depth) !== void 0 && (e == null ? void 0 : e.depth) > ((pt = e == null ? void 0 : e.previousNode) == null ? void 0 : pt.depth), Mt = D && e.depth - 1 === ((ut = e == null ? void 0 : e.previousNode) == null ? void 0 : ut.depth), Y = D && ((mt = e == null ? void 0 : e.previousNode) == null ? void 0 : mt.accepts) !== void 0 && (((ct = e == null ? void 0 : e.previousNode) == null ? void 0 : ct.accepts.includes(`${y}-deeper`)) || ((it = e == null ? void 0 : e.previousNode) == null ? void 0 : it.accepts.includes(`${y}-within`))), Lt = s && Mt && ((ft = t == null ? void 0 : t.previousNode) == null ? void 0 : ft.accepts) !== void 0 && ((wt = t == null ? void 0 : t.previousNode) == null ? void 0 : wt.accepts.includes(`${y}-within`)) || (t == null ? void 0 : t.isWithinParent) && Ct.includes(`${y}-within`), T = s && (o == null ? void 0 : o.data.current) && (Bt.includes(y) && !D || Lt), J = Dt((r) => {
      q.current === r && (u == null || u(r));
    }, Te);
    de(() => {
      var r, l, w;
      s && (q.current = D ? (r = t == null ? void 0 : t.previousNode) == null ? void 0 : r.id : null), s && Y && (t != null && t.parentId) && t.previousNode && t.parentId === t.previousNode.id && t.parentId !== ((w = (l = o == null ? void 0 : o.data) == null ? void 0 : l.current) == null ? void 0 : w.parentId) && J(t == null ? void 0 : t.parentId);
    }, [
      o == null ? void 0 : o.data,
      t == null ? void 0 : t.parentId,
      t == null ? void 0 : t.previousNode,
      J,
      s,
      Y,
      D
    ]);
    const Wt = C(
      (r) => {
        var It;
        const { over: l, active: w } = r;
        !s || !t || w.id === (l == null ? void 0 : l.id) && (t == null ? void 0 : t.depth) === ((It = w.data.current) == null ? void 0 : It.level) || s && l && T && W && W({
          id: w.id,
          parentId: t.parentId,
          sort: t.position,
          contentComponent: g,
          parentType: t.type
        });
      },
      [s, t, T, W, g]
    ), Ht = C(
      (r) => {
        r.active.id === a && (S == null || S({
          contentComponent: g,
          children: I,
          id: a,
          label: h,
          level: p,
          dragHandlerPosition: m,
          showContentWhileDragging: A
        }));
      },
      [
        I,
        g,
        m,
        a,
        h,
        p,
        S,
        A
      ]
    ), Et = C(
      (r) => {
        r.active.id === a && document.body.style.setProperty("cursor", T ? "grabbing" : "no-drop");
      },
      [T, a]
    );
    me({
      onDragEnd: Wt,
      onDragStart: Ht,
      onDragMove: Et
    });
    const O = C(
      (r) => {
        r == null || r.stopPropagation(), i ? x == null || x(a) : u == null || u(a);
      },
      [a, i, u, x]
    ), _t = Dt(
      (r) => {
        r.stopPropagation(), !(X && r.detail >= 2) && (Rt && O(), _ == null || _(a), E == null || E(a));
      },
      X ? 300 : 0
    ), Q = H && (o == null ? void 0 : o.id) === H, Z = gt.count(I) > 0, { enrichedChildren: $, childrenIds: Ft } = z(() => {
      const r = Ne(I, { parentId: a, level: p + 1 });
      return {
        enrichedChildren: r,
        childrenIds: r.map((l) => l.props.id)
      };
    }, [I, a, p]), {
      attributes: Yt,
      listeners: $t,
      transform: v,
      transition: kt,
      setDraggableNodeRef: zt,
      setDroppableNodeRef: Vt,
      setActivatorNodeRef: Kt
    } = pe({
      id: a,
      disabled: !G,
      data: { type: L, accepts: Nt, parentId: H, level: p },
      animateLayoutChanges: Se,
      transition: null
    });
    xe(() => {
      if (gt.count($) === 0) {
        d == null || d(a);
        return;
      }
      if (s || Q) {
        d == null || d(a);
        return;
      }
      i ? F == null || F({ id: a, children: $ }) : d == null || d(a);
    }, [s, i, Q, $, a]);
    const n = z(() => ({
      spacingY: "none",
      contentHight: "single-line",
      shadow: "none",
      borderRadius: "small",
      borderWidth: "none",
      borderStyle: "none",
      activeColorStyle: "neutral",
      ...U
    }), [U]), f = we[n.activeColorStyle ?? "neutral"], { liClassName: Ut, backgroundClassName: Xt } = z(() => ({
      liClassName: b([
        fe,
        "tw-box-content tw-relative tw-cursor-default tw-transition-colors tw-outline-none tw-ring-inset tw-group tw-no-underline tw-leading-5",
        !s && c ? f.selectedTextColor : f.textColor,
        be[n.spacingY ?? "none"]
      ]),
      backgroundClassName: b([
        "tw-block tw-absolute tw-inset-0 tw-transition-colors -tw-z-10",
        n.borderWidth !== "none" ? M[n.borderRadius ?? "small"] : "",
        !s && (!c || n.activeColorStyle !== "neutral") && f.pressedBackgroundColor,
        !s && c ? f.selectedBackgroundColor : f.backgroundColor
      ])
    }), [s, c, n, f]), qt = A ? !0 : !s, Gt = b([
      "tw-max-w-full tw-grow tw-overflow-hidden",
      s && A ? "tw-opacity-75 tw-blur-sm tw-grayscale" : ""
    ]), Jt = i && !s, P = G && !s, Ot = h !== void 0 && !s, B = !s && K && (V === void 0 ? Z : V);
    let k = "";
    !s && !i && B && Y && ((bt = e == null ? void 0 : e.previousNode) == null ? void 0 : bt.id) === a && (e == null ? void 0 : e.depth) > ((ht = e == null ? void 0 : e.previousNode) == null ? void 0 : ht.depth) && (k = b([
      "tw-border-solid tw-border-box-selected-strong",
      M[n.borderRadius ?? "small"],
      yt.small
    ]));
    const Qt = n.borderWidth !== "none" && k === "" ? b([
      yt[n.borderWidth ?? "none"],
      M[n.borderRadius ?? "small"],
      he[n.borderStyle ?? "none"]
    ]) : "", Zt = n.contentHight === "single-line" ? "tw-h-10" : "tw-h-fit", Pt = n.contentHight === "single-line" ? "tw-h-12" : "tw-h-fit", jt = b([
      "tw-relative tw-z-0 tw-transition-colors tw-flex tw-items-center tw-leading-5 tw-width-fit tw-justify-between",
      Ie[n.shadow ?? "none"],
      s ? "tw-border-dashed tw-border-2 tw-pr-0" : Qt,
      s && M[n.borderRadius ?? "small"],
      s ? Pt : Zt,
      s && (T ? "tw-border-box-selected-strong tw-bg-box-selected-hover" : "tw-bg-box-negative-hover tw-border-box-negative-strong-hover"),
      k
    ]), j = t != null && t.depth ? t.depth * Tt : void 0, tt = s ? 0 : p * Tt, te = { paddingLeft: j ?? tt }, ee = n.borderWidth !== "none" ? {} : { marginLeft: -1 * (j ?? tt) }, se = {
      transform: ce.Transform.toString(v),
      transition: kt
    }, et = { ...$t, ...Yt }, st = m !== "none" ? /* @__PURE__ */ N(
      ge,
      {
        ...m !== "none" ? et : {},
        active: c,
        ref: Kt,
        disabled: !P,
        "aria-hidden": !P,
        showDragHandlerOnHoverOnly: At,
        activeColorStyle: n.activeColorStyle ?? "neutral"
      }
    ) : null, ae = m === "none" ? { ...et } : {};
    return /* @__PURE__ */ le(
      "li",
      {
        ...ae,
        id: a,
        key: a,
        tabIndex: 0,
        role: "treeitem",
        style: te,
        onKeyDown: ie,
        "aria-label": h,
        "aria-level": p + 1,
        onClick: _t,
        className: Ut,
        ref: Vt,
        "data-test-id": vt,
        "aria-selected": c,
        "aria-expanded": i,
        "data-has-children": Z,
        "aria-owns": Ft.join(" ")
      },
      /* @__PURE__ */ re("div", { ref: zt, className: jt, style: se, children: [
        /* @__PURE__ */ N("span", { className: Xt, style: ee, "aria-hidden": !0 }),
        m === "left" && st,
        K && /* @__PURE__ */ N(
          ye,
          {
            active: v != null && v.y ? !1 : c,
            onClick: O,
            expanded: Jt,
            disabled: !B,
            "aria-hidden": !B,
            className: B ? "tw-visible" : "tw-invisible tw-pointer-events-none"
          }
        ),
        Ot && /* @__PURE__ */ N("span", { className: "first:tw-ml-3.5 tw-w-full tw-h-full tw-flex tw-items-center", children: h }),
        qt && /* @__PURE__ */ N("div", { className: Gt, children: g }),
        m === "right" && st
      ] })
    );
  }
);
Ae.displayName = "FondueTreeItem";
export {
  Ae as TreeItem
};
//# sourceMappingURL=TreeItem.es.js.map

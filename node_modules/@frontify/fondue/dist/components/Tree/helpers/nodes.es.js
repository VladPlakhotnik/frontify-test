import { ROOT_ID as c } from "./constants.es.js";
const f = (e, d) => {
  const n = new Set(d);
  return e.filter((s) => !n.has(s.props.id));
}, l = (e, d) => {
  const n = [], t = new Map(e.map((o) => [o.props.id, o])).get(d);
  if (t) {
    let o = function(p) {
      const i = e.filter((r) => r.props.parentId === p);
      for (const r of i)
        n.push(r.props.id), o(r.props.id);
    };
    o(t.props.id);
  }
  return n;
}, h = (e, d) => {
  const n = [], t = new Map(e.map((o) => [o.props.id, o])).get(d);
  if (t) {
    let o = function(p) {
      const i = e.filter((r) => r.props.parentId === p);
      for (const r of i)
        n.push(r), o(r.props.id);
    };
    o(t.props.id);
  }
  return n;
}, u = (e, d) => {
  const n = [];
  for (const s of e) {
    const t = s.props.parentId;
    typeof t == "string" && (t === c || d.has(t) && n.find((o) => o.id === t)) && n.push({ id: s.props.id, node: s });
  }
  return n.map((s) => s.node);
};
export {
  u as getNodesToRender,
  l as getReactNodeIdsInFlatArray,
  h as getReactNodesInFlatArray,
  f as removeReactNodesFromFlatArray
};
//# sourceMappingURL=nodes.es.js.map

import { jsxs as u, jsx as e } from "react/jsx-runtime";
import { useRef as d } from "react";
import { useBreadcrumbItem as w } from "@react-aria/breadcrumbs";
import { useFocusRing as f } from "@react-aria/focus";
import { mergeProps as x } from "@react-aria/utils";
import { getItemElementType as h } from "../../utilities/elements.es.js";
import { FOCUS_STYLE as b } from "../../utilities/focusStyle.es.js";
import { merge as g } from "../../utilities/merge.es.js";
const y = () => /* @__PURE__ */ e(
  "svg",
  {
    "aria-hidden": "true",
    width: "13",
    height: "17",
    viewBox: "0 0 13 17",
    fill: "none",
    className: "tw-stroke-current tw-text-black-20",
    xmlns: "http://www.w3.org/2000/svg",
    children: /* @__PURE__ */ e("line", { x1: "3.52447", y1: "16.0623", x2: "8.46874", y2: "0.845385" })
  }
), P = ({
  label: r,
  link: o,
  onClick: s,
  showSeparator: n,
  "data-test-id": i = "breadcrumb"
}) => {
  const m = d(null), t = h(o, s), { itemProps: a } = w(
    {
      isCurrent: !1,
      children: r,
      elementType: t
    },
    m
  ), { isFocusVisible: c, focusProps: p } = f(), l = x(a, p, { a: { href: o }, button: { onClick: s, type: "button" }, span: {} }[t]);
  return /* @__PURE__ */ u(
    "li",
    {
      className: "tw-flex tw-items-center tw-text-text-weak hover:tw-text-text tw-text-xs tw-transition-colors",
      "data-test-id": `${i}-item`,
      children: [
        /* @__PURE__ */ e(t, { ref: m, ...l, className: g(["tw-outline-none", c && b]), children: r }),
        n && /* @__PURE__ */ e(y, {})
      ]
    }
  );
};
P.displayName = "FondueBreadcrumbItem";
export {
  P as BreadcrumbItem
};
//# sourceMappingURL=BreadcrumbItem.es.js.map

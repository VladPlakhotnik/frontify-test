import { jsxs as n } from "react/jsx-runtime";
import { useRef as h, createElement as y } from "react";
import { useBreadcrumbItem as B } from "@react-aria/breadcrumbs";
import { useFocusRing as E } from "@react-aria/focus";
import { mergeProps as F } from "@react-aria/utils";
import { FOCUS_STYLE as I } from "../../utilities/focusStyle.es.js";
import { merge as N } from "../../utilities/merge.es.js";
import { getItemElementType as P } from "../../utilities/elements.es.js";
import { Badge as T } from "../Badge/Badge.es.js";
const C = ({
  label: r,
  badges: t,
  bold: i,
  decorator: c,
  link: m,
  onClick: o,
  "data-test-id": p = "breadcrumb"
}) => {
  const s = h(null), e = P(m, o), { itemProps: a } = B(
    {
      isCurrent: !0,
      children: r,
      elementType: e
    },
    s
  ), l = { a: { href: m }, button: { onClick: o, type: "button" }, span: {} }, { isFocusVisible: u, focusProps: d } = E(), f = F(a, d, l[e]), w = N([
    "tw-flex tw-gap-x-1 tw-items-center tw-leading-4 tw-h-6",
    i && "tw-font-bold",
    u && I
  ]);
  return /* @__PURE__ */ n(
    "li",
    {
      className: "tw-w-full tw-inline-flex tw-align-middle tw-gap-x-1 tw-text-m tw-text-text tw-items-center",
      "data-test-id": `${p}-item`,
      children: [
        /* @__PURE__ */ n(e, { ref: s, ...f, className: w, children: [
          c,
          r
        ] }),
        t == null ? void 0 : t.map(({ children: x, ...b }, g) => /* @__PURE__ */ y(T, { ...b, key: `breadcrumb-badge-${g}` }, x))
      ]
    }
  );
};
C.displayName = "FondueCurrentBreadcrumbItem";
export {
  C as CurrentBreadcrumbItem
};
//# sourceMappingURL=CurrentBreadcrumbItem.es.js.map

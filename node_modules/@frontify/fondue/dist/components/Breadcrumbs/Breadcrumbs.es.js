import { jsx as e } from "react/jsx-runtime";
import { useBreadcrumbs as f } from "@react-aria/breadcrumbs";
import { BreadcrumbItem as w } from "./BreadcrumbItem.es.js";
import { CurrentBreadcrumbItem as h } from "./CurrentBreadcrumbItem.es.js";
import { merge as g } from "../../utilities/merge.es.js";
const N = (r) => ({
  children: r.map(({ label: a }, t) => /* @__PURE__ */ e("li", { "aria-label": a, children: a }, `breadcrumb-${t}`))
});
var y = /* @__PURE__ */ ((r) => (r.None = "None", r.Small = "Small", r.Medium = "Medium", r))(y || {});
const B = {
  None: "tw-gap-y-0",
  Small: "tw-gap-y-0.5",
  Medium: "tw-gap-y-1"
}, M = ({
  items: r,
  "data-test-id": a = "breadcrumb",
  verticalGap: t = "Medium"
  /* Medium */
}) => {
  const d = N(r), { navProps: l } = f(d);
  return /* @__PURE__ */ e("nav", { ...l, className: "tw-font-sans", "aria-label": "Breadcrumb", "data-test-id": a, children: /* @__PURE__ */ e("ol", { className: g(["tw-list-none tw-flex tw-flex-wrap", B[t]]), children: r.map(({ label: o, badges: u, bold: i, decorator: p, link: s, onClick: n }, m) => {
    const b = m === r.length - 1, c = `breadcrumb-${m}`;
    return b ? /* @__PURE__ */ e(
      h,
      {
        label: o,
        badges: u,
        bold: i,
        decorator: p,
        link: s,
        onClick: n,
        "data-test-id": a
      },
      c
    ) : /* @__PURE__ */ e(
      w,
      {
        label: o,
        link: s,
        onClick: n,
        showSeparator: m < r.length - 2,
        "data-test-id": a
      },
      c
    );
  }) }) });
};
M.displayName = "FondueBreadcrumbs";
export {
  y as BreadcrumbGap,
  M as Breadcrumbs,
  B as verticalGapClassMap
};
//# sourceMappingURL=Breadcrumbs.es.js.map

import { jsxs as N, Fragment as y, jsx as C } from "react/jsx-runtime";
import { Children as P } from "react";
import { SPACING_VALUES as e, PADDING_VALUES_MAP as s, MARGIN_VALUES_MAP as r } from "../../utilities/dimensions.es.js";
import { merge as x } from "../../utilities/merge.es.js";
import { Box as T } from "../Box/Box.es.js";
const j = {
  row: "tw-flex-row",
  column: "tw-flex-col",
  "row-reverse": "tw-flex-row-reverse",
  "column-reverse": "tw-flex-col-reverse"
}, p = {
  start: "tw-justify-start",
  end: "tw-justify-end",
  center: "tw-justify-center",
  between: "tw-justify-between",
  around: "tw-justify-around",
  evenly: "tw-justify-evenly"
}, v = {
  start: "tw-items-start",
  end: "tw-items-end",
  center: "tw-items-center",
  baseline: "tw-items-baseline",
  stretch: "tw-items-stretch"
}, G = "fondue-stack", M = ({
  children: n,
  "data-test-id": o = G,
  direction: a = "column",
  spacing: i = 0,
  divider: c,
  padding: t = 0,
  margin: m = 0,
  justify: l = "start",
  alignItems: w = "start",
  bg: d,
  color: f,
  as: u = "div"
}) => {
  const A = e.includes(t) ? s[t] : s[0], _ = e.includes(t) ? r[m] : r[0], S = P.map(n, (I) => /* @__PURE__ */ N(y, { children: [
    I,
    c
  ] }));
  return /* @__PURE__ */ C(
    T,
    {
      "data-test-id": o,
      className: x([
        "tw-flex",
        p[l],
        v[w],
        j[a],
        A,
        _,
        d,
        f
      ]),
      style: {
        gap: i
      },
      as: u,
      children: S
    }
  );
};
M.displayName = "FondueStack";
export {
  j as STACK_DIRECTION_MAPPING,
  G as STACK_TEST_ID,
  M as Stack
};
//# sourceMappingURL=Stack.es.js.map

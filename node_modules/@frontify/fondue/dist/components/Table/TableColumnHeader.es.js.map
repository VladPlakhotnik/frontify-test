{"version":3,"file":"TableColumnHeader.es.js","sources":["../../../src/components/Table/TableColumnHeader.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Checkbox, CheckboxState } from '@components/Checkbox/Checkbox';\nimport { IconSize } from '@foundation/Icon/IconSize';\nimport { FOCUS_VISIBLE_STYLE } from '@utilities/focusStyle';\nimport { merge } from '@utilities/merge';\nimport { Key, cloneElement, useEffect, useRef, useState } from 'react';\nimport { IconArrowBidirectional, IconArrowDown, IconArrowUp } from '@foundation/Icon/Generated';\nimport { SelectionMode, SortDirection } from '..';\n\nexport enum TableColumnHeaderType {\n    Default = 'Default',\n    SelectAll = 'SelectAll',\n}\n\nexport type TableColumnHeaderProps = {\n    column: any;\n    type?: TableColumnHeaderType;\n    rowIds: Key[];\n    sortDirection?: SortDirection;\n    selectionMode: string;\n    isColumnSorted?: boolean;\n    handleSortChange: (column: string, direction?: SortDirection) => void;\n    setSelectedRows?: (ids?: Key[]) => void;\n};\n\nexport const TableColumnHeader = ({\n    column,\n    type = TableColumnHeaderType.Default,\n    rowIds,\n    sortDirection,\n    selectionMode,\n    isColumnSorted = false,\n    handleSortChange,\n    setSelectedRows,\n}: TableColumnHeaderProps) => {\n    const {\n        key,\n        rendered,\n        props: { allowsSorting },\n    } = column;\n    const [icon, setIcon] = useState(<IconArrowBidirectional />);\n    const [isChecked, setIsChecked] = useState(false);\n    const ref = useRef<HTMLTableCellElement | null>(null);\n    const ButtonOrSpan = allowsSorting ? 'button' : 'span';\n\n    useEffect(() => {\n        if (isColumnSorted) {\n            setIcon(sortDirection === SortDirection.Descending ? <IconArrowDown /> : <IconArrowUp />);\n        } else {\n            setIcon(<IconArrowBidirectional />);\n        }\n    }, [isColumnSorted, sortDirection]);\n\n    if (type === TableColumnHeaderType.SelectAll) {\n        const ariaProps = {\n            'aria-label': 'Select all',\n            scope: 'col',\n        };\n\n        const checkboxState = isChecked ? CheckboxState.Checked : CheckboxState.Unchecked;\n\n        const handleChange = () => {\n            if (!setSelectedRows) {\n                return;\n            }\n\n            if (isChecked) {\n                setSelectedRows([]);\n            } else {\n                setSelectedRows(rowIds);\n            }\n\n            setIsChecked((checked) => !checked);\n        };\n\n        return (\n            <th\n                {...ariaProps}\n                ref={ref}\n                className=\"tw-pl-8 tw-py-3 tw-pr-4 tw-w-16 tw-border-l-4 tw-border-transparent tw-group tw-outline-none\"\n                data-test-id=\"table-select-cell\"\n            >\n                {selectionMode === SelectionMode.SingleSelect ? (\n                    <span className=\"tw-sr-only\">{ariaProps['aria-label']}</span>\n                ) : (\n                    <Checkbox value={key} aria-label={key} state={checkboxState} onChange={handleChange} />\n                )}\n            </th>\n        );\n    }\n\n    return (\n        <th\n            ref={ref}\n            className={merge([\n                'tw-text-xs tw-font-medium tw-text-black-100 dark:tw-text-white tw-px-4 tw-py-3 tw-outline-none tw-group focus-visible:bg-violet-90',\n                allowsSorting ? 'tw-cursor-pointer' : '',\n            ])}\n            data-test-id=\"table-column\"\n            scope=\"col\"\n            onClick={allowsSorting ? () => handleSortChange(column.key, sortDirection) : () => null}\n        >\n            <ButtonOrSpan\n                className={merge([\n                    'tw-flex tw-gap-x-1 tw-items-center',\n                    FOCUS_VISIBLE_STYLE,\n                    allowsSorting ? 'tw-cursor-pointer' : 'tw-cursor-default',\n                ])}\n            >\n                {rendered}\n                {allowsSorting && (\n                    <span\n                        aria-hidden=\"true\"\n                        className={\n                            isColumnSorted\n                                ? 'tw-text-violet-50'\n                                : 'tw-text-black-40 dark:tw-text-black-60 group-hover:tw-text-black-100 dark:group-hover:tw-text-white'\n                        }\n                    >\n                        {cloneElement(icon, { size: IconSize.Size12 })}\n                    </span>\n                )}\n            </ButtonOrSpan>\n        </th>\n    );\n};\nTableColumnHeader.displayName = 'FondueTableColumnHeader';\n"],"names":["TableColumnHeaderType","TableColumnHeader","column","type","rowIds","sortDirection","selectionMode","isColumnSorted","handleSortChange","setSelectedRows","key","rendered","allowsSorting","icon","setIcon","useState","jsx","IconArrowBidirectional","isChecked","setIsChecked","ref","useRef","ButtonOrSpan","useEffect","SortDirection","IconArrowDown","IconArrowUp","ariaProps","checkboxState","CheckboxState","handleChange","checked","SelectionMode","Checkbox","merge","jsxs","FOCUS_VISIBLE_STYLE","IconSize"],"mappings":";;;;;;;;;;AAWY,IAAAA,sBAAAA,OACRA,EAAA,UAAU,WACVA,EAAA,YAAY,aAFJA,IAAAA,KAAA,CAAA,CAAA;AAgBL,MAAMC,IAAoB,CAAC;AAAA,EAC9B,QAAAC;AAAA,EACA,MAAAC,IAAO;AAAA,EACP,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,eAAAC;AAAA,EACA,gBAAAC,IAAiB;AAAA,EACjB,kBAAAC;AAAA,EACA,iBAAAC;AACJ,MAA8B;AACpB,QAAA;AAAA,IACF,KAAAC;AAAA,IACA,UAAAC;AAAA,IACA,OAAO,EAAE,eAAAC,EAAc;AAAA,EACvB,IAAAV,GACE,CAACW,GAAMC,CAAO,IAAIC,EAAS,gBAAAC,EAACC,IAAuB,CAAA,CAAE,GACrD,CAACC,GAAWC,CAAY,IAAIJ,EAAS,EAAK,GAC1CK,IAAMC,EAAoC,IAAI,GAC9CC,IAAeV,IAAgB,WAAW;AAUhD,MARAW,EAAU,MAAM;AACZ,IACYT,EADRP,IACQF,MAAkBmB,EAAc,aAAa,gBAAAR,EAACS,IAAc,CAAA,IAAK,gBAAAT,EAACU,KAAY,IAE9E,gBAAAV,EAACC,KAAuB,CAFwD;AAAA,EAG5F,GACD,CAACV,GAAgBF,CAAa,CAAC,GAE9BF,MAAS,aAAiC;AAC1C,UAAMwB,IAAY;AAAA,MACd,cAAc;AAAA,MACd,OAAO;AAAA,IAAA,GAGLC,IAAgBV,IAAYW,EAAc,UAAUA,EAAc,WAElEC,IAAe,MAAM;AACvB,MAAKrB,MAKDA,EADAS,IACgB,CAAE,IAEFd,CAFE,GAKTe,EAAA,CAACY,MAAY,CAACA,CAAO;AAAA,IAAA;AAIlC,WAAA,gBAAAf;AAAA,MAAC;AAAA,MAAA;AAAA,QACI,GAAGW;AAAA,QACJ,KAAAP;AAAA,QACA,WAAU;AAAA,QACV,gBAAa;AAAA,QAEZ,UAAAd,MAAkB0B,EAAc,eAC7B,gBAAAhB,EAAC,UAAK,WAAU,cAAc,YAAU,YAAY,GAAE,IAErD,gBAAAA,EAAAiB,GAAA,EAAS,OAAOvB,GAAK,cAAYA,GAAK,OAAOkB,GAAe,UAAUE,EAAc,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAIrG;AAGI,SAAA,gBAAAd;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,KAAAI;AAAA,MACA,WAAWc,EAAM;AAAA,QACb;AAAA,QACAtB,IAAgB,sBAAsB;AAAA,MAAA,CACzC;AAAA,MACD,gBAAa;AAAA,MACb,OAAM;AAAA,MACN,SAASA,IAAgB,MAAMJ,EAAiBN,EAAO,KAAKG,CAAa,IAAI,MAAM;AAAA,MAEnF,UAAA,gBAAA8B;AAAA,QAACb;AAAA,QAAA;AAAA,UACG,WAAWY,EAAM;AAAA,YACb;AAAA,YACAE;AAAA,YACAxB,IAAgB,sBAAsB;AAAA,UAAA,CACzC;AAAA,UAEA,UAAA;AAAA,YAAAD;AAAA,YACAC,KACG,gBAAAI;AAAA,cAAC;AAAA,cAAA;AAAA,gBACG,eAAY;AAAA,gBACZ,WACIT,IACM,sBACA;AAAA,gBAGT,YAAaM,GAAM,EAAE,MAAMwB,EAAS,QAAQ;AAAA,cAAA;AAAA,YACjD;AAAA,UAAA;AAAA,QAAA;AAAA,MAER;AAAA,IAAA;AAAA,EAAA;AAGZ;AACApC,EAAkB,cAAc;"}
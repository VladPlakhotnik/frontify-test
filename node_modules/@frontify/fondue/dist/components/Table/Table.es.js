import { jsx as t, jsxs as c } from "react/jsx-runtime";
import { useTableState as x, TableHeader as N, Column as D, TableBody as R, Row as A, Cell as O } from "@react-stately/table";
import { useState as E, useRef as H } from "react";
import { TableCellType as h, TableCell as z } from "./TableCell.es.js";
import { TableColumnHeaderType as p, TableColumnHeader as F } from "./TableColumnHeader.es.js";
import { TableHeaderRow as j } from "./TableHeaderRow.es.js";
import { TableRow as L } from "./TableRow.es.js";
var _ = /* @__PURE__ */ ((e) => (e.NoSelect = "none", e.SingleSelect = "single", e.MultiSelect = "multiple", e))(_ || {}), $ = /* @__PURE__ */ ((e) => (e.Ascending = "ascending", e.Descending = "descending", e))($ || {});
const B = "descending", I = (e, n, o = !1) => ({
  children: [
    /* @__PURE__ */ t(N, { columns: e, children: (l) => {
      const s = !!(l.sortable && o);
      return /* @__PURE__ */ t(D, { allowsSorting: s, children: l.name });
    } }, "table-header"),
    /* @__PURE__ */ t(R, { items: n, children: (l) => /* @__PURE__ */ t(A, { children: (s) => /* @__PURE__ */ t(O, { "aria-label": l.cells[s].ariaLabel, children: l.cells[s].value }, `${l.key}-${s}`) }) }, "table-body")
  ]
}), K = (e, n) => e.find(({ key: o }) => o === n) || null, P = (e) => e.map(({ key: n }) => n), U = ({
  columns: e,
  rows: n,
  onSelectionChange: o,
  selectionMode: l = "none",
  onSortChange: s,
  selectedRowIds: i = [],
  ariaLabel: w = "Table"
}) => {
  const u = l === "single" || l === "multiple", [{ sortedColumnKey: m, sortOrder: y }, g] = E({
    sortedColumnKey: void 0,
    sortOrder: void 0
  }), k = (r, a) => {
    g({
      sortedColumnKey: r,
      sortOrder: m !== r ? B : a === "ascending" ? "descending" : "ascending"
    }), s == null || s(r, a);
  }, T = P(n), f = H(null), C = I(e, n, !!s), v = x({
    ...C,
    selectionMode: l,
    showSelectionCheckboxes: u
  }), { collection: b } = v;
  return /* @__PURE__ */ t("div", { className: "tw-w-full tw-max-h-96 sm:tw-max-h-full", children: /* @__PURE__ */ c(
    "table",
    {
      "aria-label": w,
      ref: f,
      className: "tw-border-collapse tw-table-auto tw-w-full tw-min-w-max tw-text-left dark:tw-bg-black-100 dark:tw-text-black-20",
      children: [
        /* @__PURE__ */ t("thead", { children: b.headerRows.map((r) => /* @__PURE__ */ c(j, { children: [
          [...r.childNodes].map((a) => {
            const d = a.props.isSelectionCell ? p.SelectAll : p.Default;
            return /* @__PURE__ */ t(
              F,
              {
                column: a,
                type: d,
                rowIds: T,
                sortDirection: y,
                selectionMode: l,
                isColumnSorted: m === a.key,
                handleSortChange: k,
                setSelectedRows: o
              },
              a.key
            );
          }),
          /* @__PURE__ */ t("td", {})
        ] }, r.key)) }),
        /* @__PURE__ */ t("tbody", { className: "tw-relative tw-z-[-1] sm:tw-z-auto", children: [...b.body.childNodes].map((r) => {
          const a = K(n, r.key);
          return /* @__PURE__ */ c(L, { isSelected: i.includes(r.key), children: [
            [...r.childNodes].map((d) => {
              const S = d.props.isSelectionCell ? h.Checkbox : h.Default;
              return /* @__PURE__ */ t(
                z,
                {
                  cell: d,
                  selectionMode: l,
                  type: S,
                  isChecked: i.includes(r.key),
                  selectedRows: i,
                  setSelectedRows: o
                },
                d.key
              );
            }),
            (a == null ? void 0 : a.actionElements) && /* @__PURE__ */ t("td", { className: "tw-sticky tw-right-0 tw-z-10", "data-test-id": "table-actions", children: /* @__PURE__ */ t("div", { className: "tw-float-right hover:tw-bg-gradient-to-r hover:tw-from-transparent hover:tw-to-black-0 dark:hover:tw-to-black-95 tw-py-4 tw-pr-8 tw-pl-4", children: a.actionElements }) })
          ] }, r.key);
        }) })
      ]
    }
  ) });
};
U.displayName = "FondueTable";
export {
  _ as SelectionMode,
  $ as SortDirection,
  U as Table
};
//# sourceMappingURL=Table.es.js.map

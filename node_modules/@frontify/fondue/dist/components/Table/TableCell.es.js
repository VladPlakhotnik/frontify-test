import { jsx as a } from "react/jsx-runtime";
import { Checkbox as x, CheckboxState as f } from "../Checkbox/Checkbox.es.js";
import { merge as w } from "../../utilities/merge.es.js";
import { useRef as u } from "react";
import { SelectionMode as d } from "./Table.es.js";
var h = /* @__PURE__ */ ((t) => (t.Default = "Default", t.Checkbox = "Checkbox", t))(h || {});
const k = ({
  cell: t,
  selectionMode: c,
  type: i = "Default",
  isChecked: e = !1,
  selectedRows: o,
  setSelectedRows: r
}) => {
  const n = u(null);
  if (i === "Checkbox") {
    const { key: l } = t, b = () => {
      if (!r)
        return;
      if (e) {
        const m = o.filter((s) => s !== t.parentKey);
        r(m);
        return;
      }
      const p = c === d.SingleSelect ? [t.parentKey] : [...o, t.parentKey];
      r(p);
    };
    return /* @__PURE__ */ a(
      "td",
      {
        role: "cell",
        ref: n,
        className: w([
          "tw-pl-8 tw-py-4 tw-pr-4 tw-relative after:tw-absolute after:tw-left-0 after:tw-top-[-1px] after:tw-bottom-[-1px] after:tw-w-1",
          e ? "after:tw-bg-box-selected-strong" : "after:tw-bg-transparent"
        ]),
        "data-test-id": "table-select-cell",
        children: /* @__PURE__ */ a(
          x,
          {
            value: l,
            "aria-label": t["aria-label"] || l,
            state: e ? f.Checked : f.Unchecked,
            onChange: b
          }
        )
      }
    );
  }
  return /* @__PURE__ */ a(
    "td",
    {
      role: "cell",
      ref: n,
      className: w([
        "tw-p-4 tw-font-normal tw-text-xs focus:tw-outline-none",
        e ? "tw-text-black-100 dark:tw-text-white" : "tw-text-black-80 dark:tw-text-black-20"
      ]),
      children: t.rendered
    }
  );
};
k.displayName = "FondueTableCell";
export {
  k as TableCell,
  h as TableCellType
};
//# sourceMappingURL=TableCell.es.js.map

import { jsx as o, jsxs as S } from "react/jsx-runtime";
import { useMemoizedId as j } from "../../hooks/useMemoizedId.es.js";
import { useFocusRing as k } from "@react-aria/focus";
import { setInteractionModality as F } from "@react-aria/interactions";
import { useRadio as L, useRadioGroup as M } from "@react-aria/radio";
import { VisuallyHidden as P } from "@react-aria/visually-hidden";
import { useRadioGroupState as T } from "@react-stately/radio";
import { FOCUS_STYLE as D } from "../../utilities/focusStyle.es.js";
import { merge as b } from "../../utilities/merge.es.js";
import { motion as E } from "framer-motion";
import { forwardRef as X, useRef as N, useMemo as z } from "react";
const g = (w) => w.icon !== void 0, C = X((w, s) => {
  const { id: f, item: t, disabled: i, radioGroupState: e, size: l } = w, a = N(null), d = t.id === e.selectedValue, { inputProps: p } = L(
    {
      value: t.id,
      "aria-label": g(t) ? t.ariaLabel : t.value.toString(),
      isDisabled: i,
      id: d ? f : void 0
    },
    e,
    a
  ), { isFocusVisible: c, focusProps: h } = k(), u = () => {
    var r;
    i || (e.setSelectedValue(t.id), (r = a.current) == null || r.focus(), F("pointer"));
  }, v = () => {
    switch (!0) {
      case g(t):
        return "fondue-segmented-controls-item-icon";
      case typeof t.value == "string":
        return "fondue-segmented-controls-item-text";
      default:
        return "fondue-segmented-controls-item-number";
    }
  };
  return /* @__PURE__ */ o(
    "div",
    {
      ref: s,
      className: b([
        "tw-relative",
        "after:tw-content-[''] after:tw-border-r after:tw-border-solid after:tw-border-line-strong after:tw-absolute after:tw-right-0 after:tw-h-full last:after:tw-hidden",
        c && D
      ]),
      children: /* @__PURE__ */ S(
        "div",
        {
          role: "none",
          onClick: u,
          "data-test-id": v(),
          className: b([
            "tw-relative tw-w-full tw-py-2 tw-inline-flex tw-justify-center tw-items-center tw-font-sans tw-font-normal tw-h-full tw-text-center",
            l === "small" ? "tw-px-2" : "tw-px-4",
            d && !i ? "tw-text-text" : "tw-text-text-weak",
            i ? "tw-text-box-disabled-inverse hover:tw-cursor-not-allowed" : "hover:tw-text-text hover:tw-cursor-pointer"
          ]),
          children: [
            /* @__PURE__ */ o(P, { children: /* @__PURE__ */ o(
              "input",
              {
                ...p,
                ...h,
                "data-test-id": "fondue-segmented-controls-input",
                ref: a
              }
            ) }),
            /* @__PURE__ */ S("span", { className: "tw-overflow-hidden tw-text-ellipsis tw-whitespace-nowrap tw-flex", children: [
              g(t) && /* @__PURE__ */ o("span", { className: "tw-leading-3", "aria-label": t.ariaLabel, children: t.icon }),
              t.value && /* @__PURE__ */ o("span", { className: g(t) ? "tw-ml-2" : "", children: t.value.toString() })
            ] })
          ]
        }
      )
    },
    t.id
  );
});
C.displayName = "SegmentedControlsItem";
const A = ({
  id: w,
  items: s,
  activeItemId: f,
  onChange: t,
  ariaLabel: i = "SegmentedControls",
  disabled: e = !1,
  hugWidth: l = !1,
  size: a
}) => {
  var y;
  const d = j(w), p = { onChange: t, value: f, label: i, isDisabled: e }, c = T(p), { radioGroupProps: h } = M(p, c), u = N([]), v = z(() => s.map((n, x) => /* @__PURE__ */ o(
    C,
    {
      id: d,
      item: n,
      disabled: e,
      radioGroupState: c,
      ref: (m) => u.current[x] = m,
      size: a
    },
    `fondue-segmented-controls-${d}-item-${n.id}`
  )), [s, d, e, c, a]), r = s.findIndex((n) => n.id === c.selectedValue), I = l ? "" : "tw-w-full", R = l ? "tw-flex" : "tw-grid tw-grid-flow-col tw-auto-cols-fr tw-justify-evenly", $ = () => {
    var x;
    let n = -1;
    for (let m = 0; m < r; m++)
      n += ((x = u.current[m]) == null ? void 0 : x.clientWidth) || 0;
    return `${n}px`;
  }, G = l ? `${(y = u.current[r]) == null ? void 0 : y.clientWidth}px` : `${100 / s.length}%`, V = l ? $() : `calc(${100 * r}% - ${2 * r}px)`;
  return /* @__PURE__ */ o("div", { className: "tw-flex", children: /* @__PURE__ */ S(
    "fieldset",
    {
      ...h,
      "data-test-id": "fondue-segmented-controls",
      className: b([
        "tw-relative tw-h-9 tw-p-0 tw-border tw-border-solid tw-border-line-strong tw-m-0 tw-bg-base-alt tw-rounded tw-font-sans tw-text-s tw-select-none",
        I,
        R
      ]),
      children: [
        /* @__PURE__ */ o(
          E.div,
          {
            "aria-hidden": "true",
            animate: { x: V, width: G },
            initial: !1,
            transition: { type: "tween", duration: 0.3 },
            hidden: !f,
            className: b([
              "tw-absolute tw--inset-px tw-h-full tw-box-content tw-border tw-rounded tw-pointer-events-none",
              e ? "tw-border-line-x-strong tw-bg-box-disabled" : "tw-border-line-xx-strong tw-bg-base"
            ])
          }
        ),
        v
      ]
    }
  ) });
};
A.displayName = "FondueSegmentedControls";
export {
  A as SegmentedControls
};
//# sourceMappingURL=SegmentedControls.es.js.map

{"version":3,"file":"Tabs.es.js","sources":["../../../src/components/Tabs/Tabs.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    Children,\n    KeyboardEvent,\n    ReactElement,\n    ReactNode,\n    cloneElement,\n    isValidElement,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport { TabItemProps } from '@components/Tabs/TabItem';\nimport { merge } from '@utilities/merge';\nimport { IconDotsHorizontal } from '@foundation/Icon/Generated';\nimport { Badge } from '@components/Badge';\nimport { motion } from 'framer-motion';\nimport { useFocusRing } from '@react-aria/focus';\nimport { FOCUS_STYLE } from '@utilities/focusStyle';\nimport { useMemoizedId } from '@hooks/useMemoizedId';\nimport { DimensionUnity } from '@utilities/dimensions';\n\nexport enum TabsPaddingX {\n    None = 'None',\n    XSmall = 'XSmall',\n    Small = 'Small',\n    Medium = 'Medium',\n    Large = 'Large',\n}\n\nexport enum TabSize {\n    Small = 'Small',\n    Large = 'Large',\n}\n\nexport type TabsProps = {\n    paddingX?: TabsPaddingX;\n    size?: TabSize;\n    activeItemId: string;\n    children: ReactNode;\n    onChange?: (tabId: string) => void;\n    maxHeight?: `${number}${DimensionUnity}`;\n    minHeight?: `${number}${DimensionUnity}`;\n};\n\nconst paddingMap: Record<TabsPaddingX, string> = {\n    [TabsPaddingX.None]: 'tw-pl-0',\n    [TabsPaddingX.XSmall]: 'tw-pl-xs',\n    [TabsPaddingX.Small]: 'tw-pl-s',\n    [TabsPaddingX.Medium]: 'tw-pl-m',\n    [TabsPaddingX.Large]: 'tw-pl-l',\n};\n\nconst getTabButtonTextStyle = (tab: TabItemProps, activeItemId: string) => {\n    if (tab.disabled) {\n        return 'tw-text-text-disabled';\n    }\n\n    if (tab.id === activeItemId) {\n        return 'tw-font-medium tw-text-text';\n    }\n\n    return 'tw-text-text-weak hover:tw-text-text';\n};\n\nexport const Tabs = ({\n    paddingX,\n    size,\n    activeItemId,\n    children,\n    onChange,\n    maxHeight,\n    minHeight,\n}: TabsProps): ReactElement => {\n    const groupId = useMemoizedId();\n    const tabNavRef = useRef<HTMLDivElement | null>(null);\n    const [isOverflowing, setIsOverflowing] = useState(false);\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    const tabs: TabItemProps[] =\n        Children.map(children, (child) => {\n            if (!isValidElement<TabItemProps>(child)) {\n                return null;\n            }\n            return child?.props;\n        }) ?? [];\n\n    const [overflowArray, setOverflowArray] = useState([0]);\n\n    const checkIfOverflowing = useCallback(() => {\n        const tabNav = tabNavRef.current;\n        setIsOverflowing((tabNav && tabNav.scrollWidth > tabNav.clientWidth) ?? false);\n        const overFlowIndex = [];\n        if (tabNav) {\n            for (const tabItem of tabNav.children) {\n                const i = [...tabNav.children].indexOf(tabItem);\n                const navPosition = tabNav.getBoundingClientRect();\n                const tabPosition = tabItem.getBoundingClientRect();\n                if (tabPosition.right > navPosition.right || tabPosition.left < navPosition.left) {\n                    overFlowIndex.push(i);\n                }\n            }\n\n            const overFlowIndexInAscOrder = [...overFlowIndex].sort((a, b) => a - b);\n            setOverflowArray(overFlowIndexInAscOrder);\n        }\n    }, []);\n\n    const getOverflownTabs = () => {\n        return overflowArray.map((i) => {\n            return tabs[i];\n        });\n    };\n\n    const filterTabList = (array: TabItemProps[], direction: string) => {\n        const activeItemIndex = array.findIndex((tab) => tab.id === activeItemId);\n\n        return array.filter((tab, index) => {\n            if (direction === 'next') {\n                if (index > activeItemIndex && !tab.disabled) {\n                    return tab;\n                }\n            }\n\n            if (direction === 'previous') {\n                if (index < activeItemIndex && !tab.disabled) {\n                    return tab;\n                }\n            }\n\n            return false;\n        });\n    };\n\n    const handleKeyboardTabChange = (event: KeyboardEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n\n        const overflownTabs = getOverflownTabs();\n        const target = event.target as HTMLElement;\n        const fromOverflow = target.id.includes('-m');\n        const currentTabId = target.id.replace('-btn-m', '');\n        const currentTabsArray = fromOverflow ? overflownTabs : tabs;\n\n        const nextTabs = filterTabList(currentTabsArray, 'next');\n        const previousTabs = filterTabList(currentTabsArray, 'previous');\n\n        if ((event.key === 'ArrowRight' || event.key === 'ArrowDown') && nextTabs.length > 0) {\n            triggerTabButton(nextTabs[0].id, fromOverflow);\n        }\n\n        if ((event.key === 'ArrowLeft' || event.key === 'ArrowUp') && previousTabs.length > 0) {\n            triggerTabButton(previousTabs[previousTabs.length - 1].id, fromOverflow);\n        }\n\n        if (event.key === 'Enter' && fromOverflow) {\n            triggerTabButton(currentTabId, true);\n            setIsMenuOpened(false);\n            const contentSection = document.getElementById(`${currentTabId}-content`) as HTMLDivElement;\n            contentSection.focus();\n        }\n\n        if (!target.id.includes('-m')) {\n            setIsMenuOpened(false);\n        }\n    };\n\n    const triggerTabButton = (elementId: string, fromOverflow: boolean) => {\n        try {\n            const tabElement = document.getElementById(`${elementId}-btn`) as HTMLButtonElement;\n            const buttonElement = document.getElementById(\n                fromOverflow ? `${elementId}-btn-m` : `${elementId}-btn`,\n            ) as HTMLButtonElement;\n            if (onChange) {\n                onChange(elementId);\n            }\n            if (isOverflowing) {\n                tabElement.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'end' });\n            }\n            buttonElement.focus();\n        } catch (error) {\n            throw (error as Error).message;\n        }\n    };\n\n    const triggerOverflowMenu = (event: KeyboardEvent<HTMLButtonElement>) => {\n        checkIfOverflowing();\n        const overflownTabs = getOverflownTabs();\n\n        if (event.key === 'Enter') {\n            if (!isMenuOpened && overflownTabs.length > 0) {\n                const buttonElement = document.getElementById(`${overflownTabs[0].id}-btn-m`) as HTMLButtonElement;\n                if (buttonElement) {\n                    buttonElement.focus();\n                }\n            }\n        }\n\n        if (isMenuOpened && (event.key === 'ArrowRight' || event.key === 'ArrowDown')) {\n            triggerTabButton(overflownTabs[0].id, true);\n        }\n    };\n\n    // First render\n    useEffect(() => {\n        checkIfOverflowing();\n    }, [checkIfOverflowing]);\n\n    useEffect(() => {\n        window.addEventListener('resize', checkIfOverflowing);\n        return () => {\n            window.removeEventListener('resize', checkIfOverflowing);\n        };\n    }, [checkIfOverflowing]);\n\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    return (\n        <>\n            <div data-test-id=\"tabs\" className=\"tw-flex tw-relative tw-border-b tw-border-line\">\n                <div\n                    ref={tabNavRef}\n                    role=\"tablist\"\n                    className={merge([\n                        'tw-overflow-x-hidden tw-flex-shrink-0 tw-h-full tw-w-full tw-flex tw-justify-start',\n                        paddingMap[paddingX ?? TabsPaddingX.Small],\n                        size === TabSize.Small ? 'tw-gap-xxs' : 'tw-gap-xs ',\n                    ])}\n                >\n                    {tabs.map((tab) => {\n                        return (\n                            <button\n                                data-test-id=\"tab-item\"\n                                role=\"tab\"\n                                type=\"button\"\n                                aria-selected={tab.id === activeItemId}\n                                aria-controls={`${tab.id}-content`}\n                                aria-hidden={tab.disabled}\n                                tabIndex={tab.id === activeItemId ? 0 : -1}\n                                id={`${tab.id}-btn`}\n                                className={merge([\n                                    'tw-group tw-relative tw-mx-0 tw-py-4 tw-px-2 tw-w-max tw-cursor-pointer tw-flex tw-items-center tw-justify-center tw-whitespace-nowrap',\n                                    getTabButtonTextStyle(tab, activeItemId),\n                                ])}\n                                key={tab.id}\n                                onClick={() => {\n                                    if (!tab.disabled) {\n                                        triggerTabButton(tab.id, false);\n                                        setIsMenuOpened(false);\n                                    }\n                                }}\n                                onKeyDown={(event) => handleKeyboardTabChange(event)}\n                            >\n                                {tab.decorator && <span className=\"tw-mr-1.5\">{tab.decorator}</span>}\n\n                                <span>{tab.label}</span>\n\n                                {tab.badge && (\n                                    <span className=\"tw-ml-1.5\">\n                                        <Badge disabled={tab.disabled} style={tab.badge.style}>\n                                            {tab.badge.children}\n                                        </Badge>\n                                    </span>\n                                )}\n                                {tab.id === activeItemId && (\n                                    <motion.div\n                                        initial={false}\n                                        layoutDependency={activeItemId}\n                                        data-test-id=\"tab-active-highlight\"\n                                        layoutId={groupId}\n                                        className=\"tw-absolute tw-h-[3px] tw-bg-box-selected-strong tw-rounded-t-x-large tw-w-full tw-bottom-0\"\n                                    />\n                                )}\n                            </button>\n                        );\n                    })}\n                </div>\n                {isOverflowing && (\n                    <div\n                        data-test-id=\"tab-overflow\"\n                        className=\"tw-absolute tw-z-50 tw-right-3 tw-bottom-0 tw-top-0 tw-flex tw-justify-center tw-items-center\"\n                    >\n                        <button\n                            className={merge([\n                                'tw-w-6 tw-h-6 tw-bg-box-neutral tw-rounded tw-flex tw-justify-center tw-items-center',\n                                isFocusVisible ? FOCUS_STYLE : '',\n                            ])}\n                            type=\"button\"\n                            onClick={() => {\n                                checkIfOverflowing();\n                                setIsMenuOpened(!isMenuOpened);\n                            }}\n                            onKeyDown={(event) => triggerOverflowMenu(event)}\n                            {...focusProps}\n                        >\n                            <IconDotsHorizontal />\n                        </button>\n                        {isMenuOpened && (\n                            <div\n                                className=\"tw-absolute tw-right-0 tw-top-11 tw-px-3 tw-pt-3 tw-bg-base tw-shadow tw-w-max\"\n                                role=\"dialog\"\n                            >\n                                {getOverflownTabs().map((tab) => {\n                                    return (\n                                        <button\n                                            className={merge([\n                                                'tw-flex tw-items-center tw-w-full tw-mb-3 tw-text-left tw-text-text-weak',\n                                                tab.disabled && 'tw-text-text-disabled',\n                                            ])}\n                                            key={tab.id}\n                                            onClick={() => {\n                                                if (!tab.disabled) {\n                                                    triggerTabButton(tab.id, true);\n                                                    setIsMenuOpened(false);\n                                                }\n                                            }}\n                                            role=\"tab\"\n                                            type=\"button\"\n                                            aria-selected={tab.id === activeItemId}\n                                            aria-controls={`${tab.id}-content`}\n                                            aria-hidden={tab.disabled}\n                                            tabIndex={!tab.disabled && isMenuOpened ? 0 : -1}\n                                            id={`${tab.id}-btn-m`}\n                                            onKeyDown={(event) => handleKeyboardTabChange(event)}\n                                        >\n                                            {tab.decorator}\n                                            <span className=\"tw-mr-1 tw-ml-1.5\">{tab.label}</span>\n                                            {tab.badge && (\n                                                <Badge disabled={tab.disabled} style={tab.badge?.style}>\n                                                    {tab.badge?.children}\n                                                </Badge>\n                                            )}\n                                        </button>\n                                    );\n                                })}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n\n            <div data-test-id=\"tab-content\" className=\"tw-flex tw-flex-col tw-overflow-y-auto\">\n                <div className=\"tw-mr-0\" style={{ maxHeight, minHeight }}>\n                    {Children.map(children, (child) => {\n                        if (!isValidElement(child)) {\n                            return null;\n                        }\n\n                        return cloneElement(child, { ...child.props, active: child.props.id === activeItemId });\n                    })}\n                </div>\n            </div>\n        </>\n    );\n};\nTabs.displayName = 'FondueTabs';\n"],"names":["TabsPaddingX","TabSize","paddingMap","getTabButtonTextStyle","tab","activeItemId","Tabs","paddingX","size","children","onChange","maxHeight","minHeight","groupId","useMemoizedId","tabNavRef","useRef","isOverflowing","setIsOverflowing","useState","isMenuOpened","setIsMenuOpened","tabs","Children","child","isValidElement","overflowArray","setOverflowArray","checkIfOverflowing","useCallback","tabNav","overFlowIndex","tabItem","i","navPosition","tabPosition","overFlowIndexInAscOrder","a","b","getOverflownTabs","filterTabList","array","direction","activeItemIndex","index","handleKeyboardTabChange","event","overflownTabs","target","fromOverflow","currentTabId","currentTabsArray","nextTabs","previousTabs","triggerTabButton","elementId","tabElement","buttonElement","error","triggerOverflowMenu","useEffect","isFocusVisible","focusProps","useFocusRing","jsxs","Fragment","jsx","merge","Badge","motion","FOCUS_STYLE","IconDotsHorizontal","_a","_b","cloneElement"],"mappings":"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"}
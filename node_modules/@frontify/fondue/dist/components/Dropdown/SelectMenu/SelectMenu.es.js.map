{"version":3,"file":"SelectMenu.es.js","sources":["../../../../src/components/Dropdown/SelectMenu/SelectMenu.tsx"],"sourcesContent":["/* react-aria hook props types are inexplicitly typed */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { getKeyItemRecord, getMenuItems } from '@components/ActionMenu/Aria/helper';\nimport { MenuItemProps } from '@components/MenuItem/MenuItem';\nimport { AriaListBoxOptions, useListBox } from '@react-aria/listbox';\nimport { ListState } from '@react-stately/list';\nimport { merge } from '@utilities/merge';\nimport { ReactElement, useRef } from 'react';\nimport { SelectMenuItem } from './SelectMenuItem';\nimport { SelectMenuSection } from './SelectMenuSection';\n\nexport type MenuItemType = Omit<MenuItemProps, 'switchComponent'> & { id: string | number; link?: string };\n\nexport type MenuBlock = {\n    id: string;\n    menuItems: MenuItemType[];\n    ariaLabel?: string;\n};\n\nexport type SelectMenuProps = {\n    menuBlocks: MenuBlock[];\n    ariaProps: AriaListBoxOptions<any>;\n    state: ListState<any>;\n    ariaLabel?: string;\n    scrollable?: boolean;\n};\n\nexport const SelectMenu = ({\n    menuBlocks,\n    ariaProps,\n    state,\n    ariaLabel = 'Select Menu',\n    scrollable = false,\n}: SelectMenuProps): ReactElement<SelectMenuProps> => {\n    const items = getMenuItems(menuBlocks);\n    const keyItemRecord = getKeyItemRecord(items);\n    const listRef = useRef<HTMLUListElement | null>(null);\n    const { listBoxProps } = useListBox(\n        {\n            ...ariaProps,\n            'aria-label': ariaLabel,\n        },\n        state,\n        listRef,\n    );\n\n    return (\n        <ul\n            {...listBoxProps}\n            ref={listRef}\n            className={merge([\n                'tw-list-none tw-p-0 tw-m-0 tw-bg-base tw-z-20 focus-visible:tw-outline-none',\n                scrollable && 'tw-overflow-y-auto',\n            ])}\n        >\n            {[...state.collection].map((section) => {\n                return (\n                    <SelectMenuSection key={section.key} ariaLabel={section['aria-label']}>\n                        {[...section.childNodes].map((item) => (\n                            <SelectMenuItem\n                                key={item.key}\n                                state={state}\n                                node={item}\n                                menuItem={keyItemRecord[item.key]}\n                            />\n                        ))}\n                    </SelectMenuSection>\n                );\n            })}\n        </ul>\n    );\n};\nSelectMenu.displayName = 'FondueSelectMenu';\n"],"names":["SelectMenu","menuBlocks","ariaProps","state","ariaLabel","scrollable","items","getMenuItems","keyItemRecord","getKeyItemRecord","listRef","useRef","listBoxProps","useListBox","jsx","merge","section","SelectMenuSection","item","SelectMenuItem"],"mappings":";;;;;;;AA6BO,MAAMA,IAAa,CAAC;AAAA,EACvB,YAAAC;AAAA,EACA,WAAAC;AAAA,EACA,OAAAC;AAAA,EACA,WAAAC,IAAY;AAAA,EACZ,YAAAC,IAAa;AACjB,MAAsD;AAC5C,QAAAC,IAAQC,EAAaN,CAAU,GAC/BO,IAAgBC,EAAiBH,CAAK,GACtCI,IAAUC,EAAgC,IAAI,GAC9C,EAAE,cAAAC,MAAiBC;AAAA,IACrB;AAAA,MACI,GAAGX;AAAA,MACH,cAAcE;AAAA,IAClB;AAAA,IACAD;AAAA,IACAO;AAAA,EAAA;AAIA,SAAA,gBAAAI;AAAA,IAAC;AAAA,IAAA;AAAA,MACI,GAAGF;AAAA,MACJ,KAAKF;AAAA,MACL,WAAWK,EAAM;AAAA,QACb;AAAA,QACAV,KAAc;AAAA,MAAA,CACjB;AAAA,MAEA,WAAC,GAAGF,EAAM,UAAU,EAAE,IAAI,CAACa,MAEnB,gBAAAF,EAAAG,GAAA,EAAoC,WAAWD,EAAQ,YAAY,GAC/D,UAAC,CAAA,GAAGA,EAAQ,UAAU,EAAE,IAAI,CAACE,MAC1B,gBAAAJ;AAAA,QAACK;AAAA,QAAA;AAAA,UAEG,OAAAhB;AAAA,UACA,MAAMe;AAAA,UACN,UAAUV,EAAcU,EAAK,GAAG;AAAA,QAAA;AAAA,QAH3BA,EAAK;AAAA,MAAA,CAKjB,EARmB,GAAAF,EAAQ,GAShC,CAEP;AAAA,IAAA;AAAA,EAAA;AAGb;AACAhB,EAAW,cAAc;"}
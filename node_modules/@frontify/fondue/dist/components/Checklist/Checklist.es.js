import { jsx as m } from "react/jsx-runtime";
import { CheckboxState as d, Checkbox as C } from "../Checkbox/Checkbox.es.js";
import { useCheckboxGroup as k, useCheckboxGroupItem as w } from "@react-aria/checkbox";
import { useCheckboxGroupState as S } from "@react-stately/checkbox";
import { merge as b } from "../../utilities/merge.es.js";
import { useRef as h, useState as x, useEffect as v } from "react";
var I = /* @__PURE__ */ ((t) => (t.Horizontal = "Horizontal", t.Vertical = "Vertical", t))(I || {});
const z = {
  1: "tw-grid-cols-1",
  2: "tw-grid-cols-2",
  3: "tw-grid-cols-3",
  4: "tw-grid-cols-4"
}, H = ({ checkbox: t, state: e }) => {
  const o = h(null), { value: r, disabled: n, label: p, "aria-label": i, state: a } = t, [l, c] = x(a), s = e.isSelected(r), { inputProps: u } = w(
    { value: r, isDisabled: n, "aria-label": i || p },
    e,
    o
  );
  return v(() => {
    l === d.Mixed && !s ? c(d.Mixed) : c(s ? d.Checked : d.Unchecked);
  }, [l, s]), /* @__PURE__ */ m(C, { ...t, state: l, groupInputProps: u, ref: o });
}, y = (t, e) => {
  if (!e || e <= 1)
    return "";
  const o = "auto / span", r = t.length % e;
  return r === 0 ? "" : `${o} ${e - r + 1}`;
}, G = ({
  checkboxes: t,
  setActiveValues: e,
  ariaLabel: o = "Checklist",
  activeValues: r = [],
  direction: n = "Horizontal",
  "data-test-id": p = "checklist",
  ...i
}) => {
  const a = h(null), l = S({
    value: r,
    onChange: e
  }), { groupProps: c } = k(
    {
      "aria-label": o
    },
    l
  ), s = "columns" in i && i.columns || 1;
  return /* @__PURE__ */ m(
    "ul",
    {
      ...c,
      "data-test-id": p,
      className: b([
        n === "Horizontal" ? "tw-flex tw-flex-row tw-gap-12" : `tw-grid tw-gap-4 ${z[s]}`
      ]),
      ref: a,
      children: t.map((u, f) => {
        var g;
        return /* @__PURE__ */ m(
          "li",
          {
            style: {
              maxWidth: (g = a == null ? void 0 : a.current) == null ? void 0 : g.getBoundingClientRect().width,
              gridColumn: f === t.length - 1 && n === "Vertical" ? y(t, s) : void 0
            },
            children: /* @__PURE__ */ m(H, { checkbox: u, state: l })
          },
          u.value
        );
      })
    }
  );
};
G.displayName = "FondueChecklist";
export {
  G as Checklist,
  I as ChecklistDirection
};
//# sourceMappingURL=Checklist.es.js.map

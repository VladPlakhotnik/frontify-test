{"version":3,"file":"Text.es.js","sources":["../../../src/typography/Text/Text.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { merge } from '@utilities/merge';\nimport { AriaAttributes, ReactElement, ReactNode } from 'react';\nimport { decorationMap, displayMap, overflowMap, whitespaceMap, wordBreakMap } from '../shared/records';\nimport { SharedTypographyProps } from '../shared/types';\n\ntype TextWeight = 'default' | 'strong' | 'x-strong';\ntype TextSize = 'x-small' | 'small' | 'medium' | 'large';\ntype TextColor = 'default' | 'weak' | 'x-weak' | 'disabled' | 'negative' | 'positive' | 'warning' | 'interactive';\ntype BoxColor = 'neutral' | 'selected' | 'disabled' | 'positive' | 'negative' | 'warning';\n\nexport type TextProps = SharedTypographyProps &\n    AriaAttributes & {\n        size?: TextSize;\n        weight?: TextWeight;\n        as?: 'a' | 'abbr' | 'address' | 'em' | 'label' | 'li' | 'span' | 'strong' | 'time' | 'p';\n        color?: TextColor;\n        /** @description optional color prop that uses the inverse box color when accessibility contrast is needed */\n        boxColor?: BoxColor;\n        children?: ReactNode;\n    };\n\nconst weightMap: Record<TextWeight, string> = {\n    default: 'tw-font-regular',\n    strong: 'tw-font-medium',\n    'x-strong': 'tw-font-bold',\n};\n\nconst sizeMap: Record<TextSize, string> = {\n    'x-small': 'tw-text-body-x-small',\n    small: 'tw-text-body-small',\n    medium: 'tw-text-body-medium',\n    large: 'tw-text-body-large',\n};\n\nconst colorMap: Record<TextColor, string> = {\n    default: 'tw-text-text',\n    weak: 'tw-text-text-weak',\n    'x-weak': 'tw-text-text-x-weak',\n    disabled: 'tw-text-text-disabled',\n    negative: 'tw-text-text-negative',\n    positive: 'tw-text-text-positive',\n    warning: 'tw-text-text-warning',\n    interactive: 'tw-text-text-interactive',\n};\n\nconst boxColorMap: Record<BoxColor, string> = {\n    neutral: 'tw-text-box-neutral-inverse',\n    selected: 'tw-text-box-selected-inverse',\n    disabled: 'tw-text-box-disabled-inverse',\n    positive: 'tw-text-box-positive-inverse',\n    negative: 'tw-text-box-negative-inverse',\n    warning: 'tw-text-box-warning-inverse',\n};\n\nexport const Text = ({\n    children,\n    as: Tag = 'span',\n    weight = 'default',\n    size = 'medium',\n    color = 'default',\n    decoration = 'none',\n    wordBreak = 'normal',\n    whitespace = 'normal',\n    overflow = 'visible',\n    boxColor,\n    display,\n    ...props\n}: TextProps): ReactElement => (\n    <Tag\n        data-test-id=\"text\"\n        className={merge([\n            'tw-font-body tw-max-w-full',\n            weightMap[weight],\n            sizeMap[size],\n            decorationMap[decoration],\n            boxColor ? boxColorMap[boxColor] : colorMap[color],\n            wordBreakMap[wordBreak],\n            overflow !== 'truncate' && whitespaceMap[whitespace],\n            overflowMap[overflow],\n            display && displayMap[display],\n        ])}\n        {...props}\n    >\n        {children}\n    </Tag>\n);\nText.displayName = 'FondueText';\n"],"names":["weightMap","sizeMap","colorMap","boxColorMap","Text","children","Tag","weight","size","color","decoration","wordBreak","whitespace","overflow","boxColor","display","props","jsx","merge","decorationMap","wordBreakMap","whitespaceMap","overflowMap","displayMap"],"mappings":";;;AAuBA,MAAMA,IAAwC;AAAA,EAC1C,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,YAAY;AAChB,GAEMC,IAAoC;AAAA,EACtC,WAAW;AAAA,EACX,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AACX,GAEMC,IAAsC;AAAA,EACxC,SAAS;AAAA,EACT,MAAM;AAAA,EACN,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AACjB,GAEMC,IAAwC;AAAA,EAC1C,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AACb,GAEaC,IAAO,CAAC;AAAA,EACjB,UAAAC;AAAA,EACA,IAAIC,IAAM;AAAA,EACV,QAAAC,IAAS;AAAA,EACT,MAAAC,IAAO;AAAA,EACP,OAAAC,IAAQ;AAAA,EACR,YAAAC,IAAa;AAAA,EACb,WAAAC,IAAY;AAAA,EACZ,YAAAC,IAAa;AAAA,EACb,UAAAC,IAAW;AAAA,EACX,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,GAAGC;AACP,MACI,gBAAAC;AAAA,EAACX;AAAA,EAAA;AAAA,IACG,gBAAa;AAAA,IACb,WAAWY,EAAM;AAAA,MACb;AAAA,MACAlB,EAAUO,CAAM;AAAA,MAChBN,EAAQO,CAAI;AAAA,MACZW,EAAcT,CAAU;AAAA,MACxBI,IAAWX,EAAYW,CAAQ,IAAIZ,EAASO,CAAK;AAAA,MACjDW,EAAaT,CAAS;AAAA,MACtBE,MAAa,cAAcQ,EAAcT,CAAU;AAAA,MACnDU,EAAYT,CAAQ;AAAA,MACpBE,KAAWQ,EAAWR,CAAO;AAAA,IAAA,CAChC;AAAA,IACA,GAAGC;AAAA,IAEH,UAAAX;AAAA,EAAA;AACL;AAEJD,EAAK,cAAc;"}
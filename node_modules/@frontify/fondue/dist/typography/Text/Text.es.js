import { jsx as m } from "react/jsx-runtime";
import { merge as p } from "../../utilities/merge.es.js";
import { decorationMap as b, wordBreakMap as v, whitespaceMap as g, overflowMap as c, displayMap as u } from "../shared/records.es.js";
const f = {
  default: "tw-font-regular",
  strong: "tw-font-medium",
  "x-strong": "tw-font-bold"
}, M = {
  "x-small": "tw-text-body-x-small",
  small: "tw-text-body-small",
  medium: "tw-text-body-medium",
  large: "tw-text-body-large"
}, y = {
  default: "tw-text-text",
  weak: "tw-text-text-weak",
  "x-weak": "tw-text-text-x-weak",
  disabled: "tw-text-text-disabled",
  negative: "tw-text-text-negative",
  positive: "tw-text-text-positive",
  warning: "tw-text-text-warning",
  interactive: "tw-text-text-interactive"
}, k = {
  neutral: "tw-text-box-neutral-inverse",
  selected: "tw-text-box-selected-inverse",
  disabled: "tw-text-box-disabled-inverse",
  positive: "tw-text-box-positive-inverse",
  negative: "tw-text-box-negative-inverse",
  warning: "tw-text-box-warning-inverse"
}, h = ({
  children: i,
  as: o = "span",
  weight: x = "default",
  size: n = "medium",
  color: s = "default",
  decoration: r = "none",
  wordBreak: w = "normal",
  whitespace: l = "normal",
  overflow: t = "visible",
  boxColor: e,
  display: a,
  ...d
}) => /* @__PURE__ */ m(
  o,
  {
    "data-test-id": "text",
    className: p([
      "tw-font-body tw-max-w-full",
      f[x],
      M[n],
      b[r],
      e ? k[e] : y[s],
      v[w],
      t !== "truncate" && g[l],
      c[t],
      a && u[a]
    ]),
    ...d,
    children: i
  }
);
h.displayName = "FondueText";
export {
  h as Text
};
//# sourceMappingURL=Text.es.js.map

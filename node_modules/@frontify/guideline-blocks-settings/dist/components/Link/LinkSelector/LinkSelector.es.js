import { jsxs as p, jsx as t } from "react/jsx-runtime";
import { Button as S, IconLink as h, ButtonType as B, ButtonStyle as r, ButtonEmphasis as c, Modal as o, ButtonSize as L } from "@frontify/fondue";
import { useOverlayTriggerState as T } from "@react-stately/overlays";
import { useState as x, useEffect as E } from "react";
import { DocumentLinks as O } from "./DocumentLinks.es.js";
const M = ({
  appBridge: m,
  url: n,
  onUrlChange: s,
  buttonSize: u = L.Medium
}) => {
  const { open: f, isOpen: k, close: l } = T({}), [i, a] = x(n), y = (e) => {
    a(e);
  }, D = (e) => {
    e.key === "Enter" && d();
  };
  E(() => {
    n && !i && a(n);
  }, [n, i]);
  const d = () => {
    s == null || s(i), l();
  };
  return /* @__PURE__ */ p("div", { "data-test-id": "internal-link-selector", onKeyDown: D, children: [
    /* @__PURE__ */ t(
      S,
      {
        icon: /* @__PURE__ */ t(h, {}),
        size: u,
        type: B.Button,
        style: r.Default,
        emphasis: c.Default,
        onClick: () => f(),
        children: "Internal link"
      }
    ),
    /* @__PURE__ */ p(o, { zIndex: 1001, onClose: () => l(), isOpen: k, isDismissable: !0, children: [
      /* @__PURE__ */ t(o.Header, { title: "Select internal link" }),
      /* @__PURE__ */ t(o.Body, { children: /* @__PURE__ */ t(O, { appBridge: m, selectedUrl: i, onSelectUrl: y }) }),
      /* @__PURE__ */ t(
        o.Footer,
        {
          buttons: [
            {
              children: "Cancel",
              onClick: () => l(),
              style: r.Default,
              emphasis: c.Default
            },
            {
              children: "Choose",
              onClick: (e) => {
                e == null || e.preventDefault(), d();
              },
              style: r.Default,
              emphasis: c.Strong,
              disabled: !i
            }
          ]
        }
      )
    ] })
  ] });
};
export {
  M as LinkSelector
};
//# sourceMappingURL=LinkSelector.es.js.map

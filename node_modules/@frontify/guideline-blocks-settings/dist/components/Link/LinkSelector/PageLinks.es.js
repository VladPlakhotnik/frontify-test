import { jsx as r, Fragment as w } from "react/jsx-runtime";
import { useState as i, useEffect as x } from "react";
import { PageLink as L } from "./PageLink.es.js";
import { LoadingIndicator as P } from "./LoadingIndicator.es.js";
const D = ({
  appBridge: s,
  documentId: c,
  selectedUrl: g,
  onSelectUrl: m,
  itemsToExpandInitially: l
}) => {
  const [f, d] = i([]), [a, u] = i(!0), n = [...f.values()], y = !a && n.length > 0;
  return x(() => {
    s.getDocumentPagesByDocumentId(c).then((e) => {
      const h = e.filter((t) => !!t.category).sort(
        (t, o) => t.category.sort === o.category.sort ? t.sort - o.sort : t.category.sort - o.category.sort
      ), p = e.filter((t) => !t.category).sort((t, o) => t.sort - o.sort);
      d([...h, ...p]);
    }).finally(() => {
      u(!1);
    });
  }, []), a ? /* @__PURE__ */ r(P, {}) : y ? /* @__PURE__ */ r(w, { children: n.map((e) => /* @__PURE__ */ r(
    L,
    {
      page: e,
      appBridge: s,
      selectedUrl: g,
      onSelectUrl: m,
      itemsToExpandInitially: l
    },
    e.id
  )) }) : /* @__PURE__ */ r("div", { className: "tw-h-10 tw-flex tw-items-center tw-pr-2.5 tw-pl-7 tw-leading-5 tw-text-s tw-text-text-weak", children: "This document does not contain any pages." });
};
export {
  D as PageLinks
};
//# sourceMappingURL=PageLinks.es.js.map

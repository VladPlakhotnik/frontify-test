import { jsx as a } from "react/jsx-runtime";
import { createPluginFactory as o } from "@udecode/plate";
import { Plugin as m, MarkupElement as g, merge as u, alignmentClassnames as c, getColumnBreakClasses as d } from "@frontify/fondue";
import { TextStyles as r, BlockStyles as p } from "../styles.es.js";
const h = "textstyle-heading2-plugin";
class N extends m {
  constructor({ styles: e = p.heading2, ...n } = {}) {
    super(r.heading2, {
      label: "Heading 2",
      markupElement: new y(),
      ...n
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [k(this.styles)];
  }
}
class y extends g {
  constructor(e = h, n = s) {
    super(e, n);
  }
}
const s = ({ element: t, attributes: e, children: n, styles: i }) => {
  const l = t.align;
  return /* @__PURE__ */ a(
    "h2",
    {
      ...e,
      className: u([l && c[l], d(t)]),
      style: i,
      children: n
    }
  );
}, k = (t) => o({
  key: r.heading2,
  isElement: !0,
  component: s,
  deserializeHtml: {
    rules: [{ validNodeName: ["h2", "H2"] }]
  }
})({
  component: (e) => /* @__PURE__ */ a(s, { ...e, styles: t })
});
export {
  N as Heading2Plugin
};
//# sourceMappingURL=heading2Plugin.es.js.map

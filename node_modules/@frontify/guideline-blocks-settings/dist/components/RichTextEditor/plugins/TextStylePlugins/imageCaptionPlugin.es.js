import { jsx as o } from "react/jsx-runtime";
import { createPluginFactory as m } from "@udecode/plate";
import { Plugin as r, MarkupElement as p, merge as g, alignmentClassnames as u, getColumnBreakClasses as c } from "@frontify/fondue";
import { TextStyles as s, BlockStyles as C } from "../styles.es.js";
const y = "textstyle-imageCaption-plugin";
class P extends r {
  constructor({ styles: e = C.imageCaption, ...a } = {}) {
    super(s.imageCaption, {
      label: "Image Caption",
      markupElement: new k(),
      ...a
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [x(this.styles)];
  }
}
class k extends p {
  constructor(e = y, a = n) {
    super(e, a);
  }
}
const n = ({ element: t, attributes: e, children: a, styles: l }) => {
  const i = t.align;
  return /* @__PURE__ */ o(
    "p",
    {
      ...e,
      className: g([i && u[i], c(t)]),
      style: l,
      children: a
    }
  );
}, x = (t) => m({
  key: s.imageCaption,
  isElement: !0,
  component: n,
  deserializeHtml: {
    rules: [{ validClassName: s.imageCaption }]
  }
})({
  component: (e) => /* @__PURE__ */ o(n, { ...e, styles: t })
});
export {
  P as ImageCaptionPlugin
};
//# sourceMappingURL=imageCaptionPlugin.es.js.map

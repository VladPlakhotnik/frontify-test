import { jsx as n } from "react/jsx-runtime";
import { createPluginFactory as a } from "@udecode/plate";
import { Plugin as m, MarkupElement as i, merge as c, alignmentClassnames as p, getColumnBreakClasses as g } from "@frontify/fondue";
import { TextStyles as r, BlockStyles as k } from "../styles.es.js";
const y = "textstyle-quote-plugin";
class C extends m {
  constructor({ styles: e = k.quote, ...s } = {}) {
    super(r.quote, {
      label: "Quote",
      markupElement: new d(),
      ...s
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [q(this.styles)];
  }
}
class d extends i {
  constructor(e = y, s = o) {
    super(e, s);
  }
}
const o = ({ element: t, attributes: e, children: s, styles: u }) => {
  const l = t.align;
  return /* @__PURE__ */ n(
    "blockquote",
    {
      ...e,
      className: c([l && p[l], g(t)]),
      style: u,
      children: s
    }
  );
}, q = (t) => a({
  key: r.quote,
  isElement: !0,
  component: o,
  deserializeHtml: {
    rules: [{ validNodeName: ["blockquote", "BLOCKQUOTE"] }]
  }
})({
  component: (e) => /* @__PURE__ */ n(o, { ...e, styles: t })
});
export {
  o as QuoteMarkupElementNode,
  C as QuotePlugin,
  q as createQuotePlugin
};
//# sourceMappingURL=quotePlugin.es.js.map

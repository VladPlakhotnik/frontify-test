import { jsx as m } from "react/jsx-runtime";
import { createPluginFactory as u } from "@udecode/plate";
import { Plugin as a, MarkupElement as c, merge as i, alignmentClassnames as p, getColumnBreakClasses as g } from "@frontify/fondue";
import { TextStyles as l, BlockStyles as y } from "../styles.es.js";
const C = "textstyle-custom2-plugin";
class h extends a {
  constructor({ styles: s = y.custom2, ...e } = {}) {
    super(l.custom2, {
      label: "Custom 2",
      markupElement: new k(),
      ...e
    }), this.styles = {}, this.styles = s;
  }
  plugins() {
    return [x(this.styles)];
  }
}
class k extends c {
  constructor(s = C, e = r) {
    super(s, e);
  }
}
const r = ({ element: t, attributes: s, children: e, styles: n }) => {
  const o = t.align;
  return /* @__PURE__ */ m(
    "p",
    {
      ...s,
      className: i([o && p[o], g(t)]),
      style: n,
      children: e
    }
  );
}, x = (t) => u({
  key: l.custom2,
  isElement: !0,
  deserializeHtml: {
    rules: [{ validClassName: l.custom2 }]
  }
})({
  component: (s) => /* @__PURE__ */ m(r, { ...s, styles: t })
});
export {
  h as Custom2Plugin
};
//# sourceMappingURL=custom2Plugin.es.js.map

import { jsx as m } from "react/jsx-runtime";
import { createPluginFactory as r } from "@udecode/plate";
import { Plugin as o, MarkupElement as g, merge as u, alignmentClassnames as c, getColumnBreakClasses as p } from "@frontify/fondue";
import { TextStyles as s, BlockStyles as T } from "../styles.es.js";
const y = "textstyle-imageTitle-plugin";
class C extends o {
  constructor({ styles: e = T.imageTitle, ...l } = {}) {
    super(s.imageTitle, {
      label: "Image Title",
      markupElement: new k(),
      ...l
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [x(this.styles)];
  }
}
class k extends g {
  constructor(e = y, l = i) {
    super(e, l);
  }
}
const i = ({ element: t, attributes: e, children: l, styles: n }) => {
  const a = t.align;
  return /* @__PURE__ */ m(
    "p",
    {
      ...e,
      className: u([a && c[a], p(t)]),
      style: n,
      children: l
    }
  );
}, x = (t) => r({
  key: s.imageTitle,
  isElement: !0,
  component: i,
  deserializeHtml: {
    rules: [{ validClassName: s.imageTitle }]
  }
})({
  component: (e) => /* @__PURE__ */ m(i, { ...e, styles: t })
});
export {
  C as ImageTitlePlugin
};
//# sourceMappingURL=imageTitlePlugin.es.js.map

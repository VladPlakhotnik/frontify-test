{"version":3,"file":"AppBridgeThemeStub.es.js","sources":["../../src/tests/AppBridgeThemeStub.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport mitt, { Emitter } from 'mitt';\nimport { SinonStubbedInstance, spy, stub } from 'sinon';\n\nimport { EmitterEvents } from '../types/Emitter';\nimport { AppBridgeTheme } from '../AppBridgeTheme';\nimport { mergeDeep } from '../utilities';\n\nimport {\n    AssetDummy,\n    BrandportalLinkDummy,\n    ColorDummy,\n    ColorPaletteDummy,\n    CoverPageDummy,\n    DocumentCategoryDummy,\n    DocumentDummy,\n    DocumentGroupDummy,\n    DocumentPageDummy,\n    DocumentPageDuplicateDummy,\n    DocumentPageTargetsDummy,\n    DocumentSectionDummy,\n    DocumentTargetsDummy,\n    UpdateTargetsDummy,\n} from '.';\nimport { GuidelineSearchResultDummy } from './GuidelineSearchResultDummy';\nimport { Asset } from '../types';\n\nconst BRAND_ID = 234551;\nconst PROJECT_ID = 3452;\nconst PORTAL_ID = 7777;\nconst DOCUMENT_GROUP_ID_1 = 5332;\nconst DOCUMENT_GROUP_ID_2 = 95694;\nconst DOCUMENT_GROUP_ID_3 = 345882;\nconst DOCUMENT_ID_1 = 6456;\nconst DOCUMENT_ID_2 = 34532;\nconst DOCUMENT_ID_3 = 3455345;\nconst DOCUMENT_ID_4 = 2342;\nconst DOCUMENT_ID_5 = 2343445;\nconst GROUPED_DOCUMENT_ID_1 = 2434;\nconst GROUPED_DOCUMENT_ID_2 = 552;\nconst GROUPED_DOCUMENT_ID_3 = 1145;\nconst GROUPED_DOCUMENT_ID_4 = 32345;\nconst DOCUMENT_CATEGORY_ID_1 = 147;\nconst DOCUMENT_CATEGORY_ID_2 = 258;\nconst DOCUMENT_CATEGORY_ID_3 = 369;\nconst DOCUMENT_PAGE_ID_1 = 23442;\nconst DOCUMENT_PAGE_ID_2 = 235345;\nconst DOCUMENT_PAGE_ID_3 = 12352;\nconst DOCUMENT_PAGE_ID_4 = 55221;\nconst UNCATEGORIZED_DOCUMENT_PAGE_ID_1 = 24324;\nconst UNCATEGORIZED_DOCUMENT_PAGE_ID_2 = 3532;\nconst UNCATEGORIZED_DOCUMENT_PAGE_ID_3 = 98954;\nconst DOCUMENT_SECTION_ID_1 = 3421;\nconst DOCUMENT_SECTION_ID_2 = 65725;\nconst DOCUMENT_SECTION_ID_3 = 95934;\nconst DOCUMENT_PAGE_DUPLICATE_ID_1 = 2341;\nconst TARGET_ID_1 = 653543;\nconst TARGET_ID_2 = 23411;\nconst TARGET_ID_3 = 56657;\n\nexport type getAppBridgeThemeStubProps = {\n    editorState?: boolean;\n    brandId?: number;\n    portalId?: number;\n    projectId?: number;\n    pageTemplateSettings?: Record<string, unknown>;\n    pageTemplateAssets?: Record<string, Asset[]>;\n    themeSettings?: Record<string, unknown>;\n    themeAssets?: Record<string, Asset[]>;\n    language?: string;\n    openAssetChooser?: (callback: Parameters<AppBridgeTheme['openAssetChooser']>[0]) => void;\n    closeAssetChooser?: () => void;\n};\n\nexport const getAppBridgeThemeStub = ({\n    editorState = false,\n    brandId = BRAND_ID,\n    portalId = PORTAL_ID,\n    projectId = PROJECT_ID,\n    pageTemplateSettings = {},\n    pageTemplateAssets = {},\n    themeSettings = {},\n    themeAssets = {},\n    language = 'en',\n    openAssetChooser = () => null,\n    closeAssetChooser = () => null,\n}: getAppBridgeThemeStubProps = {}): SinonStubbedInstance<AppBridgeTheme> => {\n    window.emitter = spy(mitt()) as unknown as Emitter<EmitterEvents>;\n\n    let localPageTemplateSettings = pageTemplateSettings;\n    let localThemeSettings = themeSettings;\n\n    const deletedAssetIds: Record<string, number[]> = {};\n    const addedAssetIds: Record<string, number[]> = {};\n\n    const getAssets = async (themeOrTemplateAssets: Record<string, Asset[]>) => {\n        return Object.entries(themeOrTemplateAssets).reduce<Record<string, Asset[]>>((assetsDiff, [key, assets]) => {\n            const addedAssetIdsList = addedAssetIds[key] ?? [];\n            const deletedAssetIdsList = deletedAssetIds[key] ?? [];\n            assetsDiff[key] = [\n                ...assets.filter((asset) => !deletedAssetIdsList.includes(asset.id)),\n                ...addedAssetIdsList.map((id) => AssetDummy.with(id)),\n            ];\n            return assetsDiff;\n        }, {});\n    };\n\n    const getTemplateAssets = async () => getAssets(pageTemplateAssets);\n\n    const getThemeAssets = async () => getAssets(themeAssets);\n\n    return {\n        getPortalId: stub<Parameters<AppBridgeTheme['getPortalId']>>().returns(portalId),\n        getProjectId: stub<Parameters<AppBridgeTheme['getProjectId']>>().returns(projectId),\n        getEditorState: stub<Parameters<AppBridgeTheme['getEditorState']>>().returns(editorState),\n        getCoverPage: stub<Parameters<AppBridgeTheme['getCoverPage']>>().resolves(CoverPageDummy.with(PORTAL_ID)),\n        getAllDocuments: stub<Parameters<AppBridgeTheme['getAllDocuments']>>().resolves([\n            DocumentDummy.with(DOCUMENT_ID_1),\n            DocumentDummy.with(DOCUMENT_ID_2),\n            DocumentDummy.with(DOCUMENT_ID_3),\n            DocumentDummy.with(DOCUMENT_ID_4),\n            DocumentDummy.with(DOCUMENT_ID_5),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_1, DOCUMENT_GROUP_ID_1),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_2, DOCUMENT_GROUP_ID_1),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_3, DOCUMENT_GROUP_ID_1),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_4, DOCUMENT_GROUP_ID_1),\n        ]),\n        getUngroupedDocuments: stub<Parameters<AppBridgeTheme['getUngroupedDocuments']>>().resolves([\n            DocumentDummy.with(DOCUMENT_ID_1),\n            DocumentDummy.with(DOCUMENT_ID_2),\n            DocumentDummy.with(DOCUMENT_ID_3),\n            DocumentDummy.with(DOCUMENT_ID_4),\n            DocumentDummy.with(DOCUMENT_ID_5),\n        ]),\n        getDocumentsByDocumentGroupId: stub<Parameters<AppBridgeTheme['getDocumentsByDocumentGroupId']>>().resolves([\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_1, DOCUMENT_GROUP_ID_1),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_2, DOCUMENT_GROUP_ID_1),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_3, DOCUMENT_GROUP_ID_1),\n            DocumentDummy.withDocumentGroupId(GROUPED_DOCUMENT_ID_4, DOCUMENT_GROUP_ID_1),\n        ]),\n        getDocumentGroups: stub<Parameters<AppBridgeTheme['getDocumentGroups']>>().resolves([\n            DocumentGroupDummy.with(DOCUMENT_GROUP_ID_1, 3),\n            DocumentGroupDummy.with(DOCUMENT_GROUP_ID_2, 0),\n            DocumentGroupDummy.with(DOCUMENT_GROUP_ID_3, 2),\n        ]),\n        getDocumentPagesByDocumentId: stub<Parameters<AppBridgeTheme['getDocumentPagesByDocumentId']>>().resolves([\n            DocumentPageDummy.with(DOCUMENT_PAGE_ID_1),\n            DocumentPageDummy.with(DOCUMENT_PAGE_ID_2),\n            DocumentPageDummy.with(UNCATEGORIZED_DOCUMENT_PAGE_ID_1),\n            DocumentPageDummy.with(DOCUMENT_PAGE_ID_3),\n            DocumentPageDummy.with(UNCATEGORIZED_DOCUMENT_PAGE_ID_2),\n            DocumentPageDummy.with(DOCUMENT_PAGE_ID_4),\n            DocumentPageDummy.with(UNCATEGORIZED_DOCUMENT_PAGE_ID_3),\n        ]),\n        getDocumentPagesByDocumentCategoryId: stub<\n            Parameters<AppBridgeTheme['getDocumentPagesByDocumentCategoryId']>\n        >().callsFake((documentCategoryId) =>\n            Promise.resolve([\n                DocumentPageDummy.withFields({ id: DOCUMENT_PAGE_ID_1, categoryId: documentCategoryId, sort: 1 }),\n                DocumentPageDummy.withFields({ id: DOCUMENT_PAGE_ID_2, categoryId: documentCategoryId, sort: 2 }),\n                DocumentPageDummy.withFields({ id: DOCUMENT_PAGE_ID_3, categoryId: documentCategoryId, sort: 3 }),\n                DocumentPageDummy.withFields({ id: DOCUMENT_PAGE_ID_4, categoryId: documentCategoryId, sort: 4 }),\n            ]),\n        ),\n        getDocumentCategoriesByDocumentId: stub<\n            Parameters<AppBridgeTheme['getDocumentCategoriesByDocumentId']>\n        >().callsFake((documentId) =>\n            Promise.resolve([\n                DocumentCategoryDummy.withDocumentIdAndNumberOfDocumentPages(DOCUMENT_CATEGORY_ID_1, documentId, 2),\n                DocumentCategoryDummy.withDocumentIdAndNumberOfDocumentPages(DOCUMENT_CATEGORY_ID_2, documentId, 0),\n                DocumentCategoryDummy.withDocumentIdAndNumberOfDocumentPages(DOCUMENT_CATEGORY_ID_3, documentId, 2),\n            ]),\n        ),\n        getUncategorizedDocumentPagesByDocumentId: stub<\n            Parameters<AppBridgeTheme['getUncategorizedDocumentPagesByDocumentId']>\n        >().callsFake((documentId) =>\n            Promise.resolve([\n                DocumentPageDummy.withFields({\n                    id: UNCATEGORIZED_DOCUMENT_PAGE_ID_1,\n                    documentId,\n                    categoryId: null,\n                    sort: 1,\n                }),\n                DocumentPageDummy.withFields({\n                    id: UNCATEGORIZED_DOCUMENT_PAGE_ID_2,\n                    documentId,\n                    categoryId: null,\n                    sort: 2,\n                }),\n                DocumentPageDummy.withFields({\n                    id: UNCATEGORIZED_DOCUMENT_PAGE_ID_3,\n                    documentId,\n                    categoryId: null,\n                    sort: 3,\n                }),\n            ]),\n        ),\n        getDocumentSectionsByDocumentPageId: stub<\n            Parameters<AppBridgeTheme['getDocumentSectionsByDocumentPageId']>\n        >().resolves([\n            DocumentSectionDummy.with(DOCUMENT_SECTION_ID_1),\n            DocumentSectionDummy.with(DOCUMENT_SECTION_ID_2),\n            DocumentSectionDummy.with(DOCUMENT_SECTION_ID_3),\n        ]),\n        getColorPalettes: stub<Parameters<AppBridgeTheme['getColorPalettes']>>().resolves([\n            ColorPaletteDummy.with(678, 'Palette 1'),\n            ColorPaletteDummy.with(427, 'Palette 2'),\n            ColorPaletteDummy.with(679, 'Palette 3'),\n        ]),\n        getColorsByColorPaletteId: stub<Parameters<AppBridgeTheme['getColorsByColorPaletteId']>>().resolves([\n            ColorDummy.red(9834),\n            ColorDummy.green(342),\n            ColorDummy.yellow(9314),\n        ]),\n        duplicateDocumentPage: stub<Parameters<AppBridgeTheme['duplicateDocumentPage']>>().resolves(\n            DocumentPageDuplicateDummy.with(DOCUMENT_PAGE_DUPLICATE_ID_1),\n        ),\n        getDocumentTargets: stub<Parameters<AppBridgeTheme['getDocumentTargets']>>().resolves(\n            DocumentTargetsDummy.with(DOCUMENT_ID_1),\n        ),\n        getDocumentPageTargets: stub<Parameters<AppBridgeTheme['getDocumentPageTargets']>>().resolves(\n            DocumentPageTargetsDummy.with(DOCUMENT_PAGE_ID_1),\n        ),\n        addAssetIdsToCoverPageTemplateAssetKey: stub<\n            Parameters<AppBridgeTheme['addAssetIdsToCoverPageTemplateAssetKey']>\n        >().callsFake(async (key: string, assetsIds: number[]) => {\n            addedAssetIds[key] = [...(addedAssetIds[key] ?? []), ...assetsIds];\n            return pageTemplateAssets;\n        }),\n        addAssetIdsToThemeAssetKey: stub<Parameters<AppBridgeTheme['addAssetIdsToThemeAssetKey']>>().callsFake(\n            async (key: string, assetsIds: number[]) => {\n                addedAssetIds[key] = [...(addedAssetIds[key] ?? []), ...assetsIds];\n                return pageTemplateAssets;\n            },\n        ),\n        addAssetIdsToLibraryPageTemplateAssetKey: stub<\n            Parameters<AppBridgeTheme['addAssetIdsToLibraryPageTemplateAssetKey']>\n        >().callsFake(async (documentId: number, key: string, assetsIds: number[]) => {\n            addedAssetIds[key] = [...(addedAssetIds[key] ?? []), ...assetsIds];\n            return pageTemplateAssets;\n        }),\n        addAssetIdsToDocumentPageTemplateAssetKey: stub<\n            Parameters<AppBridgeTheme['addAssetIdsToDocumentPageTemplateAssetKey']>\n        >().callsFake(async (documentPageId: number, key: string, assetsIds: number[]) => {\n            addedAssetIds[key] = [...(addedAssetIds[key] ?? []), ...assetsIds];\n            return pageTemplateAssets;\n        }),\n        getCoverPageTemplateAssets:\n            stub<Parameters<AppBridgeTheme['getCoverPageTemplateAssets']>>().callsFake(getTemplateAssets),\n        getThemeAssets: stub<Parameters<AppBridgeTheme['getThemeAssets']>>().callsFake(getThemeAssets),\n        getLibraryPageTemplateAssets:\n            stub<Parameters<AppBridgeTheme['getLibraryPageTemplateAssets']>>().callsFake(getTemplateAssets),\n        getDocumentPageTemplateAssets:\n            stub<Parameters<AppBridgeTheme['getDocumentPageTemplateAssets']>>().callsFake(getTemplateAssets),\n        deleteAssetIdsFromCoverPageTemplateAssetKey: stub<\n            Parameters<AppBridgeTheme['deleteAssetIdsFromCoverPageTemplateAssetKey']>\n        >().callsFake(async (key, assetIds) => {\n            deletedAssetIds[key] = [...(deletedAssetIds[key] ?? []), ...assetIds];\n        }),\n        deleteAssetIdsFromThemeAssetKey: stub<\n            Parameters<AppBridgeTheme['deleteAssetIdsFromThemeAssetKey']>\n        >().callsFake(async (key, assetIds) => {\n            deletedAssetIds[key] = [...(deletedAssetIds[key] ?? []), ...assetIds];\n        }),\n        deleteAssetIdsFromLibraryPageTemplateAssetKey: stub<\n            Parameters<AppBridgeTheme['deleteAssetIdsFromLibraryPageTemplateAssetKey']>\n        >().callsFake(async (documentId: number, key, assetIds) => {\n            deletedAssetIds[key] = [...(deletedAssetIds[key] ?? []), ...assetIds];\n        }),\n        deleteAssetIdsFromDocumentPageTemplateAssetKey: stub<\n            Parameters<AppBridgeTheme['deleteAssetIdsFromDocumentPageTemplateAssetKey']>\n        >().callsFake(async (documentPageId: number, key, assetIds) => {\n            deletedAssetIds[key] = [...(deletedAssetIds[key] ?? []), ...assetIds];\n        }),\n        getCoverPageTemplateSettings:\n            stub<Parameters<AppBridgeTheme['getCoverPageTemplateSettings']>>().resolves(localPageTemplateSettings),\n        getDocumentPageTemplateSettings:\n            stub<Parameters<AppBridgeTheme['getDocumentPageTemplateSettings']>>().resolves(localPageTemplateSettings),\n        getLibraryPageTemplateSettings:\n            stub<Parameters<AppBridgeTheme['getLibraryPageTemplateSettings']>>().resolves(localPageTemplateSettings),\n        getThemeSettings: stub<Parameters<AppBridgeTheme['getThemeSettings']>>().resolves(localThemeSettings),\n        createLink: stub<Parameters<AppBridgeTheme['createLink']>>().resolves(DocumentDummy.with(1)),\n        createLibrary: stub<Parameters<AppBridgeTheme['createLibrary']>>().resolves(DocumentDummy.with(1)),\n        createStandardDocument: stub<Parameters<AppBridgeTheme['createStandardDocument']>>().resolves(\n            DocumentDummy.with(1),\n        ),\n        createDocumentPage: stub<Parameters<AppBridgeTheme['createDocumentPage']>>().resolves(\n            DocumentPageDummy.with(1),\n        ),\n        createDocumentGroup: stub<Parameters<AppBridgeTheme['createDocumentGroup']>>().resolves(\n            DocumentGroupDummy.with(1, 0),\n        ),\n        createDocumentCategory: stub<Parameters<AppBridgeTheme['createDocumentCategory']>>().resolves(\n            DocumentCategoryDummy.with(1),\n        ),\n        createCoverPage: stub<Parameters<AppBridgeTheme['createCoverPage']>>().resolves(CoverPageDummy.with(1)),\n        updateLink: stub<Parameters<AppBridgeTheme['updateLink']>>().resolves(DocumentDummy.with(1)),\n        updateLibrary: stub<Parameters<AppBridgeTheme['updateLibrary']>>().resolves(DocumentDummy.with(1)),\n        updateStandardDocument: stub<Parameters<AppBridgeTheme['updateStandardDocument']>>().resolves(\n            DocumentDummy.with(1),\n        ),\n        updateDocumentPage: stub<Parameters<AppBridgeTheme['updateDocumentPage']>>().resolves(\n            DocumentPageDummy.with(1),\n        ),\n        updateDocumentGroup: stub<Parameters<AppBridgeTheme['updateDocumentGroup']>>().resolves(\n            DocumentGroupDummy.with(1, 0),\n        ),\n        updateDocumentCategory: stub<Parameters<AppBridgeTheme['updateDocumentCategory']>>().resolves(\n            DocumentCategoryDummy.with(1),\n        ),\n        updateCoverPage: stub<Parameters<AppBridgeTheme['updateCoverPage']>>().resolves(CoverPageDummy.with(1)),\n        updateLegacyCoverPage: stub<Parameters<AppBridgeTheme['updateLegacyCoverPage']>>().resolves(\n            CoverPageDummy.withLegacy(1),\n        ),\n        updateBrandportalLink: stub<Parameters<AppBridgeTheme['updateBrandportalLink']>>().resolves(\n            BrandportalLinkDummy.with(),\n        ),\n        updateCoverPageTemplateSettings: stub<\n            Parameters<AppBridgeTheme['updateCoverPageTemplateSettings']>\n        >().callsFake(async (pageTemplateSettingsUpdate) => {\n            localPageTemplateSettings = mergeDeep(localPageTemplateSettings, pageTemplateSettingsUpdate);\n        }),\n        updateDocumentPageTemplateSettings: stub<\n            Parameters<AppBridgeTheme['updateDocumentPageTemplateSettings']>\n        >().callsFake(async (pageTemplateSettingsUpdate) => {\n            localPageTemplateSettings = mergeDeep(localPageTemplateSettings, pageTemplateSettingsUpdate);\n        }),\n        updateLibraryPageTemplateSettings: stub<\n            Parameters<AppBridgeTheme['updateLibraryPageTemplateSettings']>\n        >().callsFake(async (pageTemplateSettingsUpdate) => {\n            localPageTemplateSettings = mergeDeep(localPageTemplateSettings, pageTemplateSettingsUpdate);\n        }),\n        updateThemeSettings: stub<Parameters<AppBridgeTheme['updateThemeSettings']>>().callsFake(\n            async (themeSettingsUpdate) => {\n                localThemeSettings = mergeDeep(localThemeSettings, themeSettingsUpdate);\n            },\n        ),\n        deleteCoverPage: stub<Parameters<AppBridgeTheme['deleteCoverPage']>>().resolves(),\n        deleteDocumentCategory: stub<Parameters<AppBridgeTheme['deleteDocumentCategory']>>().resolves(),\n        deleteDocumentGroup: stub<Parameters<AppBridgeTheme['deleteDocumentGroup']>>().resolves(),\n        deleteDocumentPage: stub<Parameters<AppBridgeTheme['deleteDocumentPage']>>().resolves(),\n        deleteLibrary: stub<Parameters<AppBridgeTheme['deleteLibrary']>>().resolves(),\n        deleteLink: stub<Parameters<AppBridgeTheme['deleteLink']>>().resolves(),\n        deleteStandardDocument: stub<Parameters<AppBridgeTheme['deleteStandardDocument']>>().resolves(),\n        getBrandId: stub<Parameters<AppBridgeTheme['getBrandId']>>().returns(brandId),\n        getBrandportalLink: stub<Parameters<AppBridgeTheme['getBrandportalLink']>>().resolves(\n            BrandportalLinkDummy.with(),\n        ),\n        getTranslationLanguage: stub<Parameters<AppBridgeTheme['getTranslationLanguage']>>().returns(language),\n        moveDocument: stub<Parameters<AppBridgeTheme['moveDocument']>>().resolves(DocumentDummy.with(DOCUMENT_ID_1)),\n        moveDocumentCategory: stub<Parameters<AppBridgeTheme['moveDocumentCategory']>>().resolves(\n            DocumentCategoryDummy.with(DOCUMENT_CATEGORY_ID_1),\n        ),\n        moveDocumentGroup: stub<Parameters<AppBridgeTheme['moveDocumentGroup']>>().resolves(\n            DocumentGroupDummy.with(DOCUMENT_CATEGORY_ID_1, 0),\n        ),\n        moveDocumentPage: stub<Parameters<AppBridgeTheme['moveDocumentPage']>>().resolves(\n            DocumentPageDummy.with(DOCUMENT_PAGE_ID_1),\n        ),\n        openNavigationManager: stub<Parameters<AppBridgeTheme['openNavigationManager']>>(),\n        updateDocumentPageTargets: stub<Parameters<AppBridgeTheme['updateDocumentPageTargets']>>().resolves(\n            UpdateTargetsDummy.with([TARGET_ID_1, TARGET_ID_2, TARGET_ID_3]),\n        ),\n        updateDocumentTargets: stub<Parameters<AppBridgeTheme['updateDocumentTargets']>>().resolves(\n            UpdateTargetsDummy.with([TARGET_ID_1, TARGET_ID_2, TARGET_ID_3]),\n        ),\n        searchInGuideline: stub<Parameters<AppBridgeTheme['searchInGuideline']>>().callsFake(async (query) => {\n            return Promise.resolve([\n                GuidelineSearchResultDummy.with(`${query}-1`),\n                GuidelineSearchResultDummy.with(`${query}-1`),\n                GuidelineSearchResultDummy.with(`${query}-3`),\n            ]);\n        }),\n        closeAssetChooser: stub<Parameters<AppBridgeTheme['closeAssetChooser']>>().callsFake(() => {\n            closeAssetChooser();\n        }),\n        openAssetChooser: stub<Parameters<AppBridgeTheme['openAssetChooser']>>().callsFake((callback) => {\n            openAssetChooser(callback);\n        }),\n        api: stub<Parameters<AppBridgeTheme['api']>>().resolves(),\n        state: stub<Parameters<AppBridgeTheme['state']>>().resolves(),\n        context: stub<Parameters<AppBridgeTheme['context']>>().resolves(),\n        subscribe: stub<Parameters<AppBridgeTheme['subscribe']>>().resolves(),\n        dispatch: stub<Parameters<AppBridgeTheme['dispatch']>>().resolves(),\n    };\n};\n"],"names":["BRAND_ID","PROJECT_ID","PORTAL_ID","DOCUMENT_GROUP_ID_1","DOCUMENT_GROUP_ID_2","DOCUMENT_GROUP_ID_3","DOCUMENT_ID_1","DOCUMENT_ID_2","DOCUMENT_ID_3","DOCUMENT_ID_4","DOCUMENT_ID_5","GROUPED_DOCUMENT_ID_1","GROUPED_DOCUMENT_ID_2","GROUPED_DOCUMENT_ID_3","GROUPED_DOCUMENT_ID_4","DOCUMENT_CATEGORY_ID_1","DOCUMENT_CATEGORY_ID_2","DOCUMENT_CATEGORY_ID_3","DOCUMENT_PAGE_ID_1","DOCUMENT_PAGE_ID_2","DOCUMENT_PAGE_ID_3","DOCUMENT_PAGE_ID_4","UNCATEGORIZED_DOCUMENT_PAGE_ID_1","UNCATEGORIZED_DOCUMENT_PAGE_ID_2","UNCATEGORIZED_DOCUMENT_PAGE_ID_3","DOCUMENT_SECTION_ID_1","DOCUMENT_SECTION_ID_2","DOCUMENT_SECTION_ID_3","DOCUMENT_PAGE_DUPLICATE_ID_1","TARGET_ID_1","TARGET_ID_2","TARGET_ID_3","getAppBridgeThemeStub","editorState","brandId","portalId","projectId","pageTemplateSettings","pageTemplateAssets","themeSettings","themeAssets","language","openAssetChooser","closeAssetChooser","spy","mitt","localPageTemplateSettings","localThemeSettings","deletedAssetIds","addedAssetIds","getAssets","themeOrTemplateAssets","assetsDiff","key","assets","addedAssetIdsList","deletedAssetIdsList","asset","id","AssetDummy","getTemplateAssets","getThemeAssets","stub","CoverPageDummy","DocumentDummy","DocumentGroupDummy","DocumentPageDummy","documentCategoryId","documentId","DocumentCategoryDummy","DocumentSectionDummy","ColorPaletteDummy","ColorDummy","DocumentPageDuplicateDummy","DocumentTargetsDummy","DocumentPageTargetsDummy","assetsIds","documentPageId","assetIds","BrandportalLinkDummy","pageTemplateSettingsUpdate","mergeDeep","themeSettingsUpdate","UpdateTargetsDummy","query","GuidelineSearchResultDummy","callback"],"mappings":"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"}